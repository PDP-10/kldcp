COMMENT ⊗   VALID 00068 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00007 00002		1) BEG11.DEC vs. 2) BEG11.1	SRCCOM	04-17-76	13:46	PAGES 1,1
C00008 00003		1) KLDCPT.DEC vs. 2) KLDCP.REG	SRCCOM	04-17-76	13:29	PAGES 1,1
C00017 00004		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 1,1
C00022 00005		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 8,7
C00024 00006		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 9,8
C00026 00007		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 10,9
C00028 00008		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 11,10
C00031 00009		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 12,11
C00033 00010		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 12,11
C00036 00011		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 12,11
C00039 00012		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 12,11
C00043 00013		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13
C00047 00014		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13
C00051 00015		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13
C00054 00016		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13
C00058 00017		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13
C00062 00018		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13
C00066 00019		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13
C00069 00020		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13
C00071 00021		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 21,18
C00073 00022
C00075 00023
C00079 00024
C00083 00025
C00087 00026
C00090 00027
C00094 00028
C00097 00029
C00100 00030
C00102 00031
C00104 00032		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 32,27
C00107 00033
C00111 00034
C00114 00035
C00117 00036
C00121 00037
C00125 00038
C00128 00039
C00131 00040
C00134 00041
C00137 00042		1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 41,34
C00141 00043
C00145 00044
C00149 00045
C00151 00046		1) CONS11.DEC vs. 2) CONS11.14	SRCCOM	04-17-76	13:46	PAGES 1,1
C00156 00047		1) CONS11.DEC vs. 2) CONS11.14	SRCCOM	04-17-76	13:46	PAGES 25,23
C00162 00048		1) CONS11.DEC vs. 2) CONS11.14	SRCCOM	04-17-76	13:46	PAGES 28,26
C00168 00049		1) CONS11.DEC vs. 2) CONS11.14	SRCCOM	04-17-76	13:46	PAGES 46,37
C00175 00050		1) BPNT11.DEC vs. 2) BPNT11.1	SRCCOM	04-17-76	13:59	PAGES 1,1
C00177 00051		1) SUB11.DEC vs. 2) SUB11.10	SRCCOM	04-17-76	14:00	PAGES 1,1
C00183 00052		1) SUB11.DEC vs. 2) SUB11.10	SRCCOM	04-17-76	14:00	PAGES 28,27
C00186 00053		1) FD11.DEC vs. 2) FD11.1	SRCCOM	04-17-76	14:20	PAGES 1,1
C00189 00054		1) DTA11.DEC vs. 2) DTA11.2	SRCCOM	04-17-76	14:21	PAGES 1,1
C00191 00055		1) RP0411.DEC vs. 2) RP0411.3	SRCCOM	04-17-76	14:22	PAGES 1,1
C00200 00056		1) BR11.DEC vs. 2) BR11.4	SRCCOM	04-17-76	14:25	PAGES 1,1
C00208 00057		1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 1,1
C00211 00058
C00213 00059
C00216 00060
C00219 00061
C00222 00062
C00225 00063
C00228 00064
C00231 00065
C00235 00066
C00238 00067
C00241 00068		1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5
C00244 ENDMK
C⊗;
	1) BEG11.DEC vs. 2) BEG11.1	SRCCOM	04-17-76	13:46	PAGES 1,1

******** BEG11.DEC **** PAGE 1  LINE 1
1)	.SBTTL	*BEGIN* PROGRAM CONTROL, 4-AUG-75
*** BEG11.1 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;;
2)	.SBTTL	*BEGIN* PROGRAM CONTROL, 4-AUG-75


******** BEG11.DEC **** PAGE 2  LINE 51
1)	EMTIMO:	↑D25000		;EM/DM TIMEOUT COUNT
*** BEG11.1 *** PAGE 3  LINE 52
2)	EMTIMO:	25000. 			;EM/DM TIMEOUT COUNT



	1) KLDCPT.DEC vs. 2) KLDCP.REG	SRCCOM	04-17-76	13:29	PAGES 1,1

******** KLDCPT.DEC **** PAGE 1  LINE 6
1)	;DECSYSTEM10 KL10 PDP-11 DIAGNOSTIC CONSOLE PROGRAM
1)	DECVER=007
1)	MCNVER=0
1)	.TITLE	KLDCP	DECSYSTEM10 KL10 PDP-11 DIAGNOSTIC CONSOLE PROGRAM, VER 0.7
1)	.LIST	MC,MD
1)	.DSABL	GBL
1)	.DSABL	REG
1)	.ABS
1)	.ENABL	AMA
1)	;JOHN R. KIRCHOFF
*** KLDCP.REG *** PAGE 1  LINE 6
2)	;DECSYSTEM10 KL10 PDP-11 DIAGNOSTIC CONSOLE PROGRAM
2)	DECVER==007
2)	MCNVER==0
2)	MITVER==%FNAM2
2)	.TITLE	KLDCP DECSYSTEM10 KL10 PDP-11 DIAGNOSTIC CONSOLE PROGRAM, VER 0.7
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;; 30 MAR 76  MODIFIED TO COEXIST WITH ITS IOELEVEN PROGRAM


******** KLDCPT.DEC **** PAGE 3  LINE 3
1)	KLDCP=	1	;ASSEMBLE KLDCP
1)	DTEASB=	1	;ASSEMBLE DTE20
1)	DVSASB=	1	;ASSEMBLE DEVICE SERVICE
1)	KWASB=	1	;ASSEMBLE KW CLOCK
1)	DLASB=	1	;ASSEMBLE DL11
1)	;DHASB=	1	;ASSEMBLE DH11
1)	;TAASB=	1	;ASSEMBLE TA CASSETTE
1)	RXASB=	1	;ASSEMBLE RX11/RX01 FLOPPY
1)	TCASB=	1	;ASSEMBLE TC DECTAPE
1)	RPASB=	1	;ASSEMBLE RP04 DISK PACK
1)	LPASB=	1	;ASSEMBLE LP20 LINE PRINTER
1)	$NB=	8.	;USE 8 BREAKPOINTS
1)	;SUBROUTINE CODE BEGINS AT 16K (WORDS)
1)	PRGSRT	=16.*1024.*2.
1)	COREND	=28.*1024.*2.
1)	TOUTBF=	70000	;OVERLAY BUFFER
1)	;PDP-10 KL10 EXEC PROCESS TABLE PARAMETERS
1)	$STD=	440	;PDP-10 DIAGNOSTIC START ADDRESS
1)	$DDT=	441	;PDP-10 DDT START ADDRESS
1)	$STL=	442	;PDP-10 LOADER START ADDRESS
1)	$STM=	443	;PDP-10 MONITOR START ADDRESS
1)	$DTFLG=	444	;DTE20 OPERATION COMPLETE FLAG
1)	$DTCLK=	445	;DTE20 CLOCK INTERRUPT FLAG
1)	$DTCI=	446	;DTE20 CLOCK INTERRUPT INSTRUCTION
1)	$DTT11=	447	;DTE20 10 TO 11 ARGUMENT
1)	$DTF11=	450	;DTE20 11 TO 10 ARGUMENT
1)	$DTCMD=	451	;DTE20 TO 11 COMMAND WORD
1)	$DTSEQ=	452	;DTE20 OPERATION SEQUENCE NUMBER
1)	$DTOPR=	453	;DTE20 OPERATION IN PROGRESS FLAG
1)	$DTCHR=	454	;DTE20 LAST TYPED CHARACTER
1)	$DTMTD=	455	;DTE20 MONITOR TTY OUTPUT COMPLETE FLAG
1)	$DTMTI=	456	;DTE20 MONITOR TTY INPUT FLAG
1)	$DTSWR=	457	;DTE20 PDP-10 SWITCH REGISTER
1)	;KLDCPU UTILITY PROGRAM PARAMETERS
1)	;UTILITY IDENTIFICATION
1)	PID=	3004	;PROGRAM NAME
1)	PDVER=	3010	;DEC VERSION
1)	PMVER=	3012	;MCN VERSION
1)	;UTILITY SUB-PROGRAM DISPATCH ADDRESSES
1)	PTABLE=	3020	;START OF TABLE
1)	RXCOPY=	3020	;RX11/RX01 FLOPPY COPY PROGRAM
1)	DTCOPY=	3022	;TC11 DECTAPE COPY PROGRAM
1)	WFILE=	3024	;WRITE FILE FROM DTA/RX TO RP04 PROGRAM
1)	TAPT=	3026	;TRANSFER FILE FROM APT10 TO RP04 PROGRAM
1)	DSKDIR=	3030	;RP04 DISK DIRECTORY
1)	REMOTE=	3032	;REMOTE TELETYPE COMMUNICATIONS
*** KLDCP.REG *** PAGE 2  LINE 20
2)	.ABS
2)	;.ENABL	AMA	;AMERICAN MEDICAL ASSOC?  DOES ANYONE KNOW WHAT THIS DOES?
2)	;JOHN R. KIRCHOFF
2)	;DIGITAL EQUIPMENT CORPORATION
2)	;MARLBORO, MASS. 01752
2)	;ASSEMBLY PARAMETERS
2)	;IF SYMBOL IS DEFINED, FROB GETS ASSEMBLED
2)	KLDCP==1	;ASSEMBLE KLDCP
2)	DTEASB==1	;ASSEMBLE DTE20
2)	DVSASB==1	;ASSEMBLE DEVICE SERVICE
2)	KWASB==1	;ASSEMBLE KW CLOCK
2)	DLASB==1	;ASSEMBLE DL11
2)	;DHASB==1	;ASSEMBLE DH11
2)	;TAASB==1	;ASSEMBLE TA CASSETTE
2)	RXASB==1	;ASSEMBLE RX11/RX01 FLOPPY
2)	TCASB==1	;ASSEMBLE TC DECTAPE
2)	RPASB==1	;ASSEMBLE RP04 DISK PACK
2)	;LPASB==1	;ASSEMBLE LP20 LINE PRINTER
2)	$NB==8.	;USE 8 BREAKPOINTS
2)	;SUBROUTINE CODE BEGINS AT 16K (WORDS)
2)	.IIF NDF PRGSRT, PRGSRT==16.*1024.*2.
2)	.IIF NDF COREND, COREND==28.*1024.*2.
2)	TOUTBF==70000	;OVERLAY BUFFER
2)	;PDP-10 KL10 EXEC PROCESS TABLE PARAMETERS
2)	$STD==440	;PDP-10 DIAGNOSTIC START ADDRESS
2)	$DDT==441	;PDP-10 DDT START ADDRESS
2)	$STL==442	;PDP-10 LOADER START ADDRESS
2)	$STM==443	;PDP-10 MONITOR START ADDRESS
2)	$DTFLG==444	;DTE20 OPERATION COMPLETE FLAG
2)	$DTCLK==445	;DTE20 CLOCK INTERRUPT FLAG
2)	$DTCI==446	;DTE20 CLOCK INTERRUPT INSTRUCTION
2)	$DTT11==447	;DTE20 10 TO 11 ARGUMENT
2)	$DTF11==450	;DTE20 11 TO 10 ARGUMENT
2)	$DTCMD==451	;DTE20 TO 11 COMMAND WORD
2)	$DTSEQ==452	;DTE20 OPERATION SEQUENCE NUMBER
2)	$DTOPR==453	;DTE20 OPERATION IN PROGRESS FLAG
2)	$DTCHR==454	;DTE20 LAST TYPED CHARACTER
2)	$DTMTD==455	;DTE20 MONITOR TTY OUTPUT COMPLETE FLAG
2)	$DTMTI==456	;DTE20 MONITOR TTY INPUT FLAG
2)	$DTSWR==457	;DTE20 PDP-10 SWITCH REGISTER
2)	;KLDCPU UTILITY PROGRAM PARAMETERS
2)	;UTILITY IDENTIFICATION
2)	PID==3004	;PROGRAM NAME
2)	PDVER==3010	;DEC VERSION
2)	PMVER==3012	;MCN VERSION
2)	;UTILITY SUB-PROGRAM DISPATCH ADDRESSES
2)	PTABLE==3020	;START OF TABLE
2)	RXCOPY==3020	;RX11/RX01 FLOPPY COPY PROGRAM
2)	DTCOPY==3022	;TC11 DECTAPE COPY PROGRAM
2)	WFILE==3024	;WRITE FILE FROM DTA/RX TO RP04 PROGRAM
2)	TAPT==3026	;TRANSFER FILE FROM APT10 TO RP04 PROGRAM
2)	DSKDIR==3030	;RP04 DISK DIRECTORY
2)	REMOTE==3032	;REMOTE TELETYPE COMMUNICATIONS
2)	XMEMSZ==512.	;# K OF PDP10 MEMORY TO CLEAR IN MZ 0,-1
2)	FUQ::		;THIS IS HERE TO AVOID GETTING A "LOCAL TAG BEFORE
2)			;FIRST LABEL" ERROR MESSAGE FROM BAG-BITING PALX
2)			;(THERE ARE MACRO DEFINITIONS WITH LOCAL TAGS IN THEM)
2)	;INSERT THE REST OF KLDCP
2)	.INSRT	PRM11.13
2)	.INSRT	BEG11.1
2)	.INSRT	CONS11.14
2)	.INSRT	BPNT11.1
2)	.INSRT	SUB11.10
2)	.INSRT	FD11.1
2)	.INSRT	DTA11.2
2)	.INSRT	FLOPPY.1
2)	.INSRT	RP0411.3
2)	.INSRT	APT11.2
2)	.INSRT	CDMP11.1
2)	.INSRT	BR11.4
2)	.INSRT	SBST11.9
2)	.END $ILOAD
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 1,1

1)	.SBTTL	*PRM11* DECSYSTEM10 PDP-11 PROGRAM/SUBROUTINE PARAMETERS, 4-AUG-75
1)	;PROGRAM CONTROL SWITCHES
1)	ABORT=	100000		;ABORT AT PROGRAM PASS COMPLETION
1)	RSTART=	40000		;RESTART TEST
1)	TOTALS=	20000		;PRINT TEST TOTALS
1)	NOPNT=	10000		;INHIBIT ALL PRINT OUT (EXCEPT FORCED)
1)	PNTLPT=	4000		;PRINT ON LINE-PRINTER
1)	DING=	2000		;RING TTY BELL ON ERROR
1)	LOOPER=	1000		;LOOP ON ERROR
1)	ERSTOP= 400		;HALT ON ERROR
1)	PALERS=	200		;PRINT ALL ERRORS
1)	RELIAB=	100		;RELIABILITY RUN MODE
1)	TXTINH=	40		;TEXT INHIBIT
1)	INHPAG=	20		;INHIBIT PAGING (PDP-10)
1)	MODDVC=	10		;MODIFY DEVICE CODE (PDP-10)
1)	INHCSH=	4		;INHIBIT CACHE (PDP-10)
1)	OPRSEL=	2		;OPERATOR SELECTION
1)	CHAIN=	1		;CHAIN CONTROL SWITCH
1)	;OPERATOR DEFINITION - SUBROUTINE CALLS
1)	FATAL=	EMT!0	;FATAL PROGRAMMING ERROR.
*** PRM11.13 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;;
2)	.SBTTL	*PRM11* DECSYSTEM10 PDP-11 PROGRAM/SUBROUTINE PARAMETERS, 4-AUG-75
2)	;PROGRAM CONTROL SWITCHES
2)	ABORT==100000		;ABORT AT PROGRAM PASS COMPLETION
2)	RSTART==40000		;RESTART TEST
2)	TOTALS==20000		;PRINT TEST TOTALS
2)	NOPNT==10000		;INHIBIT ALL PRINT OUT (EXCEPT FORCED)
2)	PNTLPT==4000		;PRINT ON LINE-PRINTER
2)	DING==2000		;RING TTY BELL ON ERROR
2)	LOOPER==1000		;LOOP ON ERROR
2)	ERSTOP==400		;HALT ON ERROR
2)	PALERS==200		;PRINT ALL ERRORS
2)	RELIAB==100		;RELIABILITY RUN MODE
2)	TXTINH==40		;TEXT INHIBIT
2)	INHPAG==20		;INHIBIT PAGING (PDP-10)
2)	MODDVC==10		;MODIFY DEVICE CODE (PDP-10)
2)	INHCSH==4		;INHIBIT CACHE (PDP-10)
2)	OPRSEL==2		;OPERATOR SELECTION
2)	CHAIN==1		;CHAIN CONTROL SWITCH
2)	;OPERATOR DEFINITION - SUBROUTINE CALLS
2)	.SBTTL EMT DEFS
2)	FATAL=	EMT!0	;FATAL PROGRAMMING ERROR.


******** PRM11.DEC **** PAGE 8  LINE 1
1)		$$CLIT=$$LITT	;LITERAL STORAGE ASSIGNMENT
1)	.MACRO	PMSG	$ARG
*** PRM11.13 *** PAGE 7  LINE 2
2)	.SBTTL MACRO DEFS
2)	.IIF P2, $$CLIT==$$LITT	;LITERAL STORAGE ASSIGNMENT
2)	.IELSE   $$CLIT==2000	;DOESN'T MATTER ON PASS 1 BUT HAS TO BE DEFINED
2)	.MACRO	PMSG	$ARG


******** PRM11.DEC **** PAGE 8  LINE 6
1)			.NLIST	SRC
1)			$$CLC=.
1)			.=$$CLIT
1)			.ASCIZ	%$ARG%
1)			$$CLIT=.
1)			.=$$CLC
1)			.LIST	SRC
1)	.ENDM
*** PRM11.13 *** PAGE 7  LINE 10
2)	;		.NLIST	SRC
2)			$$CLC==.
2)			.=$$CLIT
2)			.ASCIZ	↔$ARG↔
2)			$$CLIT==.
2)			.=$$CLC
2)	;		.LIST	SRC
2)	.ENDM


******** PRM11.DEC **** PAGE 8  LINE 18
1)			.NLIST	SRC
1)			$$CLC=.
1)			.=$$CLIT
1)			.ASCIZ	%$ARG%
1)			$$CLIT=.
1)			.=$$CLC
1)			.LIST	SRC
1)	.ENDM
*** PRM11.13 *** PAGE 7  LINE 22
2)	;		.NLIST	SRC
2)			$$CLC==.
2)			.=$$CLIT
2)			.ASCIZ	↔$ARG↔
2)			$$CLIT==.
2)			.=$$CLC
2)	;		.LIST	SRC
2)	.ENDM


******** PRM11.DEC **** PAGE 8  LINE 30
1)			.NLIST	SRC
1)			$$CLC=.
1)			.=$$CLIT
1)			.ASCIZ	%$ARG%
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 8,7

1)			.EVEN
1)			$$CLIT=.
1)			.=$$CLC
1)			.LIST	SRC
1)	.ENDM
*** PRM11.13 *** PAGE 7  LINE 34
2)	;		.NLIST	SRC
2)			$$CLC==.
2)			.=$$CLIT
2)			.ASCIZ	↔$ARG↔
2)			.EVEN
2)			$$CLIT==.
2)			.=$$CLC
2)	;		.LIST	SRC
2)	.ENDM


******** PRM11.DEC **** PAGE 9  LINE 4
1)			.NLIST	SRC
1)		  .IRP	B,<A>
1)		  MOV	B,-(SP)	;PUSH B ON STACK
1)		  .ENDR
1)			.LIST	SRC
1)	.ENDM
1)	.MACRO	POP	A
1)			.NLIST	SRC
1)		  .IRP	B,<A>
1)		  MOV	(SP)+,B	;POP STACK INTO B
1)		  .ENDR
1)			.LIST	SRC
1)	.ENDM
*** PRM11.13 *** PAGE 8  LINE 5
2)	;		.NLIST	SRC
2)		  .IRP	B,<A>
2)		  MOV	B,-(SP)	;PUSH B ON STACK
2)		  .ENDM
2)	;		.LIST	SRC
2)	.ENDM
2)	.MACRO	POP	A
2)	;		.NLIST	SRC
2)		  .IRP	B,<A>
2)		  MOV	(SP)+,B	;POP STACK INTO B
2)		  .ENDM
2)	;		.LIST	SRC
2)	.ENDM


******** PRM11.DEC **** PAGE 9  LINE 25
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 9,8

1)			.IF	EQ,X&1
1)			.IFT
*** PRM11.13 *** PAGE 8  LINE 26
2)			.IF EQ X&1
2)			.IFT


******** PRM11.DEC **** PAGE 9  LINE 35
1)			$$CLC=.
1)			.=$$CLIT
*** PRM11.13 *** PAGE 8  LINE 36
2)			$$CLC==.
2)			.=$$CLIT


******** PRM11.DEC **** PAGE 9  LINE 39
1)		  .IIF	B,<$LARG>,0
1)		  .IIF	NB,<$LARG>,$LARG
1)			.EVEN
1)			$$CLIT=.
1)			.=$$CLC
*** PRM11.13 *** PAGE 8  LINE 40
2)		  .IIF	B <$LARG>,0
2)		  .IIF	NB <$LARG>,$LARG
2)			.EVEN
2)			$$CLIT==.
2)			.=$$CLC


******** PRM11.DEC **** PAGE 10  LINE 2
1)			.NLIST	SRC
1)			.IF	GT,NUM-7
1)			.IFT
1)		  SWAB	REG
1)			.REPT	NUM-↑D8
1)		  ASL	REG
*** PRM11.13 *** PAGE 9  LINE 3
2)	;		.NLIST	SRC
2)			.IF	GT NUM-7
2)			.IFT
2)		  SWAB	REG
2)			.REPT	NUM-8.
2)		  ASL	REG


******** PRM11.DEC **** PAGE 10  LINE 14
1)			.LIST	SRC
1)	.ENDM
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 10,9

1)	.MACRO	SR	REG,NUM
1)			.NLIST	SRC
1)			.IF	GT,NUM-7
1)			.IFT
1)		  SWAB	REG
1)			.REPT	NUM-↑D8
1)		  ASR	REG
*** PRM11.13 *** PAGE 9  LINE 15
2)	;		.LIST	SRC
2)	.ENDM
2)	.MACRO	SR	REG,NUM
2)	;		.NLIST	SRC
2)			.IF	GT NUM-7
2)			.IFT
2)		  SWAB	REG
2)			.REPT	NUM-8.
2)		  ASR	REG


******** PRM11.DEC **** PAGE 10  LINE 30
1)			.LIST	SRC
1)	.ENDM
1)	.MACRO	EXOR	REG,DESTIN,SCRTCH
1)			.IF	NB,SCRTCH
1)			.IFT
*** PRM11.13 *** PAGE 9  LINE 31
2)	;		.LIST	SRC
2)	.ENDM
2)	.MACRO	EXOR	REG,DESTIN,SCRTCH
2)			.IF	NB SCRTCH
2)			.IFT


******** PRM11.DEC **** PAGE 11  LINE 3
1)	STACK=	157776		;INITIAL STACK POINTER
1)	CONSOL=	100000		;CONSOLE START ADDRESS
1)	CBIT=	1		;CARRY BIT
1)	NBIT=	10		;NEGATIVE BIT
1)	ZBIT=	4		;ZERO BIT
1)	VBIT=	2		;OVERFLOW BIT
1)	TBIT=	20		;TRAP BIT
1)	;REGISTER DEFINITIONS
*** PRM11.13 *** PAGE 10  LINE 4
2)	.IIF NDF STACK,STACK=157776		;INITIAL STACK POINTER
2)	.IIF NDF CONSOL,CONSOL=100000		;CONSOLE START ADDRESS
2)	CBIT==1		;CARRY BIT
2)	NBIT==10	;NEGATIVE BIT
2)	ZBIT==4		;ZERO BIT
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 11,10

2)	VBIT==2		;OVERFLOW BIT
2)	TBIT==20	;TRAP BIT
2)	;REGISTER DEFINITIONS


******** PRM11.DEC **** PAGE 11  LINE 26
1)	RESVED=	0		;RESERVED
1)	ERRVEC=	4		;TIME OUT, BUS ERROR
1)	RESVEC=	10		;RESERVED INSTRUCTION
1)	TRTVEC=	14		;BREAK POINT VECTOR
1)	IOTVEC=	20		;IOT TRAP VECTOR
1)	PWRVEC=	24		;POWER FAIL TRAP VECTOR
1)	EMTVEC=	30		;EMT TRAP VECTOR
1)	TRAPVEC=34		;"TRAP" TRAP VECTOR
1)	TKVEC=	60		;TTY KEYBOARD VECTOR
1)	TPVEC=	64		;TTY PRINTER VECTOR
1)	TA11=	260		;CASSETTE TAPE READER
1)	TC11=	214		;DECTAPE VECTOR
1)	TBITVEC=14
1)	BPTVEC= 14
1)	;PDP11/40 STANDARD ADDRESS ASSIGNMENTS
*** PRM11.13 *** PAGE 10  LINE 27
2)	RESVED==0		;RESERVED
2)	ERRVEC==4		;TIME OUT, BUS ERROR
2)	RESVEC==10		;RESERVED INSTRUCTION
2)	TRTVEC==14		;BREAK POINT VECTOR
2)	IOTVEC==20		;IOT TRAP VECTOR
2)	PWRVEC==24		;POWER FAIL TRAP VECTOR
2)	EMTVEC==30		;EMT TRAP VECTOR
2)	TRAPVEC==34		;"TRAP" TRAP VECTOR
2)	TKVEC==60		;TTY KEYBOARD VECTOR
2)	TPVEC==64		;TTY PRINTER VECTOR
2)	TA11==260		;CASSETTE TAPE READER
2)	TC11==214		;DECTAPE VECTOR
2)	TBITVEC==14
2)	BPTVEC==14
2)	;PDP11/40 STANDARD ADDRESS ASSIGNMENTS


******** PRM11.DEC **** PAGE 12  LINE 3
1)	BIT00=	1
1)	BIT0=	BIT00
1)	BIT01=	2
1)	BIT1=	BIT01
1)	BIT02=	4
1)	BIT2=	BIT02
1)	BIT03=	10
1)	BIT3=	BIT03
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 12,11

1)	BIT04=	20
1)	BIT4=	BIT04
1)	BIT05=	40
1)	BIT5=	BIT05
1)	BIT06=	100
1)	BIT6=	BIT06
1)	BIT07=	200
1)	BIT7=	BIT07
1)	BIT08=	400
1)	BIT8=	BIT08
1)	BIT09=	1000
1)	BIT9=	BIT09
1)	BIT10=	2000
1)	BIT11=	4000
1)	BIT12=	10000
1)	BIT13=	20000
1)	BIT14=	40000
1)	BIT15=	100000
1)	;PRIORITY ASSIGNMENTS
1)	PR0= 000
1)	PR1= 040
1)	PR2= 100
1)	PR3= 140
1)	PR4= 200
1)	PR5= 240
1)	PR6= 300
1)	PR7= 340
1)	;CHARACTERS USED
1)	MSWCHR=	030		; MONITOR TO "KLDCP" SWITCH CHAR, CONTROL X
1)	TEXTERM=0		; TERMINATES TEXT
1)	TAB=	11		; TAB
1)	CNTRLI=	11		; CONTROL-I (TAB)
1)	LF=	12		; LINE FEED
1)	VT=	13		; VERTICAL TAB
1)	FF=	14		; FORM FEED
1)	CR=	15		; CARRIAGE RETURN
1)	BELL=	7		; BELL
1)	BLANK=	40		; BLANK (SPACE)
1)	SPACE=	40		; SPACE
1)	COMMA=	54		; COMMA
1)	SLASH=	57		; SLASH
1)	BKSLH=	134		; BACK SLASH
1)	BKARW=	137		; BACK ARROW
1)	XOFF=	023		; X-OFF		(CONTROL S)
1)	XON=	021		; X-ON		(CONTROL Q)
1)	CNTRLO=	017		; CONTROL O
1)	CNTRLU=	025		; CONTROL U
1)	CNTRLA=	001		; CONTROL A
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 12,11

1)	CNTRLC=	003		; CONTROL C
1)	CNTRLD=	004		; CONTROL D
1)	CNTRLK=	013		; CONTROL K
1)	CNTRLL=	14		; CONTROL L
1)	CNTRLR=	022		; CONTROL R
1)	CNTRLT=	024		; CONTROL T
1)	CNTRLX=	030		; CONTROL X
1)	CNTRLZ=	032		; CONTROL Z
1)	RUBOUT=	177		; RUB OUT
1)	ALTMOD=	33		; ALTMODE
1)	ETB=	27		; END OF TRANSMISSION BLOCK	(CONTROL W)
1)	NULL=	026		; NULL FILLER CHAR
1)	SYN=	001		; COMMUNICATIONS SYNC CHAR (CONTROL A)
1)	.NLIST
1)	.IF	DF,DTEASB
1)	.LIST
1)	.SBTTL 	DTE20 DEVICE REGISTER AND BIT DEFINITIONS, 4-JUNE-75
1)	DTEADR=	174400		;ADDRESS OF (FIRST) DTE20 DEVICE REGISTER BLOCK
1)	DTESIZ=	000040		;SPACING BETWEEN CONSECUTIVE DTE20'S
1)	DTEMAX=	4		;MAXIMUM NUMBER OF DTE20'S ON ONE PDP-11
1)	DTESZS=	5		;SHIFT TO CONVERT DTE ADDRESS TO DTE #
1)	.IF	DF,DTEDEF
1)	;OFFSETS FROM THE BASE OF THE DTE20 DEVICE REGISTER BLOCK
*** PRM11.13 *** PAGE 11  LINE 4
2)	BIT00==1
2)	BIT0==BIT00
2)	BIT01==2
2)	BIT1==BIT01
2)	BIT02==4
2)	BIT2==BIT02
2)	BIT03==10
2)	BIT3==BIT03
2)	BIT04==20
2)	BIT4==BIT04
2)	BIT05==40
2)	BIT5==BIT05
2)	BIT06==100
2)	BIT6==BIT06
2)	BIT07==200
2)	BIT7==BIT07
2)	BIT08==400
2)	BIT8==BIT08
2)	BIT09==1000
2)	BIT9==BIT09
2)	BIT10==2000
2)	BIT11==4000
2)	BIT12==10000
2)	BIT13==20000
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 12,11

2)	BIT14==40000
2)	BIT15==100000
2)	;PRIORITY ASSIGNMENTS
2)	PR0==000
2)	PR1==040
2)	PR2==100
2)	PR3==140
2)	PR4==200
2)	PR5==240
2)	PR6==300
2)	PR7==340
2)	;CHARACTERS USED
2)	MSWCHR==377		; MONITOR TO "KLDCP" SWITCH CHAR, HACKED BY BREAK
2)	TEXTERM=0		; TERMINATES TEXT
2)	TAB==11			; TAB
2)	CNTRLI==11		; CONTROL-I (TAB)
2)	LF==12			; LINE FEED
2)	VT==13			; VERTICAL TAB
2)	FF==14			; FORM FEED
2)	CR==15			; CARRIAGE RETURN
2)	BELL==7			; BELL
2)	BLANK==40		; BLANK (SPACE)
2)	SPACE==40		; SPACE
2)	COMMA==54		; COMMA
2)	SLASH==57		; SLASH
2)	BKSLH==134		; BACK SLASH
2)	BKARW==137		; BACK ARROW
2)	XOFF==023		; X-OFF		(CONTROL S)
2)	XON==021		; X-ON		(CONTROL Q)
2)	CNTRLO==017		; CONTROL O
2)	CNTRLU==025		; CONTROL U
2)	CNTRLA==001		; CONTROL A
2)	CNTRLC==003		; CONTROL C
2)	CNTRLD==004		; CONTROL D
2)	CNTRLK==013		; CONTROL K
2)	CNTRLL==14		; CONTROL L
2)	CNTRLR==022		; CONTROL R
2)	CNTRLT==024		; CONTROL T
2)	CNTRLX==030		; CONTROL X
2)	CNTRLZ==032		; CONTROL Z
2)	RUBOUT==177		; RUB OUT
2)	ALTMOD==33		; ALTMODE
2)	ETB==27			; END OF TRANSMISSION BLOCK	(CONTROL W)
2)	NULL==026		; NULL FILLER CHAR
2)	SYN==001		; COMMUNICATIONS SYNC CHAR (CONTROL A)
2)	;.NLIST
2)	.IF	DF DTEASB
2)	;.LIST
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 12,11

2)	.SBTTL 	DTE20 DEVICE REGISTER AND BIT DEFINITIONS, 4-JUNE-75
2)	DTEADR=174400		;ADDRESS OF (FIRST) DTE20 DEVICE REGISTER BLOCK
2)	DTESIZ==000040		;SPACING BETWEEN CONSECUTIVE DTE20'S
2)	DTEMAX==4		;MAXIMUM NUMBER OF DTE20'S ON ONE PDP-11
2)	DTESZS==5		;SHIFT TO CONVERT DTE ADDRESS TO DTE #
2)	.IF	DF DTEDEF
2)	;OFFSETS FROM THE BASE OF THE DTE20 DEVICE REGISTER BLOCK


******** PRM11.DEC **** PAGE 14  LINE 14
1)	DLYCNT=	00		;DELAY COUNT			(ADDRESS XXXX00)
1)	DEXWD3=	02		;DEPOSIT OR EXAMINE WORD 3	(ADDRESS XXXX02)
1)	DEXWD2=	04		;DEPOSIT OR EXAMINE WORD 2	(ADDRESS XXXX04)
1)	DEXWD1=	06		;DEPOSIT OR EXAMINE WORD 1	(ADDRESS XXXX06)
1)	TENAD1=	10		;10 ADDRESS WORD 1 FOR DEX	(ADDRESS XXXX10)
1)	TENAD2=	12		;10 ADDRESS WORD 2 FOR DEX	(ADDRESS XXXX12)
1)	TO10BC=	14		;TO10 BYTE COUNT		(ADDRESS XXXX14)
1)	TO11BC=	16		;TO11 BYTE COUNT		(ADDRESS XXXX16)
1)	TO10AD=	20		;TO10 PDP11 MEMORY ADDRESS	(ADDRESS XXXX20)
1)	TO11AD=	22		;TO11 PDP11 MEMORY ADDRESS	(ADDRESS XXXX22)
1)	TO10DT=	24		;TO10 PDP11 DATA WORD		(ADDRESS XXXX24)
1)	TO11DT=	26		;TO11 PDP11 DATA WORD		(ADDRESS XXXX26)
1)	; THE LAST 4 REGISTERS ARE INITIALIZED BY "INIT" (BECAUSE THEY ARE IN FLIP-FLOPS)
1)	DIAG1=	30		;DIAGNOSTIC WORD 1		(ADDRESS XXXX30)
1)	DIAG2=	32		;DIAGNOSTIC WORD 2		(ADDRESS XXXX32)
1)	STATUS=	34		;10/11 INTERFACE STATUS WORD	(ADDRESS XXXX34)
1)	DIAG3=	36		;DIAGNOSTIC WORD 3		(ADDRESS XXXX36)
1)	.ENDC
1)	;  THE FOLLOWING ARE THE ADDRESSES OF THE DTE20 INTERRUPT VECTORS
1)	DTEIV0=	774		;INTERRUPT VECTOR FOR DTE20 #0
1)	DTEIV1=	770		;INTERRUPT VECTOR FOR DTE20 #1
1)	DTEIV2=	764		;INTERRUPT VECTOR FOR DTE20 #2
1)	DTEIV3=	760		;INTERRUPT VECTOR FOR DTE20 #3
1)	;BIT ASSIGNMENTS FOR 10/11 INTERFACE REGISTERS
1)	;BIT ASSIGNMENTS FOR TENAD1
1)	PHYS=	BIT15		;EXAMINE/DEP PHYSICAL ADDRESS
1)	USEVIR=	BIT14!BIT13	;EX/DP USER VIRTUAL ADDRESS
1)	XUPT=	BIT14		;EX/DP VIA USER PROCESS TABLE
1)	EXVIRT=	BIT13		;EX/DP EXEC VIRTUAL ADDRESS
1)	DEP=	BIT12		;MODE BIT FOR DEPOSIT (0=EXAMINE)
1)	PRTOFF=	BIT11		;PROTECT OFF
1)	XEPT=	0		;EX/DP VIA EXEC PROCESS TABLE
1)	;BIT ASSIGNMENTS FOR TO11BC
1)	INT10=	BIT15		;SET DONE AND INTERRUPT BOTH 10 AND 11
1)	ZSTOP=	BIT14		;STOP ON NULL (ZERO) CHARACTER
1)	BYTE2=	BIT13		;TWO EIGHT BIT BYTES PER WORD
1)	TO11BM=	BIT13		;TO-11 BYTE MODE
1)	;BIT ASSIGNMENTS FOR DIAG1 (WRITE)
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13

1)	DS00=	BIT15		;DIAGNOSTIC STATUS
1)	DS01=	BIT14		; "
1)	DS02=	BIT13		; "
1)	DS03=	BIT12		; "
1)	DS04=	BIT11		; "
1)	DS05=	BIT10		; "
1)	DS06=	BIT9		; "
1)	DFUNC=	BIT7		;DOING DIAGNOSTIC FUNCTION (DFRD,DFWRT,DFXCT)
1)	PULSE=	BIT4!BIT5	;SINGLE PULSE THE 10/11 CLOCK (ALSO SETS
1)				;10/11 DIAGNOSTIC MODE)
1)	DCOMST=	BIT0		;DIAGNOSTIC COMMAND START
1)	DCSRT=	BIT0		;DIAGNOSTIC COMMAND START (NEW NAME FOR DCOMST)
1)	DSEND=	BIT2		;SEND THE EBUS DURING DIAGNOSTIC FUNCTION
1)	DIKL10=	BIT3		;KL10 DIAGNOSTIC MODE
1)	D1011=	BIT5		;10/11 INTERFACE DIAGNOSTIC MODE
1)	;BIT ASSIGNMENTS FOR DIAG1 (READ)
1)	TO10=	BIT7		;INTERFACE MAJOR STATE = TO10 TRANSFER
1)	DEX=	BIT8		;    "       "     "   = DEPOSIT OR EXAMINE
1)	TO11=	BIT6		;    "       "     "   = TO11 TRANSFER
1)	VEC04=	BIT4		;VECTOR INTERRUPT ADDRESS BIT 4
1)	VEC03=	BIT3		;  "        "        "     "  3
1)	VEC02=	BIT2		;  "        "        "     "  2
1)	HALTLP=	BIT9		;EBOX IS IN HALT LOOP
1)	KLRUN=	BIT10		;RUN FLOP, KL IS EXECUTING INSTRUCTIONS
1)	ERRSTP=	BIT11		;EBOX CLOCK STOPPED DUE TO ERROR
1)	;BIT ASSIGNMENTS FOR DIAG2 (WRITE)
1)	EDONES=	BIT14		;SET EBUS DONE
1)	DRESET=	BIT6		;PERFORM DIAGNOSTIC CLEAR
1)	;BIT ASSIGNMENTS FOR DIAG2 (READ)
1)	;BIT ASSIGNMENTS FOR DIAG3 (WRITE)
1)	SCD=	BIT5		;SHIFT CAPTURED DATA (PARITY ERROR DATA)
1)	CDD=	BIT4		;CLEAR DUPE & DURE ERROR FLAGS
1)	WEP=	BIT3		;WRITE EVEN (BAD) PARITY
1)	CNUPE=	BIT1		;CLEAR NUPE
1)	TO10BM=	BIT0		;TO-10 TRANSFER BYTES FROM THE 11
1)	;BIT ASSIGNMENTS FOR DIAG3 (READ)
1)	RFMAD0=	BIT15		;RFM ADDRESS BIT 0
1)	RFMAD1=	BIT14		; "     "     "  1
1)	RFMAD2=	BIT13		; "     "     "  2
1)	RFMAD3=	BIT12		; "     "     "  3
1)	;BIT ASSIGNMENTS FOR DIAG3 (READ)
1)	SWSLFT=	BIT15		;SWAP SELECT LEFT
1)	CAB08=	BIT14		;CAPTURED UNIBUS ADDRESS BIT 08
1)	DUPE=	BIT4		;DATO UNIBUS PARITY ERROR
1)	DURE=	BIT2		;DATO UNIBUS RECIEVER ERROR
1)	NUPE=	BIT1		;NPR UNIBUS PARITY ERROR
1)	UPECD=	BIT13!BIT12!BIT11!BIT10!BIT9	;UNIBUS PARITY ERR, CAPTURED DATA
1)	;BIT ASSIGNMENTS FOR STATUS (WRITE)
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13

1)	DON10S=	BIT15		;SET TO10 DONE
1)	DON10C=	BIT14		;CLEAR TO10 DONE
1)	ERR10S=	BIT13		;SET TO10 ERROR
1)	ERR10C=	BIT12		;CLEAR TO10 ERROR
1)	INT11S=	BIT11		;SET 10 REQ INTERRUPT (INTERRUPTS 11)
1)	INT11C=	BIT10		;CLEAR 10 REQ INTERRUPT (REMOVES INTERRUPT TO 11)
1)	PERCLR=	BIT9		;CLEAR -11 MEMORY PARITY ERROR
1)	INT10S=	BIT8		;SET REQUEST 10 INTERRUPT (INTERRUPTS 10)
1)	DON11S=	BIT7		;SET TO11 DONE
1)	DON11C=	BIT6		;CLEAR TO11 DONE
1)	INTRON=	BIT5		;ENABLE DTE20 TO INTERRUPT THE 11
1)	EBUSPC=	BIT4		;CLEAR EBUS PARITY ERROR
1)	INTROF=	BIT3		;DISABLE THE DTE20 11-INTERRUPTS
1)	EBUSPS=	BIT2		;SET EBUS PARITY ERROR
1)	ERR11S=	BIT1		;SET TO11 ERROR
1)	ERR11C=	BIT0		;CLEAR TO11 ERROR
1)	;BIT ASSIGNMENTS FOR STATUS (READ)
1)	TO10DN=	BIT15		;TO10 DONE
1)	TO10ER=	BIT13		;TO 10 ERROR (NPR TIMEOUT OR BUS ERROR)
1)	RAMIS0=	BIT12		;DATA OUT OF DTE RAM IS ALL 0S (RFM=0)
1)	TO11DB=	BIT11		;10 REQUESTING 11 INTERRUPT (DOORBELL FROM 10)
1)	DXWRD1=	BIT10		;DEPOSIT OR EXAMINE WORD ONE
1)	D11MPE=	BIT9		;-11 MEMORY PARITY ERROR
1)	TO10DB=	BIT8		;REQUEST 10 INTERRUPT (DOORBELL FROM 11)
1)	TO11DN=	BIT7		;TO11 DONE
1)	EBSEL=	BIT6		;E BUFFER SELECT
1)	NULSTP=	BIT5		;NULL STOP
1)	BPARER=	BIT4		;EBUS PARITY ERROR
1)	RM=	BIT3		;THIS DTE20 IN RESTRICTED MODE
1)	DEXDON=	BIT2		;DEPOSIT OR EXAMINE DONE
1)	TO11ER=	BIT1		;TO 11 ERROR (NPR TIMEOUT OR BUS ERROR)
1)	INTSON=	BIT0		;INTERRUPTS ON, DTE20 ENABLED TO INTERRUPT 11
1)	;CLOCK CONTROL FUNCTIONS
1)	STPCLK=	000	; STOP CLOCK
1)	STRCLK=	001	; START CLOCK
1)	SSCLK=	002	; SINGLE STEP THE MBOX CLOCK
1)	SECLK=	003	; SINGLE STEP EBOX CLOCK
1)	CECLK=	004	; CONDITIONAL EBOX CLOCK
1)	CLRMR=	006	; CLEAR MR RESET
1)	SETMR=	007	; SET MR RESET
1)	BRCLK=	005	; BURST THE CLOCK
1)	;CLOCK LOAD FUNCTIONS
1)	LDBRR=	42	; LOAD BURST REGISTER RIGHT HALF
1)	LDBRL=	43	; LOAD BURST REGISTER LEFT HALF
1)	LDSEL=	44	; LOAD SOURCE AND RATE SELECTS
1)	LDDIS=	45	; LOAD EBOX CLOCK DISTRIBUTION REGISTER
1)	LDCHK1=	46	; LOAD PARITY CHECK REGISTER (ENABLE BAD PARITY STOP)
1)	LDCHK2=	47	; LOAD EBOX INTERNAL CHECK REGISTER
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13

1)	;DRAM FUNCTIONS
1)	LDRAM1=	60	; LOAD A & B FIELDS EVEN
1)	LDRAM2=	61	; LOAD A & B FIELDS ODD
1)	LDRAM3=	62	; LOAD COMMON J1-J4
1)	LDRJEV=	63	; LOAD PARITY & J8-J10 EVEN
1)	LDRJOD=	64	; LOAD PARITY & J8-J10 ODD
1)	DRAMAB=	133	; READ D-RAM A & B
1)	DRJ710=	135	; READ D-RAM J7-J10
1)	DRJ1.4=	134	; READ D-RAM J1-J4
1)	;IR DRAM CONTROL
1)	DISIOJ=	65	; DISABLE 7XX & JRST=254
1)	DISACF=	66	; DISABLE THE IR AC'C
1)	ENIOJA=	67	; ENABLE 7XX, JRST=254 & IR AC'S
1)	;CRAM FUNCTIONS
1)	LCRAM1=	57	; LOAD C-RAM DATA
1)	LCRAM2=	56
1)	LCRAM3=	55
1)	LCRAM4=	54
1)	LCRAM5=	53
1)	LCRDAL=	52	; LOAD CRAM ADDRESS LEFT (00-04)
1)	LCRDAR=	51	; LOAD CRAM ADDRESS RIGHT (05-10)
1)	RCRAM1=	147	; READ C-RAM DATA
1)	RCRAM2=	146
1)	RCRAM3=	145
1)	RCRAM4=	144
1)	RCSPEC=	141	; READ C-RAM SPEC
1)	;MISC CONTROL FUNCTIONS
1)	IRLOAD=	14	; LOAD THE IR FROM AD
1)	DRLTCH=	15	; LOAD D-RAM LATCHES
1)	CLRRUN=	10	; CLEAR RUN FLIP-FLOP
1)	SETRUN=	11	; SET RUN FLIP-FLOP
1)	CONBUT=	12	; THE CONTINUE BUTTON
1)	LDAR=	77	; LOAD THE AR
1)	;MBOX CONTROL FUNCTIONS
1)	LDMBXA=	71	; LOAD MEMORY TO CACHE SELECTOR
1)	LDCHAN=	70	; LOAD CHANNEL DIAGNOSTIC CONDITIONS
1)	;PI CONTROL FUNCTIONS
1)	READ0=	100	; PI    (READ STATUS 0)
1)	READ1=	101	; PI	(READ STATUS 1)
1)	READ2=	102	; PI	(READ STATUS 2)
1)	READ3=	103	; PI	(READ STATUS 3)
1)	;DATA PATH CONTROL FUNCTIONS
1)	DPAR	=120	; AR
1)	DPBR	=121	; BR
1)	DPMQ	=122	; MQ
1)	DPFM	=123	; FM
1)	DPFMA	=114	; FM ADR
1)	DPBRX	=124	; BRX
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13

1)	DPARX	=125	; ARX
1)	DPADX	=126	; ADX
1)	DPAD	=127	; AD
1)	DPPC	=153	; PC
1)	DPVMA	=157	; VMA
1)	DPVMHD	=157	; VMA HELD
1)	DPADB	=153	; ADDRESS BREAK
1)	DPERG	=167	; E-BUS REGISTER
1)	DPFE	=132	; FE 05-09
1)	DPFE1	=133	; FE 00-04
1)	DPSC	=130	; SC 05-09
1)	DPSC1	=131	; SC 00-04
1)	.SBTTL	KL10 EBOX MACRO DEFINITIONS, 4-JUNE-75
*** PRM11.13 *** PAGE 13  LINE 15
2)	DLYCNT==00		;DELAY COUNT			(ADDRESS XXXX00)
2)	DEXWD3==02		;DEPOSIT OR EXAMINE WORD 3	(ADDRESS XXXX02)
2)	DEXWD2==04		;DEPOSIT OR EXAMINE WORD 2	(ADDRESS XXXX04)
2)	DEXWD1==06		;DEPOSIT OR EXAMINE WORD 1	(ADDRESS XXXX06)
2)	TENAD1==10		;10 ADDRESS WORD 1 FOR DEX	(ADDRESS XXXX10)
2)	TENAD2==12		;10 ADDRESS WORD 2 FOR DEX	(ADDRESS XXXX12)
2)	TO10BC==14		;TO10 BYTE COUNT		(ADDRESS XXXX14)
2)	TO11BC==16		;TO11 BYTE COUNT		(ADDRESS XXXX16)
2)	TO10AD==20		;TO10 PDP11 MEMORY ADDRESS	(ADDRESS XXXX20)
2)	TO11AD==22		;TO11 PDP11 MEMORY ADDRESS	(ADDRESS XXXX22)
2)	TO10DT==24		;TO10 PDP11 DATA WORD		(ADDRESS XXXX24)
2)	TO11DT==26		;TO11 PDP11 DATA WORD		(ADDRESS XXXX26)
2)	; THE LAST 4 REGISTERS ARE INITIALIZED BY "INIT" (BECAUSE THEY ARE IN FLIP-FLOPS)
2)	DIAG1==30		;DIAGNOSTIC WORD 1		(ADDRESS XXXX30)
2)	DIAG2==32		;DIAGNOSTIC WORD 2		(ADDRESS XXXX32)
2)	STATUS==34		;10/11 INTERFACE STATUS WORD	(ADDRESS XXXX34)
2)	DIAG3==36		;DIAGNOSTIC WORD 3		(ADDRESS XXXX36)
2)	.ENDC
2)	;  THE FOLLOWING ARE THE ADDRESSES OF THE DTE20 INTERRUPT VECTORS
2)	DTEIV0==774		;INTERRUPT VECTOR FOR DTE20 #0
2)	DTEIV1==770		;INTERRUPT VECTOR FOR DTE20 #1
2)	DTEIV2==764		;INTERRUPT VECTOR FOR DTE20 #2
2)	DTEIV3==760		;INTERRUPT VECTOR FOR DTE20 #3
2)	;BIT ASSIGNMENTS FOR 10/11 INTERFACE REGISTERS
2)	;BIT ASSIGNMENTS FOR TENAD1
2)	PHYS==BIT15		;EXAMINE/DEP PHYSICAL ADDRESS
2)	USEVIR==BIT14!BIT13	;EX/DP USER VIRTUAL ADDRESS
2)	XUPT==BIT14		;EX/DP VIA USER PROCESS TABLE
2)	EXVIRT==BIT13		;EX/DP EXEC VIRTUAL ADDRESS
2)	DEP==BIT12		;MODE BIT FOR DEPOSIT (0=EXAMINE)
2)	PRTOFF==BIT11		;PROTECT OFF
2)	XEPT==0		;EX/DP VIA EXEC PROCESS TABLE
2)	;BIT ASSIGNMENTS FOR TO11BC
2)	INT10==BIT15		;SET DONE AND INTERRUPT BOTH 10 AND 11
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13

2)	ZSTOP==BIT14		;STOP ON NULL (ZERO) CHARACTER
2)	BYTE2==BIT13		;TWO EIGHT BIT BYTES PER WORD
2)	TO11BM==BIT13		;TO-11 BYTE MODE
2)	;BIT ASSIGNMENTS FOR DIAG1 (WRITE)
2)	DS00==BIT15		;DIAGNOSTIC STATUS
2)	DS01==BIT14		; "
2)	DS02==BIT13		; "
2)	DS03==BIT12		; "
2)	DS04==BIT11		; "
2)	DS05==BIT10		; "
2)	DS06==BIT9		; "
2)	DFUNC==BIT7		;DOING DIAGNOSTIC FUNCTION (DFRD,DFWRT,DFXCT)
2)	PULSE==BIT4!BIT5	;SINGLE PULSE THE 10/11 CLOCK (ALSO SETS
2)				;10/11 DIAGNOSTIC MODE)
2)	DCOMST==BIT0		;DIAGNOSTIC COMMAND START
2)	DCSRT==BIT0		;DIAGNOSTIC COMMAND START (NEW NAME FOR DCOMST)
2)	DSEND==BIT2		;SEND THE EBUS DURING DIAGNOSTIC FUNCTION
2)	DIKL10==BIT3		;KL10 DIAGNOSTIC MODE
2)	D1011==BIT5		;10/11 INTERFACE DIAGNOSTIC MODE
2)	;BIT ASSIGNMENTS FOR DIAG1 (READ)
2)	TO10==BIT7		;INTERFACE MAJOR STATE = TO10 TRANSFER
2)	DEX==BIT8		;    "       "     "   = DEPOSIT OR EXAMINE
2)	TO11==BIT6		;    "       "     "   = TO11 TRANSFER
2)	VEC04==BIT4		;VECTOR INTERRUPT ADDRESS BIT 4
2)	VEC03==BIT3		;  "        "        "     "  3
2)	VEC02==BIT2		;  "        "        "     "  2
2)	HALTLP==BIT9		;EBOX IS IN HALT LOOP
2)	KLRUN==BIT10		;RUN FLOP, KL IS EXECUTING INSTRUCTIONS
2)	ERRSTP==BIT11		;EBOX CLOCK STOPPED DUE TO ERROR
2)	;BIT ASSIGNMENTS FOR DIAG2 (WRITE)
2)	EDONES==BIT14		;SET EBUS DONE
2)	DRESET==BIT6		;PERFORM DIAGNOSTIC CLEAR
2)	;BIT ASSIGNMENTS FOR DIAG2 (READ)
2)	;BIT ASSIGNMENTS FOR DIAG3 (WRITE)
2)	SCD==BIT5		;SHIFT CAPTURED DATA (PARITY ERROR DATA)
2)	CDD==BIT4		;CLEAR DUPE & DURE ERROR FLAGS
2)	WEP==BIT3		;WRITE EVEN (BAD) PARITY
2)	CNUPE==BIT1		;CLEAR NUPE
2)	TO10BM==BIT0		;TO-10 TRANSFER BYTES FROM THE 11
2)	;BIT ASSIGNMENTS FOR DIAG3 (READ)
2)	RFMAD0==BIT15		;RFM ADDRESS BIT 0
2)	RFMAD1==BIT14		; "     "     "  1
2)	RFMAD2==BIT13		; "     "     "  2
2)	RFMAD3==BIT12		; "     "     "  3
2)	;BIT ASSIGNMENTS FOR DIAG3 (READ)
2)	SWSLFT==BIT15		;SWAP SELECT LEFT
2)	CAB08==BIT14		;CAPTURED UNIBUS ADDRESS BIT 08
2)	DUPE==BIT4		;DATO UNIBUS PARITY ERROR
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13

2)	DURE==BIT2		;DATO UNIBUS RECIEVER ERROR
2)	NUPE==BIT1		;NPR UNIBUS PARITY ERROR
2)	UPECD==BIT13!BIT12!BIT11!BIT10!BIT9	;UNIBUS PARITY ERR, CAPTURED DATA
2)	;BIT ASSIGNMENTS FOR STATUS (WRITE)
2)	DON10S==BIT15		;SET TO10 DONE
2)	DON10C==BIT14		;CLEAR TO10 DONE
2)	ERR10S==BIT13		;SET TO10 ERROR
2)	ERR10C==BIT12		;CLEAR TO10 ERROR
2)	INT11S==BIT11		;SET 10 REQ INTERRUPT (INTERRUPTS 11)
2)	INT11C==BIT10		;CLEAR 10 REQ INTERRUPT (REMOVES INTERRUPT TO 11)
2)	PERCLR==BIT9		;CLEAR -11 MEMORY PARITY ERROR
2)	INT10S==BIT8		;SET REQUEST 10 INTERRUPT (INTERRUPTS 10)
2)	DON11S==BIT7		;SET TO11 DONE
2)	DON11C==BIT6		;CLEAR TO11 DONE
2)	INTRON==BIT5		;ENABLE DTE20 TO INTERRUPT THE 11
2)	EBUSPC==BIT4		;CLEAR EBUS PARITY ERROR
2)	INTROF==BIT3		;DISABLE THE DTE20 11-INTERRUPTS
2)	EBUSPS==BIT2		;SET EBUS PARITY ERROR
2)	ERR11S==BIT1		;SET TO11 ERROR
2)	ERR11C==BIT0		;CLEAR TO11 ERROR
2)	;BIT ASSIGNMENTS FOR STATUS (READ)
2)	TO10DN==BIT15		;TO10 DONE
2)	TO10ER==BIT13		;TO 10 ERROR (NPR TIMEOUT OR BUS ERROR)
2)	RAMIS0==BIT12		;DATA OUT OF DTE RAM IS ALL 0S (RFM=0)
2)	TO11DB==BIT11		;10 REQUESTING 11 INTERRUPT (DOORBELL FROM 10)
2)	DXWRD1==BIT10		;DEPOSIT OR EXAMINE WORD ONE
2)	D11MPE==BIT9		;-11 MEMORY PARITY ERROR
2)	TO10DB==BIT8		;REQUEST 10 INTERRUPT (DOORBELL FROM 11)
2)	TO11DN==BIT7		;TO11 DONE
2)	EBSEL==BIT6		;E BUFFER SELECT
2)	NULSTP==BIT5		;NULL STOP
2)	BPARER==BIT4		;EBUS PARITY ERROR
2)	RM==BIT3		;THIS DTE20 IN RESTRICTED MODE
2)	DEXDON==BIT2		;DEPOSIT OR EXAMINE DONE
2)	TO11ER==BIT1		;TO 11 ERROR (NPR TIMEOUT OR BUS ERROR)
2)	INTSON==BIT0		;INTERRUPTS ON, DTE20 ENABLED TO INTERRUPT 11
2)	;CLOCK CONTROL FUNCTIONS
2)	STPCLK==000	; STOP CLOCK
2)	STRCLK==001	; START CLOCK
2)	SSCLK==002	; SINGLE STEP THE MBOX CLOCK
2)	SECLK==003	; SINGLE STEP EBOX CLOCK
2)	CECLK==004	; CONDITIONAL EBOX CLOCK
2)	CLRMR==006	; CLEAR MR RESET
2)	SETMR==007	; SET MR RESET
2)	BRCLK==005	; BURST THE CLOCK
2)	;CLOCK LOAD FUNCTIONS
2)	LDBRR==42	; LOAD BURST REGISTER RIGHT HALF
2)	LDBRL==43	; LOAD BURST REGISTER LEFT HALF
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13

2)	LDSEL==44	; LOAD SOURCE AND RATE SELECTS
2)	LDDIS==45	; LOAD EBOX CLOCK DISTRIBUTION REGISTER
2)	LDCHK1==46	; LOAD PARITY CHECK REGISTER (ENABLE BAD PARITY STOP)
2)	LDCHK2==47	; LOAD EBOX INTERNAL CHECK REGISTER
2)	;DRAM FUNCTIONS
2)	LDRAM1==60	; LOAD A & B FIELDS EVEN
2)	LDRAM2==61	; LOAD A & B FIELDS ODD
2)	LDRAM3==62	; LOAD COMMON J1-J4
2)	LDRJEV==63	; LOAD PARITY & J8-J10 EVEN
2)	LDRJOD==64	; LOAD PARITY & J8-J10 ODD
2)	DRAMAB==133	; READ D-RAM A & B
2)	DRJ710==135	; READ D-RAM J7-J10
2)	DRJ1.4==134	; READ D-RAM J1-J4
2)	;IR DRAM CONTROL
2)	DISIOJ==65	; DISABLE 7XX & JRST=254
2)	DISACF==66	; DISABLE THE IR AC'C
2)	ENIOJA==67	; ENABLE 7XX, JRST=254 & IR AC'S
2)	;CRAM FUNCTIONS
2)	LCRAM1==57	; LOAD C-RAM DATA
2)	LCRAM2==56
2)	LCRAM3==55
2)	LCRAM4==54
2)	LCRAM5==53
2)	LCRDAL==52	; LOAD CRAM ADDRESS LEFT (00-04)
2)	LCRDAR==51	; LOAD CRAM ADDRESS RIGHT (05-10)
2)	RCRAM1==147	; READ C-RAM DATA
2)	RCRAM2==146
2)	RCRAM3==145
2)	RCRAM4==144
2)	RCSPEC==141	; READ C-RAM SPEC
2)	;MISC CONTROL FUNCTIONS
2)	IRLOAD==14	; LOAD THE IR FROM AD
2)	DRLTCH==15	; LOAD D-RAM LATCHES
2)	CLRRUN==10	; CLEAR RUN FLIP-FLOP
2)	SETRUN==11	; SET RUN FLIP-FLOP
2)	CONBUT==12	; THE CONTINUE BUTTON
2)	LDAR==77	; LOAD THE AR
2)	;MBOX CONTROL FUNCTIONS
2)	LDMBXA==71	; LOAD MEMORY TO CACHE SELECTOR
2)	LDCHAN==70	; LOAD CHANNEL DIAGNOSTIC CONDITIONS
2)	;PI CONTROL FUNCTIONS
2)	READ0==100	; PI    (READ STATUS 0)
2)	READ1==101	; PI	(READ STATUS 1)
2)	READ2==102	; PI	(READ STATUS 2)
2)	READ3==103	; PI	(READ STATUS 3)
2)	;DATA PATH CONTROL FUNCTIONS
2)	DPAR==120	; AR
2)	DPBR==121	; BR
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 14,13

2)	DPMQ==122	; MQ
2)	DPFM==123	; FM
2)	DPFMA==114	; FM ADR
2)	DPBRX==124	; BRX
2)	DPARX==125	; ARX
2)	DPADX==126	; ADX
2)	DPAD==127	; AD
2)	DPPC==153	; PC
2)	DPVMA==157	; VMA
2)	DPVMHD==157	; VMA HELD
2)	DPADB==153	; ADDRESS BREAK
2)	DPERG==167	; E-BUS REGISTER
2)	DPFE==132	; FE 05-09
2)	DPFE1==133	; FE 00-04
2)	DPSC==130	; SC 05-09
2)	DPSC1==131	; SC 00-04
2)	.SBTTL	KL10 EBOX MACRO DEFINITIONS, 4-JUNE-75


******** PRM11.DEC **** PAGE 21  LINE 18
1)			ADH=0
1)			ADL=0
1)		  .IF	NB,CAD
1)		  .IRPC	AD1,CAD
1)		  .IIF	GE,<ADL-10000>,ADH=ADL/10000
1)		  ADL=10*<ADL&7777>+AD1
1)		  .ENDM
1)		  .ENDC
1)		  .IIF B,CAC,AC=0
1)		  .IIF NB,CAC,AC=CAC
1)		  .IIF B,CI,I=0
1)		  .IIF NB,CI,I=CI
1)		  .IIF B,CXR,XR=0
1)		  .IIF NB,CXR,XR=CXR
1)		.NLIST	SRC
*** PRM11.13 *** PAGE 18  LINE 19
2)			ADH==0
2)			ADL==0
2)		  .IF	NB CAD
2)		  .IRPC	AD1,CAD
2)		  .IIF	GE <ADL-10000>,ADH==ADL/10000
2)		  ADL==10*<ADL&7777>+AD1
2)		  .ENDM
2)		  .ENDC
2)		  .IIF B CAC,AC==0
2)		  .IIF NB CAC,AC==CAC
2)		  .IIF B CI,I==0
2)		  .IIF NB CI,I==CI
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 21,18

2)		  .IIF B CXR,XR==0
2)		  .IIF NB CXR,XR==CXR
2)		.NLIST	SRC


******** PRM11.DEC **** PAGE 22  LINE 1
1)	;MACRO  TO GENERATE A RIGHT JUSTIFIED 3-BYTE VALUE
*** PRM11.13 *** PAGE 18  LINE 39
2)	CRMSIZ==2777		;# C-RAM WORDS
2)	;MACRO  TO GENERATE A RIGHT JUSTIFIED 3-BYTE VALUE


******** PRM11.DEC **** PAGE 22  LINE 5
1)		  ADH=0
1)		  ADL=0
1)		  .IRPC	AD1,AD
1)		  .IIF	GE,<ADL-10000>,ADH=<10*ADH>+<ADL/10000>
1)		  ADL=10*<ADL&7777>+AD1
1)		.ENDM
*** PRM11.13 *** PAGE 19  LINE 6
2)		  ADH==0
2)		  ADL==0
2)		  .IRPC	AD1,AD
2)		  .IIF	GE <ADL-10000>,ADH==<10*ADH>+<ADL/10000>
2)		  ADL==10*<ADL&7777>+AD1
2)		.ENDM


******** PRM11.DEC **** PAGE 22  LINE 21
1)		  .IIF B,CI,I=0
1)		  .IIF NB,CI,I=CI
1)		  .IIF B,CXR,XR=0
1)		  .IIF NB,CXR,XR=CXR
1)			BLKO=2
1)			DATAO=3
1)			BLKI=0
1)			DATAI=1
1)			CONO=4
1)			CONI=5
1)			CONSZ=6
1)			CONSO=7
1)			APR=0
1)			PI=4
1)			PAG=10
1)			CCA=14
1)			ADH=0
1)			ADL=0
1)		  .IRPC AD1,AD

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 22,19

1)		  .IIF GE,<ADL-10000>,ADH=ADL/10000
1)		  ADL=10*<ADL&7777>+AD1
1)		  .ENDM
*** PRM11.13 *** PAGE 19  LINE 22
2)		  .IIF B CI,I==0
2)		  .IIF NB CI,I==CI
2)		  .IIF B CXR,XR==0
2)		  .IIF NB CXR,XR==CXR
2)			BLKO==2
2)			DATAO==3
2)			BLKI==0
2)			DATAI==1
2)			CONO==4
2)			CONI==5
2)			CONSZ==6
2)			CONSO==7
2)			APR==0
2)			PI==4
2)			PAG==10
2)			CCA==14
2)			ADH==0
2)			ADL==0
2)		  .IRPC AD1,AD
2)		  .IIF GE <ADL-10000>,ADH==ADL/10000
2)		  ADL==10*<ADL&7777>+AD1
2)		  .ENDM


******** PRM11.DEC **** PAGE 23  LINE 4
1)		  MOV	#↑D2500,-(SP)	;SET TIMEOUT CNT
1)	  91$:	  BIT	#BITSEL,@.DIAG1	;TEST BIT
*** PRM11.13 *** PAGE 20  LINE 5
2)		  MOV	#2500.,-(SP)	;SET TIMEOUT CNT
2)	  91$:	  BIT	#BITSEL,@.DIAG1	;TEST BIT


******** PRM11.DEC **** PAGE 23  LINE 21
1)		  MOV	#↑D2500,-(SP)	;SET TIMEOUT CNT
1)	  93$:	  BIT	#BITSEL,@.STDTE	;TEST BIT
*** PRM11.13 *** PAGE 20  LINE 22
2)		  MOV	#2500.,-(SP)	;SET TIMEOUT CNT
2)	  93$:	  BIT	#BITSEL,@.STDTE	;TEST BIT


******** PRM11.DEC **** PAGE 23  LINE 36
1)	.IF	DF,DTEBBD
1)	.LIST
*** PRM11.13 *** PAGE 20  LINE 37

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 23,20

2)	.IF	DF DTEBBD
2)	.LIST


******** PRM11.DEC **** PAGE 24  LINE 4
1)	DTESIZ=	000040		;SPACING BETWEEN CONSECUTIVE DTE20'S
1)	DTEMAX=	4		;MAXIMUM NUMBER OF DTE20'S ON ONE PDP-11
1)	DTESZS=	5		;SHIFT TO CONVERT DTE ADDRESS TO DTE #
1)	.IF	DF,DTEDEF
1)	;OFFSETS FROM THE BASE OF THE DTE20 DEVICE REGISTER BLOCK
*** PRM11.13 *** PAGE 21  LINE 5
2)	DTESIZ==000040		;SPACING BETWEEN CONSECUTIVE DTE20'S
2)	DTEMAX==4		;MAXIMUM NUMBER OF DTE20'S ON ONE PDP-11
2)	DTESZS==5		;SHIFT TO CONVERT DTE ADDRESS TO DTE #
2)	.IF	DF DTEDEF
2)	;OFFSETS FROM THE BASE OF THE DTE20 DEVICE REGISTER BLOCK


******** PRM11.DEC **** PAGE 24  LINE 14
1)	DLYCNT=	00		;DELAY COUNT			(ADDRESS XXXX00)
1)	DEXWD1=	02		;DEPOSIT OR EXAMINE WORD 1	(ADDRESS XXXX02)
1)	DEXWD2=	04		;DEPOSIT OR EXAMINE WORD 2	(ADDRESS XXXX04)
1)	DEXWD3=	06		;DEPOSIT OR EXAMINE WORD 3	(ADDRESS XXXX06)
1)	TENAD1=	10		;10 ADDRESS WORD 1 FOR DEX	(ADDRESS XXXX10)
1)	TENAD2=	12		;10 ADDRESS WORD 2 FOR DEX	(ADDRESS XXXX12)
1)	TO10BC=	14		;TO10 BYTE COUNT		(ADDRESS XXXX14)
1)	TO11BC=	16		;TO11 BYTE COUNT		(ADDRESS XXXX16)
1)	TO10AD=	20		;TO10 PDP11 MEMORY ADDRESS	(ADDRESS XXXX20)
1)	TO11AD=	22		;TO11 PDP11 MEMORY ADDRESS	(ADDRESS XXXX22)
1)	TO10DT=	24		;TO10 PDP11 DATA WORD		(ADDRESS XXXX24)
1)	TO11DT=	26		;TO11 PDP11 DATA WORD		(ADDRESS XXXX26)
1)	; THE LAST 4 REGISTERS ARE INITIALIZED BY "INIT" (BECAUSE THEY ARE IN FLIP-FLOPS)
1)	DIAG1=	30		;DIAGNOSTIC WORD 1		(ADDRESS XXXX30)
1)	DIAG2=	32		;DIAGNOSTIC WORD 2		(ADDRESS XXXX32)
1)	STATUS=	34		;10/11 INTERFACE STATUS WORD	(ADDRESS XXXX34)
1)	DIAG3=	36		;DIAGNOSTIC WORD 3		(ADDRESS XXXX36)
1)	.ENDC
1)	;  THE FOLLOWING ARE THE ADDRESSES OF THE DTE20 INTERRUPT VECTORS
1)	DTEIV0=	170		;INTERRUPT VECTOR FOR DTE20 #0
1)	DTEIV1=	174		;INTERRUPT VECTOR FOR DTE20 #1
1)	DTEIV2=	270		;INTERRUPT VECTOR FOR DTE20 #2
1)	DTEIV3=	274		;INTERRUPT VECTOR FOR DTE20 #3
1)	; THE FOLLOWING MACRO (DTEVEC) DYNAMICLY COMPUTES THE INTERRUPT
*** PRM11.13 *** PAGE 21  LINE 15
2)	DLYCNT==00		;DELAY COUNT			(ADDRESS XXXX00)
2)	DEXWD1==02		;DEPOSIT OR EXAMINE WORD 1	(ADDRESS XXXX02)
2)	DEXWD2==04		;DEPOSIT OR EXAMINE WORD 2	(ADDRESS XXXX04)
2)	DEXWD3==06		;DEPOSIT OR EXAMINE WORD 3	(ADDRESS XXXX06)

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 24,21

2)	TENAD1==10		;10 ADDRESS WORD 1 FOR DEX	(ADDRESS XXXX10)
2)	TENAD2==12		;10 ADDRESS WORD 2 FOR DEX	(ADDRESS XXXX12)
2)	TO10BC==14		;TO10 BYTE COUNT		(ADDRESS XXXX14)
2)	TO11BC==16		;TO11 BYTE COUNT		(ADDRESS XXXX16)
2)	TO10AD==20		;TO10 PDP11 MEMORY ADDRESS	(ADDRESS XXXX20)
2)	TO11AD==22		;TO11 PDP11 MEMORY ADDRESS	(ADDRESS XXXX22)
2)	TO10DT==24		;TO10 PDP11 DATA WORD		(ADDRESS XXXX24)
2)	TO11DT==26		;TO11 PDP11 DATA WORD		(ADDRESS XXXX26)
2)	; THE LAST 4 REGISTERS ARE INITIALIZED BY "INIT" (BECAUSE THEY ARE IN FLIP-FLOPS)
2)	DIAG1==30		;DIAGNOSTIC WORD 1		(ADDRESS XXXX30)
2)	DIAG2==32		;DIAGNOSTIC WORD 2		(ADDRESS XXXX32)
2)	STATUS==34		;10/11 INTERFACE STATUS WORD	(ADDRESS XXXX34)
2)	DIAG3==36		;DIAGNOSTIC WORD 3		(ADDRESS XXXX36)
2)	.ENDC
2)	;  THE FOLLOWING ARE THE ADDRESSES OF THE DTE20 INTERRUPT VECTORS
2)	DTEIV0==170		;INTERRUPT VECTOR FOR DTE20 #0
2)	DTEIV1==174		;INTERRUPT VECTOR FOR DTE20 #1
2)	DTEIV2==270		;INTERRUPT VECTOR FOR DTE20 #2
2)	DTEIV3==274		;INTERRUPT VECTOR FOR DTE20 #3
2)	; THE FOLLOWING MACRO (DTEVEC) DYNAMICLY COMPUTES THE INTERRUPT


******** PRM11.DEC **** PAGE 25  LINE 28
1)	DEP=BIT15		;MODE BIT FOR DEPOSIT (0=EXAMINE)
1)	F1=BIT7			;HIGH ORDER BIT OF FAST AC BLOCK
1)	F2=BIT6			;LOW    "    "  "   "   "    "
1)	;BIT ASSIGNMENTS FOR TO10BC
1)	INT11=BIT15		;SET DONE AND INTERRUPT BOTH 10 AND 11
1)	;BIT ASSIGNMENTS FOR TO11BC
1)	INT10=BIT15		;SET DONE AND INTERRUPT BOTH 10 AND 11
1)	ZSTOP=BIT14		;STOP ON NULL (ZERO) CHARACTER
1)	;BIT ASSIGNMENTS FOR TO10AD AND TO11AD
1)	BYTE2=BIT0		;TWO EIGHT-BIT BYTES PER WORD
1)	;BIT ASSIGNMENTS FOR DIAG1 (WRITE)
1)	DPULSE=BIT7		;PULSE THE KL10 CLOCK
1)	PULSE=BIT4!BIT0		;SINGLE PULSE THE 10/11 CLOCK (ALSO SETS
1)				;10/11 DIAGNOSTIC MODE)
1)	DBUSEN=BIT3		;DIAGNOSTIC BUS ENABLE
1)	DCSRT=BIT3		;DIAGNOSTIC COMMAND START (NEW NAME FOR DBUSEN)
1)	DSEND=BIT2		;SEND THE EBUS DURING DIAGNOSTIC FUNCTION
1)	DIKL10=BIT1		;KL10 DIAGNOSTIC MODE
1)	D1011=BIT0		;10/11 INTERFACE DIAGNOSTIC MODE
1)	;BIT ASSIGNMENTS FOR DIAG1 (READ)
1)	TO10=BIT7		;INTERFACE MAJOR STATE = TO10 TRANSFER
1)	DEX=BIT6		;    "       "     "   = DEPOSIT OR EXAMINE
1)	TO11=BIT5		;    "       "     "   = TO11 TRANSFER
1)	VEC04=BIT4		;VECTOR INTERRUPT ADDRESS BIT 4
1)	VEC03=BIT3		;  "        "        "     "  3

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 25,22

1)	VEC02=BIT2		;  "        "        "     "  2
1)	;BIT ASSIGNMENTS FOR DIAG2 (WRITE)
1)	EDONES=BIT14		;SET EBUS DONE
1)	STHOLD=BIT7		;STAY IN CURRENT MAJOR STATE
1)	CLEAR=BIT6		;PERFORM DIAGNOSTIC CLEAR
1)	;BIT ASSIGNMENTS FOR DIAG2 (READ)
1)	;BIT ASSIGNMENTS FOR DIAG3 (READ)
1)	RAMIS0=BIT7		;RFM=0 (ALL ZEROES COMING OUT OF RAM)
1)	RFMAD0=BIT1		;RFM ADDRESS BIT 0
1)	RFMAD1=BIT8		; "     "     "  1
1)	RFMAD2=BIT9		; "     "     "  2
1)	RFMAD3=BIT10		; "     "     "  3
1)	;BIT ASSIGNMENTS FOR STATUS (WRITE)
1)	DON10S=BIT15		;SET TO10 DONE
1)	DON10C=BIT14		;CLEAR TO10 DONE
1)	ERR10S=BIT13		;SET TO10 ERROR
1)	ERR10C=BIT12		;CLEAR TO10 ERROR
1)	INT11S=BIT11		;SET 10 REQ INTERRUPT (INTERRUPTS 11)
1)	INT11C=BIT10		;CLEAR 10 REQ INTERRUPT (REMOVES INTERRUPT TO 11)
1)	PERCLR=BIT9		;CLEAR -11 MEMORY PARITY ERROR
1)	INT10S=BIT8		;SET REQUEST 10 INTERRUPT (INTERRUPTS 10)
1)	DON11S=BIT7		;SET TO11 DONE
1)	DON11C=BIT6		;CLEAR TO11 DONE
1)	ERR11S=BIT1		;SET TO11 ERROR
1)	ERR11C=BIT0		;CLEAR TO11 ERROR
1)	;BIT ASSIGNMENTS FOR STATUS (READ)
1)	TO10DN=BIT15		;TO10 DONE
1)	PI10OF=BIT14		;THIS DTE20 IS NOT TRYING TO INTERRUPT THE -10
1)	TO10ER=BIT13		;TO 10 ERROR (NPR TIMEOUT OR BUS ERROR)
1)	INTR11=BIT12		;11 INTERRUPT PENDING
1)	DOOR10=BIT11		;10 REQUESTING 11 INTERRUPT (DOORBELL FROM 10)
1)	DXWRD1=BIT10		;DEPOSIT OR EXAMINE WORD ONE
1)	PARERR=BIT9		;-11 MEMORY PARITY ERROR
1)	DOOR11=BIT8		;REQUEST 10 INTERRUPT (DOORBELL FROM 11)
1)	TO11DN=BIT7		;TO11 DONE
1)	EBSEL=BIT6		;E BUFFER SELECT
1)	NULSTP=BIT5		;NULL STOP
1)	DEAD10=BIT4		;KL10 STOPPED
1)	DBUSON=BIT3		;DIAGNOSTIC BUS ENABLED
1)	DEXDON=BIT2		;DEPOSIT OR EXAMINE DONE
1)	TO11ER=BIT1		;TO 11 ERROR (NPR TIMEOUT OR BUS ERROR)
1)	; FUNCTION SELECT CODES
1)	STPCLK	=010	; STOP CLOCK
1)	STRCLK	=011	; START CLOCK
1)	SSCLK	=014	; SINGLE STEP THE CLOCK
1)	CLRMR	=016	; CLEAR MR RESET
1)	SETMR	=017	; SET MR RESET
1)	BRCLK	=015	; BURST THE CLOCK

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 25,22

1)	LDCLK	=012	; LOAD CLOCK BURST COUNTER & RATE
1)	CLKCND	=101	; READ CLOCK CONDITION
1)	LDRAM1	=030	; LOAD D-RAM DATA
1)	LDRAM2	=031
1)	LDRAM3	=032
1)	RDRAMA	=131	; READ D-RAM ADDRESS
1)	RDRAM1	=132	; READ D-RAM DATA
1)	RDRAM2	=133
1)	DRAMAB	=132	; D-RAM A & B
1)	DRAMJ	=133	; D-RAM J
1)	LCRAM1	=040	; LOAD C-RAM DATA
1)	LCRAM2	=041
1)	LCRAM3	=042
1)	LCRAM4	=043
1)	LCRAM5	=044
1)	LCRAMA	=047	; LOAD C-RAM ADDRESS
1)	RCRAM1	=140	; READ C-RAM DATA AND ADDRESS
1)	RCRAM2	=141	; READ C-RAM DATA
1)	RCRAM3	=142
1)	RCRAM4	=143
1)	RELCTR	=000	; RELINQUISH CONTROL OF THE TRANSLATOR
1)	DIAGRD	=001	; SET TRANSLATOR IN 10 TO 11 DIRECTION
1)	DIAGLD	=002	; SET TRANSLATOR IN 11 TO 10 DIRECTION
1)	IRLOAD	=003	; ENABLE LOADING OF THE AR & IR REGISTERS
1)	DRLTCH	=005	; LOAD D-RAM LATCHES
1)	CLRRUN	=007	; CLEAR RUN FLIP-FLOP
1)	SETRUN	=006	; SET RUN FLIP-FLOP
1)	CONBUT	=004	; THE CONTINUE BUTTON
1)	READ0	=110	; PI    (READ STATUS 0)
1)	READ1	=111	; PI	(READ STATUS 1)
1)	READ2	=112	; PI	(READ STATUS 2)
1)	READ3	=113	; PI	(READ STATUS 3)
1)	DPAR	=120	; AR	(DATA PATH)
1)	DPBR	=121	; BR
1)	DPMQ	=122	; MQ
1)	DPFM	=123	; FM
1)	DPBRX	=124	; BRX
1)	DPARX	=125	; ARX
1)	DPADX	=126	; ADX
1)	DPAD	=127	; AD
1)	DPFE	=133	; FE
1)	DPSC	=131	; SC
1)	DPERG	=157	; E-BUS REGISTER
1)	RDPCH	=130	; READ PC 18-26
1)	RDPCL	=131	; READ PC 27-35
1)	RDVMAH	=132	; READ VMA 18-26
1)	RDVMAL	=133	; READ VMA 27-35
1)	MCHLTLP	=42	; U CODE HALT LOOP ADDRESS

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 25,22

1)	.SBTTL	*BBD*	KL10 EBOX MACRO DEFINITIONS, 4-MAR-75
*** PRM11.13 *** PAGE 22  LINE 29
2)	DEP==BIT15		;MODE BIT FOR DEPOSIT (0=EXAMINE)
2)	F1==BIT7		;HIGH ORDER BIT OF FAST AC BLOCK
2)	F2==BIT6		;LOW    "    "  "   "   "    "
2)	;BIT ASSIGNMENTS FOR TO10BC
2)	INT11==BIT15		;SET DONE AND INTERRUPT BOTH 10 AND 11
2)	;BIT ASSIGNMENTS FOR TO11BC
2)	INT10==BIT15		;SET DONE AND INTERRUPT BOTH 10 AND 11
2)	ZSTOP==BIT14		;STOP ON NULL (ZERO) CHARACTER
2)	;BIT ASSIGNMENTS FOR TO10AD AND TO11AD
2)	BYTE2==BIT0		;TWO EIGHT-BIT BYTES PER WORD
2)	;BIT ASSIGNMENTS FOR DIAG1 (WRITE)
2)	DPULSE==BIT7		;PULSE THE KL10 CLOCK
2)	PULSE==BIT4!BIT0		;SINGLE PULSE THE 10/11 CLOCK (ALSO SETS
2)				;10/11 DIAGNOSTIC MODE)
2)	DBUSEN==BIT3		;DIAGNOSTIC BUS ENABLE
2)	DCSRT==BIT3		;DIAGNOSTIC COMMAND START (NEW NAME FOR DBUSEN)
2)	DSEND==BIT2		;SEND THE EBUS DURING DIAGNOSTIC FUNCTION
2)	DIKL10==BIT1		;KL10 DIAGNOSTIC MODE
2)	D1011==BIT0		;10/11 INTERFACE DIAGNOSTIC MODE
2)	;BIT ASSIGNMENTS FOR DIAG1 (READ)
2)	TO10==BIT7		;INTERFACE MAJOR STATE == TO10 TRANSFER
2)	DEX==BIT6		;    "       "     "   == DEPOSIT OR EXAMINE
2)	TO11==BIT5		;    "       "     "   == TO11 TRANSFER
2)	VEC04==BIT4		;VECTOR INTERRUPT ADDRESS BIT 4
2)	VEC03==BIT3		;  "        "        "     "  3
2)	VEC02==BIT2		;  "        "        "     "  2
2)	;BIT ASSIGNMENTS FOR DIAG2 (WRITE)
2)	EDONES==BIT14		;SET EBUS DONE
2)	STHOLD==BIT7		;STAY IN CURRENT MAJOR STATE
2)	CLEAR==BIT6		;PERFORM DIAGNOSTIC CLEAR
2)	;BIT ASSIGNMENTS FOR DIAG2 (READ)
2)	;BIT ASSIGNMENTS FOR DIAG3 (READ)
2)	RAMIS0==BIT7		;RFM==0 (ALL ZEROES COMING OUT OF RAM)
2)	RFMAD0==BIT1		;RFM ADDRESS BIT 0
2)	RFMAD1==BIT8		; "     "     "  1
2)	RFMAD2==BIT9		; "     "     "  2
2)	RFMAD3==BIT10		; "     "     "  3
2)	;BIT ASSIGNMENTS FOR STATUS (WRITE)
2)	DON10S==BIT15		;SET TO10 DONE
2)	DON10C==BIT14		;CLEAR TO10 DONE
2)	ERR10S==BIT13		;SET TO10 ERROR
2)	ERR10C==BIT12		;CLEAR TO10 ERROR
2)	INT11S==BIT11		;SET 10 REQ INTERRUPT (INTERRUPTS 11)
2)	INT11C==BIT10		;CLEAR 10 REQ INTERRUPT (REMOVES INTERRUPT TO 11)
2)	PERCLR==BIT9		;CLEAR -11 MEMORY PARITY ERROR
2)	INT10S==BIT8		;SET REQUEST 10 INTERRUPT (INTERRUPTS 10)

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 25,22

2)	DON11S==BIT7		;SET TO11 DONE
2)	DON11C==BIT6		;CLEAR TO11 DONE
2)	ERR11S==BIT1		;SET TO11 ERROR
2)	ERR11C==BIT0		;CLEAR TO11 ERROR
2)	;BIT ASSIGNMENTS FOR STATUS (READ)
2)	TO10DN==BIT15		;TO10 DONE
2)	PI10OF==BIT14		;THIS DTE20 IS NOT TRYING TO INTERRUPT THE -10
2)	TO10ER==BIT13		;TO 10 ERROR (NPR TIMEOUT OR BUS ERROR)
2)	INTR11==BIT12		;11 INTERRUPT PENDING
2)	DOOR10==BIT11		;10 REQUESTING 11 INTERRUPT (DOORBELL FROM 10)
2)	DXWRD1==BIT10		;DEPOSIT OR EXAMINE WORD ONE
2)	PARERR==BIT9		;-11 MEMORY PARITY ERROR
2)	DOOR11==BIT8		;REQUEST 10 INTERRUPT (DOORBELL FROM 11)
2)	TO11DN==BIT7		;TO11 DONE
2)	EBSEL==BIT6		;E BUFFER SELECT
2)	NULSTP==BIT5		;NULL STOP
2)	DEAD10==BIT4		;KL10 STOPPED
2)	DBUSON==BIT3		;DIAGNOSTIC BUS ENABLED
2)	DEXDON==BIT2		;DEPOSIT OR EXAMINE DONE
2)	TO11ER==BIT1		;TO 11 ERROR (NPR TIMEOUT OR BUS ERROR)
2)	; FUNCTION SELECT CODES
2)	STPCLK==010	; STOP CLOCK
2)	STRCLK==011	; START CLOCK
2)	SSCLK==014	; SINGLE STEP THE CLOCK
2)	CLRMR==016	; CLEAR MR RESET
2)	SETMR==017	; SET MR RESET
2)	BRCLK==015	; BURST THE CLOCK
2)	LDCLK==012	; LOAD CLOCK BURST COUNTER & RATE
2)	CLKCND==101	; READ CLOCK CONDITION
2)	LDRAM1==030	; LOAD D-RAM DATA
2)	LDRAM2==031
2)	LDRAM3==032
2)	RDRAMA==131	; READ D-RAM ADDRESS
2)	RDRAM1==132	; READ D-RAM DATA
2)	RDRAM2==133
2)	DRAMAB==132	; D-RAM A & B
2)	DRAMJ==133	; D-RAM J
2)	LCRAM1==040	; LOAD C-RAM DATA
2)	LCRAM2==041
2)	LCRAM3==042
2)	LCRAM4==043
2)	LCRAM5==044
2)	LCRAMA==047	; LOAD C-RAM ADDRESS
2)	RCRAM1==140	; READ C-RAM DATA AND ADDRESS
2)	RCRAM2==141	; READ C-RAM DATA
2)	RCRAM3==142
2)	RCRAM4==143
2)	RELCTR==000	; RELINQUISH CONTROL OF THE TRANSLATOR

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 25,22

2)	DIAGRD==001	; SET TRANSLATOR IN 10 TO 11 DIRECTION
2)	DIAGLD==002	; SET TRANSLATOR IN 11 TO 10 DIRECTION
2)	IRLOAD==003	; ENABLE LOADING OF THE AR & IR REGISTERS
2)	DRLTCH==005	; LOAD D-RAM LATCHES
2)	CLRRUN==007	; CLEAR RUN FLIP-FLOP
2)	SETRUN==006	; SET RUN FLIP-FLOP
2)	CONBUT==004	; THE CONTINUE BUTTON
2)	READ0==110	; PI    (READ STATUS 0)
2)	READ1==111	; PI	(READ STATUS 1)
2)	READ2==112	; PI	(READ STATUS 2)
2)	READ3==113	; PI	(READ STATUS 3)
2)	DPAR==120	; AR	(DATA PATH)
2)	DPBR==121	; BR
2)	DPMQ==122	; MQ
2)	DPFM==123	; FM
2)	DPBRX==124	; BRX
2)	DPARX==125	; ARX
2)	DPADX==126	; ADX
2)	DPAD==127	; AD
2)	DPFE==133	; FE
2)	DPSC==131	; SC
2)	DPERG==157	; E-BUS REGISTER
2)	RDPCH==130	; READ PC 18-26
2)	RDPCL==131	; READ PC 27-35
2)	RDVMAH==132	; READ VMA 18-26
2)	RDVMAL==133	; READ VMA 27-35
2)	MCHLTLP==42	; U CODE HALT LOOP ADDRESS
2)	.SBTTL	*BBD*	KL10 EBOX MACRO DEFINITIONS, 4-MAR-75


******** PRM11.DEC **** PAGE 30  LINE 18
1)			ADH=0
1)			ADL=0
1)		  .IF	NB,CAD
1)		  .IRPC	AD1,CAD
1)		  .IIF	GE,<ADL-10000>,ADH=ADL/10000
1)		  ADL=10*<ADL&7777>+AD1
1)		  .ENDM
1)		  .ENDC
1)		  .IIF B,CAC,AC=0
1)		  .IIF NB,CAC,AC=CAC
1)		  .IIF B,CI,I=0
1)		  .IIF NB,CI,I=CI
1)		  .IIF B,CXR,XR=0
1)		  .IIF NB,CXR,XR=CXR
1)		.NLIST	SRC
*** PRM11.13 *** PAGE 25  LINE 19
2)			ADH==0

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 30,25

2)			ADL==0
2)		  .IF	NB CAD
2)		  .IRPC	AD1,CAD
2)		  .IIF	GE <ADL-10000>,ADH==ADL/10000
2)		  ADL==10*<ADL&7777>+AD1
2)		  .ENDM
2)		  .ENDC
2)		  .IIF B CAC,AC==0
2)		  .IIF NB CAC,AC==CAC
2)		  .IIF B CI,I==0
2)		  .IIF NB CI,I==CI
2)		  .IIF B CXR,XR==0
2)		  .IIF NB CXR,XR==CXR
2)		.NLIST	SRC


******** PRM11.DEC **** PAGE 31  LINE 5
1)		  ADH=0
1)		  ADL=0
1)		  .IRPC	AD1,AD
1)		  .IIF	GE,<ADL-10000>,ADH=<10*ADH>+<ADL/10000>
1)		  ADL=10*<ADL&7777>+AD1
1)		.ENDM
*** PRM11.13 *** PAGE 26  LINE 6
2)		  ADH==0
2)		  ADL==0
2)		  .IRPC	AD1,AD
2)		  .IIF	GE <ADL-10000>,ADH==<10*ADH>+<ADL/10000>
2)		  ADL==10*<ADL&7777>+AD1
2)		.ENDM


******** PRM11.DEC **** PAGE 31  LINE 21
1)		  .IIF B,CI,I=0
1)		  .IIF NB,CI,I=CI
1)		  .IIF B,CXR,XR=0
1)		  .IIF NB,CXR,XR=CXR
1)			BLKO=2
1)			DATAO=3
1)			BLKI=0
1)			DATAI=1
1)			CONO=4
1)			CONI=5
1)			CONSZ=6
1)			CONSO=7
1)			APR=0
1)			PI=4
1)			PAG=10

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 31,26

1)			CCA=14
1)			ADH=0
1)			ADL=0
1)		  .IRPC AD1,AD
1)		  .IIF GE,<ADL-10000>,ADH=ADL/10000
1)		  ADL=10*<ADL&7777>+AD1
1)		  .ENDM
*** PRM11.13 *** PAGE 26  LINE 22
2)		  .IIF B CI,I==0
2)		  .IIF NB CI,I==CI
2)		  .IIF B CXR,XR==0
2)		  .IIF NB CXR,XR==CXR
2)			BLKO==2
2)			DATAO==3
2)			BLKI==0
2)			DATAI==1
2)			CONO==4
2)			CONI==5
2)			CONSZ==6
2)			CONSO==7
2)			APR==0
2)			PI==4
2)			PAG==10
2)			CCA==14
2)			ADH==0
2)			ADL==0
2)		  .IRPC AD1,AD
2)		  .IIF GE <ADL-10000>,ADH==ADL/10000
2)		  ADL==10*<ADL&7777>+AD1
2)		  .ENDM


******** PRM11.DEC **** PAGE 32  LINE 4
1)		  MOV	#↑D2500,-(SP)	;SET TIMEOUT CNT
1)	  91$:	  BIT	#BITSEL,@.DIAG1	;TEST BIT
*** PRM11.13 *** PAGE 27  LINE 5
2)		  MOV	#2500.,-(SP)	;SET TIMEOUT CNT
2)	  91$:	  BIT	#BITSEL,@.DIAG1	;TEST BIT


******** PRM11.DEC **** PAGE 32  LINE 21
1)		  MOV	#↑D2500,-(SP)	;SET TIMEOUT CNT
1)	  93$:	  BIT	#BITSEL,@.STDTE	;TEST BIT
*** PRM11.13 *** PAGE 27  LINE 22
2)		  MOV	#2500.,-(SP)	;SET TIMEOUT CNT
2)	  93$:	  BIT	#BITSEL,@.STDTE	;TEST BIT


	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 32,27

******** PRM11.DEC **** PAGE 32  LINE 36
1)	.IF	DF,DVASB
1)	.LIST
*** PRM11.13 *** PAGE 27  LINE 37
2)	.IF	DF DVASB
2)	.LIST


******** PRM11.DEC **** PAGE 34  LINE 5
1)	TPILEV=	PR6		; TERMINAL PRIORITY LEVEL
1)	NXMPIL=	PR7		; "NON-X-MEM" PRIORITY LEVEL
1)	DHRPS=	TPILEV		; DH11 RECEIVER PRIORITY
1)	DHTPS=	DHRPS		; DH11 TRANSMITTER
1)	DLRPS=	DHRPS		; DL11
1)	DLTPS=	DLRPS
1)	KWLPS=	DHRPS		; KW11 PRIORITY LEVEL
1)	NXMPS=	NXMPIL		; "NON-X-MEM" PRIORITY LEVEL
1)	; BIT DEFINITIONS FOR THE PARAMETER WORD.
1)	PDHDNS=	11		; DH11 DEVICE NUMBER SHIFT
1)	PDHDNM=	7000		; DH11 DEVICE NUMBER MASK
1)	PDHLNS=	4		; DH11 LINE NUMBER SHIFT
1)	PDHLNM=	360		; DH11 LINE NUMBER MASK
1)	PDHLSS=	0		; DH11 LINE SPEED SHIFT
1)	PDHLSM=	17		; DH11 LINE SPEED MASK
1)	PDLFCS=	PDHLNS		; DL11 FILLER CLASS SHIFT
1)	PDLFCM=	PDHLNS		; DL11 FILLER CLASS MASK
1)	; OTHER DEVICES.
1)	DP11BA=	174770		; DP11 DEVICE REGISTERS BASE ADDRESS
1)	DP11RS=	10		; DP11 DEVICE REGISTER SIZE
1)	DP11VS=	10		; DP11 INTERRUPT VECTOR SIZE
1)	DM11BA=	170500		; DM11 DEVICE REGISTER BASE ADDRESS
1)	DM11RS=	10		; DM11 DEVICE REGISTER SIZE
1)	DM11VS=	4		; DM11 INTERRUPT VECTOR SIZE
1)	DR11BA=	167770		; DR11 DEVICE REGISTER BASE ADDRESS
1)	DR11RS=	10		; DR11 DEVICE REGISTER SIZE
1)	DR11VS=	10		; DR11 INTERRUPT VECTOR SIZE
1)	.NLIST
*** PRM11.13 *** PAGE 28  LINE 6
2)	TPILEV==PR6		; TERMINAL PRIORITY LEVEL
2)	NXMPIL==PR7		; "NON-X-MEM" PRIORITY LEVEL
2)	DHRPS==TPILEV		; DH11 RECEIVER PRIORITY
2)	DHTPS==DHRPS		; DH11 TRANSMITTER
2)	DLRPS==DHRPS		; DL11
2)	DLTPS==DLRPS
2)	KWLPS==DHRPS		; KW11 PRIORITY LEVEL
2)	NXMPS==NXMPIL		; "NON-X-MEM" PRIORITY LEVEL
2)	; BIT DEFINITIONS FOR THE PARAMETER WORD.
2)	PDHDNS==11		; DH11 DEVICE NUMBER SHIFT

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 34,28

2)	PDHDNM==7000		; DH11 DEVICE NUMBER MASK
2)	PDHLNS==4		; DH11 LINE NUMBER SHIFT
2)	PDHLNM==360		; DH11 LINE NUMBER MASK
2)	PDHLSS==0		; DH11 LINE SPEED SHIFT
2)	PDHLSM==17		; DH11 LINE SPEED MASK
2)	PDLFCS==PDHLNS		; DL11 FILLER CLASS SHIFT
2)	PDLFCM==PDHLNS		; DL11 FILLER CLASS MASK
2)	; OTHER DEVICES.
2)	DP11BA==174770		; DP11 DEVICE REGISTERS BASE ADDRESS
2)	DP11RS==10		; DP11 DEVICE REGISTER SIZE
2)	DP11VS==10		; DP11 INTERRUPT VECTOR SIZE
2)	DM11BA==170500		; DM11 DEVICE REGISTER BASE ADDRESS
2)	DM11RS==10		; DM11 DEVICE REGISTER SIZE
2)	DM11VS==4		; DM11 INTERRUPT VECTOR SIZE
2)	DR11BA==167770		; DR11 DEVICE REGISTER BASE ADDRESS
2)	DR11RS==10		; DR11 DEVICE REGISTER SIZE
2)	DR11VS==10		; DR11 INTERRUPT VECTOR SIZE
2)	.NLIST


******** PRM11.DEC **** PAGE 34  LINE 41
1)	.IF	DF,KWASB
1)	.LIST
1)	.SBTTL	KW11 DEVICE REGISTERS AND BIT DEFINITIONS, 4-JUNE-75
1)	KWLIV=	100		; VECTOR ADDRESS
1)	KWLKS=	177546		; LINE CLOCK STATUS DEVICE ADDRESS
1)	KWLKE=	100		; LINE CLOCK INTERRUPT ENABLE BIT
1)	.SBTTL	MM11 DEVICE REGISTERS AND BIT ASSIGNMENTS, 4-JUNE-75
1)	MMLPIV=	114		;VECTOR ADDRESS
1)	MMLPBA=	172100		;1ST MM11-LP DEVICE ADDRESS
1)	MMLPEA=	172136		;LAST MM11-LP DEVICE ADDRESS
1)	MMERRF=	BIT15		;ERROR FLAG
1)	MMADDM=	7740		;ADDRESS MASK
1)	MMADDS=	5		;ADDRESS SHIFT
1)	MMWWP=	BIT2		;WRITE WRONG PARITY
1)	MMPIE=	BIT0		;PARITY INTERRUPT ENABLE
1)	.NLIST
*** PRM11.13 *** PAGE 28  LINE 42
2)	.IF	DF KWASB
2)	.LIST
2)	.SBTTL	KW11 DEVICE REGISTERS AND BIT DEFINITIONS, 4-JUNE-75
2)	KWLIV==100		; VECTOR ADDRESS
2)	KWLKS=177546		; LINE CLOCK STATUS DEVICE ADDRESS
2)	KWLKE==100		; LINE CLOCK INTERRUPT ENABLE BIT
2)	.SBTTL	MM11 DEVICE REGISTERS AND BIT ASSIGNMENTS, 4-JUNE-75
2)	MMLPIV==114		;VECTOR ADDRESS
2)	MMLPBA=172100		;1ST MM11-LP DEVICE ADDRESS
2)	MMLPEA=172136		;LAST MM11-LP DEVICE ADDRESS

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 34,28

2)	MMERRF==BIT15		;ERROR FLAG
2)	MMADDM==7740		;ADDRESS MASK
2)	MMADDS==5		;ADDRESS SHIFT
2)	MMWWP==BIT2		;WRITE WRONG PARITY
2)	MMPIE==BIT0		;PARITY INTERRUPT ENABLE
2)	.NLIST


******** PRM11.DEC **** PAGE 35  LINE 28
1)	.IF	DF,DLASB
1)	.LIST
1)	.SBTTL	DL11 DEVICE REGISTERS AND BIT DEFINITIONS, 4-JUNE-75
1)	DLRIV=	60		; RECEIVER VECTOR ADDRESS
1)	DLTIV=	DLRIV+4		; TRANSMITTER VECTOR ADDRESS
1)	DLBA=	177560		; BASE FOR DEVICE ADDRESSES
1)	DLRCSR=	0		; RECEIVER STATUS REGISTER
1)	DLRBUF=	2		; RECEIVER BUFFER REGISTER
1)	DLXCSR=	4		; TRANSMITTER STATUS REGISTER
1)	DLXBUF=	6		; TRANSMITTER BUFFER REGISTER
1)	; BIT DEFINITIONS FOR "DLRCSR"- RECEIVER CONTROL STATUS REGISTER.
1)	DLDSC=	BIT15		; DATA STATUS CHANGE
1)	DLRI=	BIT14		; RING INDICATOR
1)	DLCTS=	BIT13		; CLEAR TO SEND
1)	DLCD=	BIT12		; CARRIER DETECT
1)	DLRA=	BIT11		; RECEIVER ACTIVE
1)	DLSRD=	BIT10		; SECONDARY RECEIVED DATA
1)	DLRD=	BIT7		; RECEIVER DONE
1)	DLRIE=	BIT6		; RECEIVER INTERRUPT ENABLE
1)	DLDIE=	BIT5		; DATA SET INTERRUPT ENABLE
1)	DLSTD=	BIT3		; SECONDARY TRANSMITTED DATA
1)	DLRTS=	BIT2		; REQUEST TO SEND
1)	DLDTR=	BIT1		; DATA TERMINAL READY
1)	DLRE=	BIT0		; READER ENABLE
1)	; BIT DEFINITIONS FOR "DLRBUF"- RECEIVER BUFFER.
1)	DLERR=	BIT15		; ERROR
1)	DLORE=	BIT14		; OVERRUN ERROR
1)	DLFE=	BIT13		; FRAMING ERROR
1)	DLRDPE=	BIT12		; RECEIVED DATA PARITY ERROR
1)	DLRDS=	0		; RECEIVED DATA SHIFT
1)	DLRDM=	377		; RECEIVED DATA MASK
1)	; BIT DEFINITIONS FOR "DLXCSR"- TRANSMITTER CONTROL STATUS REGISTER.
1)	DLTR=	BIT7		; TRANSMITTER READY
1)	DLTIE=	BIT6		; TRANSMITTER INTERRUPT ENABLE
1)	DLMAIN=	BIT2		; MAINTENANCE
1)	DLBRK=	BIT0		; BREAK
1)	; BIT DEFINITIONS FOR "DLXBUF"- TRANSMITTER BUFFER.
1)	DLTDS=	0		; TRANSMITTER DATA SHIFT
1)	DLTDM=	377		; TRANSMITTER DATA MASK

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 35,29

1)	.NLIST
*** PRM11.13 *** PAGE 29  LINE 29
2)	.IF	DF DLASB
2)	.LIST
2)	.SBTTL	DL11 DEVICE REGISTERS AND BIT DEFINITIONS, 4-JUNE-75
2)	DLRIV==60		; RECEIVER VECTOR ADDRESS
2)	DLTIV==DLRIV+4		; TRANSMITTER VECTOR ADDRESS
2)	DLBA=177560		; BASE FOR DEVICE ADDRESSES
2)	DLRCSR==0		; RECEIVER STATUS REGISTER
2)	DLRBUF==2		; RECEIVER BUFFER REGISTER
2)	DLXCSR==4		; TRANSMITTER STATUS REGISTER
2)	DLXBUF==6		; TRANSMITTER BUFFER REGISTER
2)	; BIT DEFINITIONS FOR "DLRCSR"- RECEIVER CONTROL STATUS REGISTER.
2)	DLDSC==BIT15		; DATA STATUS CHANGE
2)	DLRI==BIT14		; RING INDICATOR
2)	DLCTS==BIT13		; CLEAR TO SEND
2)	DLCD==BIT12		; CARRIER DETECT
2)	DLRA==BIT11		; RECEIVER ACTIVE
2)	DLSRD==BIT10		; SECONDARY RECEIVED DATA
2)	DLRD==BIT7		; RECEIVER DONE
2)	DLRIE==BIT6		; RECEIVER INTERRUPT ENABLE
2)	DLDIE==BIT5		; DATA SET INTERRUPT ENABLE
2)	DLSTD==BIT3		; SECONDARY TRANSMITTED DATA
2)	DLRTS==BIT2		; REQUEST TO SEND
2)	DLDTR==BIT1		; DATA TERMINAL READY
2)	DLRE==BIT0		; READER ENABLE
2)	; BIT DEFINITIONS FOR "DLRBUF"- RECEIVER BUFFER.
2)	DLERR==BIT15		; ERROR
2)	DLORE==BIT14		; OVERRUN ERROR
2)	DLFE==BIT13		; FRAMING ERROR
2)	DLRDPE==BIT12		; RECEIVED DATA PARITY ERROR
2)	DLRDS==0		; RECEIVED DATA SHIFT
2)	DLRDM==377		; RECEIVED DATA MASK
2)	; BIT DEFINITIONS FOR "DLXCSR"- TRANSMITTER CONTROL STATUS REGISTER.
2)	DLTR==BIT7		; TRANSMITTER READY
2)	DLTIE==BIT6		; TRANSMITTER INTERRUPT ENABLE
2)	DLMAIN==BIT2		; MAINTENANCE
2)	DLBRK==BIT0		; BREAK
2)	; BIT DEFINITIONS FOR "DLXBUF"- TRANSMITTER BUFFER.
2)	DLTDS==0		; TRANSMITTER DATA SHIFT
2)	DLTDM==377		; TRANSMITTER DATA MASK
2)	.NLIST


******** PRM11.DEC **** PAGE 36  LINE 52
1)	.IF	DF,DHASB
1)	.LIST
1)	.SBTTL	DH11 DEVICE REGISTERS AND BIT DEFINITIONS, 4-JUNE-75

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 36,30

1)	DHIVBA=	300		; INTERRUPT VECTOR BASE ADDRESS
1)	DHRIV=	0		; RECEIVER VECTOR ADDRESS
1)	DHTIV=	DHRIV+4		; TRANSMITTER VECTOR ADDRESS
1)	DHBA=	160020		; BASE FOR DEVICE ADDRESSES
1)	DHSCR=	0		; SYSTEM CONTROL REGISTER
1)	DHNRCR=	2		; NEXT RECEIVER CHARACTER REGISTER
1)	DHLPR=	4		; LINE PARAMETER REGISTER
1)	DHCAR=	6		; CURRENT ADDRESS REGISTER
1)	DHBCR=	10		; BYTE COUNT REGISTER
1)	DHBAR=	12		; TRANSMIT BUFFER ACTIVE REGISTER
1)	DHTBR=	14		; TRANSMIT BREAK REGISTER
1)	DHSSR=	16		; SILO STATUS REGISTER
1)	; BIT DEFINITIONS FOR "DHSCR"- STATUS CONTROL REGISTER.
1)	DHTI=	BIT15		; TRANSMITTER INTERRUPT
1)	DHSI=	BIT14		; STORAGE INTERRUPT
1)	DHTNIE=	BIT13		; TRANSMITTER AND NON-X-MEM INTERRUPT ENABLE
1)	DHSIE=	BIT12		; STORAGE INTERRUPT ENABLE
1)	DHMC=	BIT11		; MASTER CLEAR
1)	DHNXM=	BIT10		; NON-X-MEM
1)	DHMAIN=	BIT9		; MAINTENANCE
1)	DHCNXM=	BIT8		; CLEAR NON-X-MEM BIT
1)	DHRI=	BIT7		; RECEIVER INTERRUPT
1)	DHRIE=	BIT6		; RECEIVER INTERRUPT ENABLE
1)	DHMES=	4		; MEMORY EXTENSION SHIFT
1)	DHMEM=	60		; MEMORY EXTENSION MASK
1)	DHLSS=	0		; LINE SELECTION SHIFT
1)	DHLSM=	17		; LINE SELECTION MASK
1)	; BIT DEFINITIONS FOR "DHNRCR"- NEXT RECEIVER CHARACTER REGISTER.
1)	DHDP=	BIT15		; DATA PRESENT
1)	DHORE=	BIT14		; OVERRUN ERROR
1)	DHFE=	BIT13		; FRAMING ERROR
1)	DHRDPE=	BIT12		; RECEIVER DATA PARITY ERROR
1)	DHRLNS=	10		; RECEIVER LINE NUMBER SHIFT
1)	DHRLNM=	7400		; RECEIVER LINE NUMBER MASK
1)	DHRDS=	0		; RECEIVER DATA SHIFT
1)	DHRDM=	377		; RECEIVER DATA MASK
1)	; BIT DEFINITIONS FOR "DHLPR"- LINE PARAMETER REGISTER.
1)	DHAEE=	BIT15		; AUTO-ECHO ENABLE
1)	DHHD=	BIT14		; HALF-DUPLEX
1)	DHTSS=	12		; TRANSMITTER SPEED SHIFT
1)	DHTSM=	36000		; TRANSMITTER SPEED MASK
1)	DHRSS=	6		; RECEIVER SPEED SHIFT
1)	DHRSM=	1700		; RECEIVER SPEED MASK
1)	DHEP=	BIT5		; EVEN PARITY
1)	DHPE=	BIT4		; PARITY ENABLE
1)	DHTSB=	BIT2		; TWO STOP BITS
1)	DHCLS=	0		; CHARACTER LENGTH SHIFT
1)	DHCLM=	3		; CHARACTER LENGTH MASK

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 36,30

1)	DHCL5=	0		; CHARACTER LENGTH - 5 BITS
1)	DHCL6=	1		; CHARACTER LENGTH - 6 BITS
1)	DHCL7=	2		; CHARACTER LENGTH - 7 BITS
1)	DHCL8=	3		; CHARACTER LENGTH - 8 BITS
1)	; BIT DEFINITIONS FOR "DHSSR"- SILO STATUS REGISTER.
1)	DHSFLS=	10		; SILO FILL LEVEL SHIFT
1)	DHSFLM=	37400		; SILO FILL LEVEL MASK
1)	DHREMS=	6		; READ EXTENDED MEMORY SHIFT
1)	DHREMM=	300		; READ EXTENDED MEMORY MASK
1)	DHSALS=	0		; SILO ALARM LEVEL SHIFT
1)	DHSALM=	77		; SILO ALARM LEVEL MASK
1)	.NLIST
*** PRM11.13 *** PAGE 30  LINE 53
2)	.IF	DF DHASB
2)	.LIST
2)	.SBTTL	DH11 DEVICE REGISTERS AND BIT DEFINITIONS, 4-JUNE-75
2)	DHIVBA==300		; INTERRUPT VECTOR BASE ADDRESS
2)	DHRIV==0		; RECEIVER VECTOR ADDRESS
2)	DHTIV==DHRIV+4		; TRANSMITTER VECTOR ADDRESS
2)	DHBA==160020		; BASE FOR DEVICE ADDRESSES
2)	DHSCR==0		; SYSTEM CONTROL REGISTER
2)	DHNRCR==2		; NEXT RECEIVER CHARACTER REGISTER
2)	DHLPR==4		; LINE PARAMETER REGISTER
2)	DHCAR==6		; CURRENT ADDRESS REGISTER
2)	DHBCR==10		; BYTE COUNT REGISTER
2)	DHBAR==12		; TRANSMIT BUFFER ACTIVE REGISTER
2)	DHTBR==14		; TRANSMIT BREAK REGISTER
2)	DHSSR==16		; SILO STATUS REGISTER
2)	; BIT DEFINITIONS FOR "DHSCR"- STATUS CONTROL REGISTER.
2)	DHTI==BIT15		; TRANSMITTER INTERRUPT
2)	DHSI==BIT14		; STORAGE INTERRUPT
2)	DHTNIE==BIT13		; TRANSMITTER AND NON-X-MEM INTERRUPT ENABLE
2)	DHSIE==BIT12		; STORAGE INTERRUPT ENABLE
2)	DHMC==BIT11		; MASTER CLEAR
2)	DHNXM==BIT10		; NON-X-MEM
2)	DHMAIN==BIT9		; MAINTENANCE
2)	DHCNXM==BIT8		; CLEAR NON-X-MEM BIT
2)	DHRI==BIT7		; RECEIVER INTERRUPT
2)	DHRIE==BIT6		; RECEIVER INTERRUPT ENABLE
2)	DHMES==4		; MEMORY EXTENSION SHIFT
2)	DHMEM==60		; MEMORY EXTENSION MASK
2)	DHLSS==0		; LINE SELECTION SHIFT
2)	DHLSM==17		; LINE SELECTION MASK
2)	; BIT DEFINITIONS FOR "DHNRCR"- NEXT RECEIVER CHARACTER REGISTER.
2)	DHDP==BIT15		; DATA PRESENT
2)	DHORE==BIT14		; OVERRUN ERROR
2)	DHFE==BIT13		; FRAMING ERROR
2)	DHRDPE==BIT12		; RECEIVER DATA PARITY ERROR

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 36,30

2)	DHRLNS==10		; RECEIVER LINE NUMBER SHIFT
2)	DHRLNM==7400		; RECEIVER LINE NUMBER MASK
2)	DHRDS==0		; RECEIVER DATA SHIFT
2)	DHRDM==377		; RECEIVER DATA MASK
2)	; BIT DEFINITIONS FOR "DHLPR"- LINE PARAMETER REGISTER.
2)	DHAEE==BIT15		; AUTO-ECHO ENABLE
2)	DHHD==BIT14		; HALF-DUPLEX
2)	DHTSS==12		; TRANSMITTER SPEED SHIFT
2)	DHTSM==36000		; TRANSMITTER SPEED MASK
2)	DHRSS==6		; RECEIVER SPEED SHIFT
2)	DHRSM==1700		; RECEIVER SPEED MASK
2)	DHEP==BIT5		; EVEN PARITY
2)	DHPE==BIT4		; PARITY ENABLE
2)	DHTSB==BIT2		; TWO STOP BITS
2)	DHCLS==0		; CHARACTER LENGTH SHIFT
2)	DHCLM==3		; CHARACTER LENGTH MASK
2)	DHCL5==0		; CHARACTER LENGTH - 5 BITS
2)	DHCL6==1		; CHARACTER LENGTH - 6 BITS
2)	DHCL7==2		; CHARACTER LENGTH - 7 BITS
2)	DHCL8==3		; CHARACTER LENGTH - 8 BITS
2)	; BIT DEFINITIONS FOR "DHSSR"- SILO STATUS REGISTER.
2)	DHSFLS==10		; SILO FILL LEVEL SHIFT
2)	DHSFLM==37400		; SILO FILL LEVEL MASK
2)	DHREMS==6		; READ EXTENDED MEMORY SHIFT
2)	DHREMM==300		; READ EXTENDED MEMORY MASK
2)	DHSALS==0		; SILO ALARM LEVEL SHIFT
2)	DHSALM==77		; SILO ALARM LEVEL MASK
2)	.NLIST


******** PRM11.DEC **** PAGE 38  LINE 32
1)	.IF	DF,TAASB
1)	.LIST
*** PRM11.13 *** PAGE 31  LINE 76
2)	.IF	DF TAASB
2)	.LIST


******** PRM11.DEC **** PAGE 39  LINE 6
1)	TAIV=	260		;INTERRUPT VECTOR
1)	; BIT ASSIGNMENTS WITHIN THE CONTROL AND STATUS REGISTER
1)	TAGO=	1		;GO = START OPERATION
1)	TAFUNC=	16		;"FUNCTION TO BE PERFORMED" FIELD
1)	TAWFG=	0*2		;"WRITE FILE GAP" FUNCTION
1)	TAWRIT=	1*2		;"WRITE DATA" FUNCTION
1)	TAREAD=	2*2		;"READ DATA" FUNCTION
1)	TASRF=	3*2		;"SPACE REVERSE FILE" FUNCTION
1)	TASRB=	4*2		;"SPACE REVERSE BLOCK (RECORD)" FUNCTION

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 39,32

1)	TASFF=	5*2		;"SPACE FORWARD FILE" FUNCTION
1)	TASFB=	6*2		;"SPACE REVERSE BLOCK (RECORD)" FUNCTION
1)	TAREWD=	7*2		;"REWIND" FUNCTION
1)	TAILBS=	20		;INITIATE LAST BYTE SEQUENCE
1)	TAREDY=	40		;READY
1)	TAINTE=	100		;INTERRUPT ENABLE
1)	TARQST=	200		;TRANSFER REQUEST
1)	TAUNIT=	400		;UNIT SELECTION
1)	TAOFFL=	1000		;UNIT OFF LINE
1)	TATERR=	2000		;TIMING ERROR (LOST DATA)
1)	TAFGAP=	4000		;FILE GAP
1)	TALOCK=	10000		;WRITE LOCKED
1)	TALEAD=	20000		;CLEAR LEADER
1)	TABCHK=	40000		;BLOCK CHECK (BAD CRC AFTER READ)
1)	TAEROR=	100000		;ERROR (ERROR SUMMARY BIT)
1)	.NLIST
*** PRM11.13 *** PAGE 32  LINE 7
2)	TAIV==260		;INTERRUPT VECTOR
2)	; BIT ASSIGNMENTS WITHIN THE CONTROL AND STATUS REGISTER
2)	TAGO==1		;GO = START OPERATION
2)	TAFUNC==16		;"FUNCTION TO BE PERFORMED" FIELD
2)	TAWFG==0*2		;"WRITE FILE GAP" FUNCTION
2)	TAWRIT==1*2		;"WRITE DATA" FUNCTION
2)	TAREAD==2*2		;"READ DATA" FUNCTION
2)	TASRF==3*2		;"SPACE REVERSE FILE" FUNCTION
2)	TASRB==4*2		;"SPACE REVERSE BLOCK (RECORD)" FUNCTION
2)	TASFF==5*2		;"SPACE FORWARD FILE" FUNCTION
2)	TASFB==6*2		;"SPACE REVERSE BLOCK (RECORD)" FUNCTION
2)	TAREWD==7*2		;"REWIND" FUNCTION
2)	TAILBS==20		;INITIATE LAST BYTE SEQUENCE
2)	TAREDY==40		;READY
2)	TAINTE==100		;INTERRUPT ENABLE
2)	TARQST==200		;TRANSFER REQUEST
2)	TAUNIT==400		;UNIT SELECTION
2)	TAOFFL==1000		;UNIT OFF LINE
2)	TATERR==2000		;TIMING ERROR (LOST DATA)
2)	TAFGAP==4000		;FILE GAP
2)	TALOCK==10000		;WRITE LOCKED
2)	TALEAD==20000		;CLEAR LEADER
2)	TABCHK==40000		;BLOCK CHECK (BAD CRC AFTER READ)
2)	TAEROR==100000		;ERROR (ERROR SUMMARY BIT)
2)	.NLIST


******** PRM11.DEC **** PAGE 39  LINE 37
1)	.IF	DF,RXASB
1)	.LIST
*** PRM11.13 *** PAGE 32  LINE 38

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 39,32

2)	.IF	DF RXASB
2)	.LIST


******** PRM11.DEC **** PAGE 40  LINE 11
1)	RXIV=	264		;INTERRUPT VECTOR ADDRESS
1)	;RX11 FUNCTION CODES
1)	RXFBUF=	0		;FILL BUFFER
1)	RXEBUF=	2		;EMPTY BUFFER
1)	RXWSEC=	4		;WRITE SECTOR
1)	RXRSEC=	6		;READ SECTOR
1)	RXRSTAT=12		;READ STATUS
1)	RXWDDS=	14		;WRITE DELETED DATA SECTOR
1)	RXRERR=	16		;READ ERROR REGISTER
1)	;RX11 COMMAND AND STATUS REGISTER BIT DEFINITIONS
1)	RXGO=	1		;GO
1)	RXU1=	20		;RX01 UNIT # 1
1)	RXDONE=	40		;DONE
1)	RXIE=	100		;INTERRUPT ENABLE
1)	RXTREQ=	200		;TRANSFER REQUEST
1)	RXINI=	40000		;INITIALIZE
1)	RXERROR=100000		;ERROR
1)	;RX11 ERROR STATUS REGISTER BIT DEFINITIONS
1)	RXCRCE=	1		;CRC ERROR
1)	RXPARE=	2		;PARITY ERROR
1)	RXIDONE=4		;INITIALIZE DONE
1)	RXDDD=	100		;DELETED DATA DETECTED
1)	RXDRDY	=200		;DRIVE READY
1)	.NLIST
*** PRM11.13 *** PAGE 33  LINE 12
2)	RXIV==264		;INTERRUPT VECTOR ADDRESS
2)	;RX11 FUNCTION CODES
2)	RXFBUF==0		;FILL BUFFER
2)	RXEBUF==2		;EMPTY BUFFER
2)	RXWSEC==4		;WRITE SECTOR
2)	RXRSEC==6		;READ SECTOR
2)	RXRSTAT=12		;READ STATUS
2)	RXWDDS==14		;WRITE DELETED DATA SECTOR
2)	RXRERR==16		;READ ERROR REGISTER
2)	;RX11 COMMAND AND STATUS REGISTER BIT DEFINITIONS
2)	RXGO==1		;GO
2)	RXU1==20		;RX01 UNIT # 1
2)	RXDONE==40		;DONE
2)	RXIE==100		;INTERRUPT ENABLE
2)	RXTREQ==200		;TRANSFER REQUEST
2)	RXINI==40000		;INITIALIZE
2)	RXERROR==100000		;ERROR
2)	;RX11 ERROR STATUS REGISTER BIT DEFINITIONS

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 40,33

2)	RXCRCE==1		;CRC ERROR
2)	RXPARE==2		;PARITY ERROR
2)	RXIDONE==4		;INITIALIZE DONE
2)	RXDDD==100		;DELETED DATA DETECTED
2)	RXDRDY==200		;DRIVE READY
2)	.NLIST


******** PRM11.DEC **** PAGE 40  LINE 45
1)	.IF	DF,TCASB
1)	.LIST
*** PRM11.13 *** PAGE 33  LINE 46
2)	.IF	DF TCASB
2)	.LIST


******** PRM11.DEC **** PAGE 41  LINE 5
1)	TCILO=	BIT12		;ILLEGAL OPERATION
1)	TCSELE=	BIT11		;SELECTION ERROR
1)	TCIE=	BIT6		;INTERRUPT ENABLE
1)	TCDO=	BIT0		;DO OPERATION
1)	TCRDATA=BIT2		;READ DATA
1)	TCWDATA=BIT3+BIT2	;WRITE DATA
1)	TCRNUM=	BIT1		;READ BLOCK NUMBER
1)	TCREV=	BIT11		;REVERSE DIRECTION
1)	TCPAR=	BIT14		;PARITY ERROR
1)	TCBLKM=	BIT10		;BLOCK MISSED
1)	TCDATM=	BIT9		;DATA MISSED
1)	TCMTE=	BIT13		;MARK TRACK ERROR
1)	TCERR=	BIT15		;DECTAPE ERROR
1)	TCRDY=	BIT7		;READY
1)	TCSOFT=	TCPAR+TCBLKM+TCDATM+TCMTE
1)	TCST=	177340		;STATUS REGISTER
*** PRM11.13 *** PAGE 34  LINE 6
2)	TCILO==BIT12		;ILLEGAL OPERATION
2)	TCSELE==BIT11		;SELECTION ERROR
2)	TCIE==BIT6		;INTERRUPT ENABLE
2)	TCDO==BIT0		;DO OPERATION
2)	TCRDATA==BIT2		;READ DATA
2)	TCWDATA==BIT3+BIT2	;WRITE DATA
2)	TCRNUM==BIT1		;READ BLOCK NUMBER
2)	TCREV==BIT11		;REVERSE DIRECTION
2)	TCPAR==BIT14		;PARITY ERROR
2)	TCBLKM==BIT10		;BLOCK MISSED
2)	TCDATM==BIT9		;DATA MISSED
2)	TCMTE==BIT13		;MARK TRACK ERROR
2)	TCERR==BIT15		;DECTAPE ERROR
2)	TCRDY==BIT7		;READY
	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 41,34

2)	TCSOFT==TCPAR+TCBLKM+TCDATM+TCMTE
2)	TCST=177340		;STATUS REGISTER


******** PRM11.DEC **** PAGE 41  LINE 33
1)	.IF	DF,RPASB
1)	.LIST
1)	.SBTTL	RH11/RP04 REGISTER AND BIT DEFINITIONS, 4-JUNE-75
1)	BLKSIZ=	↑D256	;DISK BLOCK SIZE (IN 16-BIT WORDS)
1)	IFESIZ=	3	;INDEX FILE ENTRY SIZE (IN 16-BIT WORDS)
1)	FDESIZ=	↑D16	;FILE DIRECTORY ENTRY SIZE (IN 16-BIT WORDS)
1)	RPCS1=	0	;OFFSET TO RH11/RP04 CONTROL & STATUS REGISTER 1
1)	RPTRE=	BIT14	;"TRANSFER ERROR" BIT IN RPCS1
1)	RPMCPE=	BIT13	;"MASSBUS CONTROL BUS PARITY ERROR" BIT IN RPCS1
1)	RPDVA=	BIT11	;"DRIVE AVAILABLE" BIT IN RPCS1
1)	RPRDY=	BIT7	;"CONTROLLER READY" BIT IN RPCS1
1)	RPPRST=	21	;READ-IN PRESET FUNCTION IN RPCS1
1)	RPPACK=	23	;PACK ACKNOWLEDGE (SET VV) FUNCTION IN RPCS1
1)	RPWTFN=	61	;WRITE DATA FUNCTION IN RPCS1
1)	RPRDFN=	71	;READ DATA FUNCTION IN RPCS1
1)	RPWC=	2	;OFFSET TO RH11/RP04 WORD COUNT REGISTER
1)	RPBA=	4	;OFFSET TO RH11/RP04 UNIBUS ADDRESS REGISTER
1)	RPDA=	6	;OFFSET TO RH11/RP04 TRACK & SECTOR ADDRESS REGISTER
1)	RPCS2=	10	;OFFSET TO RH11/RP04 CONTROL & STATUS REGISTER 2
1)	RPCLR=	BIT5	;"CONTROLLER (AND MASSBUS) CLEAR" BIT IN RPCS2
1)	RPDS=	12	;OFFSET TO RH11/RP04 DRIVE STATUS REGISTER
1)	RPATA=	BIT15	;"ATTENTION ACTIVE" BIT IN RPDS
1)	RPERR=	BIT14	;"COMPOSITE ERROR" BIT IN RPDS
1)	RPMOL=	BIT12	;"MEDIUM ON-LINE" BIT IN RPDS
1)	RPDPR=	BIT8	;"DRIVE PRESENT" BIT IN RPDS
1)	RPDRY=	BIT7	;"DRIVE READY" BIT IN RPDS
1)	RPVV=	BIT6	;"VOLUME VALID" BIT IN RPDS
1)	RPOF=	32	;OFFSET TO RH11/RP04 OFFSET REGISTER (CONTAINING FMT22)
1)	RPFMT=	BIT12	;"FMT22" (16-BIT WORDS) BIT IN RPOF
1)	RPECI=	BIT11	;"ERROR CORRECTION CODE INHIBIT" BIT IN RPOF
1)	RPDC=	34	;OFFSET TO RH11/RP04 DESIRED CYLINDER REGISTER
1)	.NLIST
*** PRM11.13 *** PAGE 34  LINE 34
2)	.IF	DF RPASB
2)	.LIST
2)	.SBTTL	RH11/RP04 REGISTER AND BIT DEFINITIONS, 4-JUNE-75
2)	BLKSIZ==256.	;DISK BLOCK SIZE (IN 16-BIT WORDS)
2)	IFESIZ==3	;INDEX FILE ENTRY SIZE (IN 16-BIT WORDS)
2)	FDESIZ==16.	;FILE DIRECTORY ENTRY SIZE (IN 16-BIT WORDS)
2)	RPCS1==0	;OFFSET TO RH11/RP04 CONTROL & STATUS REGISTER 1
2)	RPTRE==BIT14	;"TRANSFER ERROR" BIT IN RPCS1
2)	RPMCPE==BIT13	;"MASSBUS CONTROL BUS PARITY ERROR" BIT IN RPCS1
2)	RPDVA==BIT11	;"DRIVE AVAILABLE" BIT IN RPCS1

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 41,34

2)	RPRDY==BIT7	;"CONTROLLER READY" BIT IN RPCS1
2)	RPPRST==21	;READ-IN PRESET FUNCTION IN RPCS1
2)	RPPACK==23	;PACK ACKNOWLEDGE (SET VV) FUNCTION IN RPCS1
2)	RPWTFN==61	;WRITE DATA FUNCTION IN RPCS1
2)	RPRDFN==71	;READ DATA FUNCTION IN RPCS1
2)	RPWC==2	;OFFSET TO RH11/RP04 WORD COUNT REGISTER
2)	RPBA==4	;OFFSET TO RH11/RP04 UNIBUS ADDRESS REGISTER
2)	RPDA==6	;OFFSET TO RH11/RP04 TRACK & SECTOR ADDRESS REGISTER
2)	RPCS2==10	;OFFSET TO RH11/RP04 CONTROL & STATUS REGISTER 2
2)	RPCLR==BIT5	;"CONTROLLER (AND MASSBUS) CLEAR" BIT IN RPCS2
2)	RPDS==12	;OFFSET TO RH11/RP04 DRIVE STATUS REGISTER
2)	RPATA==BIT15	;"ATTENTION ACTIVE" BIT IN RPDS
2)	RPERR==BIT14	;"COMPOSITE ERROR" BIT IN RPDS
2)	RPMOL==BIT12	;"MEDIUM ON-LINE" BIT IN RPDS
2)	RPDPR==BIT8	;"DRIVE PRESENT" BIT IN RPDS
2)	RPDRY==BIT7	;"DRIVE READY" BIT IN RPDS
2)	RPVV==BIT6	;"VOLUME VALID" BIT IN RPDS
2)	RPOF==32	;OFFSET TO RH11/RP04 OFFSET REGISTER (CONTAINING FMT22)
2)	RPFMT==BIT12	;"FMT22" (16-BIT WORDS) BIT IN RPOF
2)	RPECI==BIT11	;"ERROR CORRECTION CODE INHIBIT" BIT IN RPOF
2)	RPDC==34	;OFFSET TO RH11/RP04 DESIRED CYLINDER REGISTER
2)	.NLIST


******** PRM11.DEC **** PAGE 42  LINE 44
1)	.IF	DF,LPASB
1)	.LIST
*** PRM11.13 *** PAGE 35  LINE 45
2)	.IF	DF LPASB
2)	.LIST


******** PRM11.DEC **** PAGE 43  LINE 5
1)	LPAVEC=	210	;LP20A INTERRUPT VECTOR
1)	LPBVEC=	200	;LP20B INTERRUPT VECTOR
1)	LPCSRA=	0	;OFFSET TO LP20 PRIMARY STATUS REGISTER
1)	LPERR=	BIT15	;"ERROR" BIT IN LPCSRA
1)	LPPZRO=	BIT14	;"PAGZRO" BIT IN LPCSRA
1)	LPUCHR=	BIT13	;"UNDCHR" BIT IN LPCSRA
1)	LPVRDY=	BIT12	;"UNDCHR" BIT IN LPCSRA
1)	LPONLN=	BIT11	;"ONLINE" BIT IN LPCSRA
1)	LPDELH=	BIT10	;"DELHLD" BIT IN LPCSRA
1)	LPLINI=	BIT9	;"LOINIT" BIT IN LPCSRA
1)	LPRERR=	BIT8	;"RSTERR" BIT IN LPCSRA
1)	LPDONE=	BIT7	;"DONE" BIT IN LPCSRA
1)	LPIENB=	BIT6	;"INTENB" BIT IN LPCSRA
1)	LPBA17=	BIT5	;"BUSA17" BIT IN LPCSRA
1)	LPBA16=	BIT4	;"BUSA16" BIT IN LPCSRA

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 43,36

1)	LPVLOD=	BIT3	;"VFULOD" BIT IN LPCSRA
1)	LPTMOD=	BIT2	;"TSTMOD" BIT IN LPCSRA
1)	LPPENB=	BIT1	;"PARENB" BIT IN LPCSRA
1)	LPGO=	BIT0	;"GO" BIT IN LPCSRA
1)	LPCSRB=	2	;OFFSET TO LP20 ERROR AND TEST REGISTER
1)	LPTPBT=	BIT12	;"LPTPBT" BIT IN LPCSRB
1)	LPT02=	BIT10	;"TEST02" BIT IN LPCSRB
1)	LPT01=	BIT9	;"TEST01" BIT IN LPCSRB
1)	LPT00=	BIT8	;"TEST00" BIT IN LPCSRB
1)	LPOFFL=	BIT7	;"OFFLIN" BIT IN LPCSRB
1)	LPVERR=	BIT6	;"VFUERR" BIT IN LPCSRB
1)	LPTPAR=	BIT5	;"LPTPAR" BIT IN LPCSRB
1)	LPMPAR=	BIT4	;"MEMPAR" BIT IN LPCSRB
1)	LPRPAR=	BIT3	;"RAMPAR" BIT IN LPCSRB
1)	LPSYNT=	BIT2	;"SYNTIM" BIT IN LPCSRB
1)	LPDEMT=	BIT1	;"DEMTIM" BIT IN LPCSRB
1)	LPGOER=	BIT0	;"GOERR" BIT IN LPCSRB
1)	LPBSAD=	4	;OFFSET TO LP20 DMA BUS ADDRESS REGISTER
1)	LPBCTR=	6	;OFFSET TO LP20 DMA BYTE COUNTER REGISTER
1)	LPPCTR=	10	;OFFSET TO LP20 PAGE COUNTER REGISTER
1)	LPRAMD=	12	;OFFSET TO LP20 RAM DATA REGISTER
1)	LPCBUF=	14	;OFFSET TO LP20 CHAR BUFFER REGISTER (BYTE)
1)	LPCCTR=	15	;OFFSET TO LP20 COLUMN COUNTER REGISTER (BYTE)
1)	LPCKSM=	16	;OFFSET TO LP20 CHECKSUM REGISTER (BYTE)
1)	LPPDAT=	17	;OFFSET TO LP20 PRINTER DATA REGISTER (BYTE)
1)	.NLIST
*** PRM11.13 *** PAGE 36  LINE 6
2)	LPAVEC==210	;LP20A INTERRUPT VECTOR
2)	LPBVEC==200	;LP20B INTERRUPT VECTOR
2)	LPCSRA==0	;OFFSET TO LP20 PRIMARY STATUS REGISTER
2)	LPERR==BIT15	;"ERROR" BIT IN LPCSRA
2)	LPPZRO==BIT14	;"PAGZRO" BIT IN LPCSRA
2)	LPUCHR==BIT13	;"UNDCHR" BIT IN LPCSRA
2)	LPVRDY==BIT12	;"UNDCHR" BIT IN LPCSRA
2)	LPONLN==BIT11	;"ONLINE" BIT IN LPCSRA
2)	LPDELH==BIT10	;"DELHLD" BIT IN LPCSRA
2)	LPLINI==BIT9	;"LOINIT" BIT IN LPCSRA
2)	LPRERR==BIT8	;"RSTERR" BIT IN LPCSRA
2)	LPDONE==BIT7	;"DONE" BIT IN LPCSRA
2)	LPIENB==BIT6	;"INTENB" BIT IN LPCSRA
2)	LPBA17==BIT5	;"BUSA17" BIT IN LPCSRA
2)	LPBA16==BIT4	;"BUSA16" BIT IN LPCSRA
2)	LPVLOD==BIT3	;"VFULOD" BIT IN LPCSRA
2)	LPTMOD==BIT2	;"TSTMOD" BIT IN LPCSRA
2)	LPPENB==BIT1	;"PARENB" BIT IN LPCSRA
2)	LPGO==BIT0	;"GO" BIT IN LPCSRA
2)	LPCSRB==2	;OFFSET TO LP20 ERROR AND TEST REGISTER
2)	LPTPBT==BIT12	;"LPTPBT" BIT IN LPCSRB

	1) PRM11.DEC vs. 2) PRM11.13	SRCCOM	04-17-76	13:30	PAGES 43,36

2)	LPT02==BIT10	;"TEST02" BIT IN LPCSRB
2)	LPT01==BIT9	;"TEST01" BIT IN LPCSRB
2)	LPT00==BIT8	;"TEST00" BIT IN LPCSRB
2)	LPOFFL==BIT7	;"OFFLIN" BIT IN LPCSRB
2)	LPVERR==BIT6	;"VFUERR" BIT IN LPCSRB
2)	LPTPAR==BIT5	;"LPTPAR" BIT IN LPCSRB
2)	LPMPAR==BIT4	;"MEMPAR" BIT IN LPCSRB
2)	LPRPAR==BIT3	;"RAMPAR" BIT IN LPCSRB
2)	LPSYNT==BIT2	;"SYNTIM" BIT IN LPCSRB
2)	LPDEMT==BIT1	;"DEMTIM" BIT IN LPCSRB
2)	LPGOER==BIT0	;"GOERR" BIT IN LPCSRB
2)	LPBSAD==4	;OFFSET TO LP20 DMA BUS ADDRESS REGISTER
2)	LPBCTR==6	;OFFSET TO LP20 DMA BYTE COUNTER REGISTER
2)	LPPCTR==10	;OFFSET TO LP20 PAGE COUNTER REGISTER
2)	LPRAMD==12	;OFFSET TO LP20 RAM DATA REGISTER
2)	LPCBUF==14	;OFFSET TO LP20 CHAR BUFFER REGISTER (BYTE)
2)	LPCCTR==15	;OFFSET TO LP20 COLUMN COUNTER REGISTER (BYTE)
2)	LPCKSM==16	;OFFSET TO LP20 CHECKSUM REGISTER (BYTE)
2)	LPPDAT==17	;OFFSET TO LP20 PRINTER DATA REGISTER (BYTE)
2)	.NLIST



	1) CONS11.DEC vs. 2) CONS11.14	SRCCOM	04-17-76	13:46	PAGES 1,1

1)	.SBTTL	CONSOLE PACKAGE FOR KL10/11 INTERFACE, 9-SEPT-75
1)	CONSL:	MOV	#PR7,PS		;DISABLE INTERRUPTS
1)		MOV	#STACK,SP	;RESET STACK
*** CONS11.14 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;; 19 DEC 75  BUG FIXES, BREAK, DDT CMD, PCF CMD
2)	;;; 30 MAR 76  MODIFIED TO COEXIST WITH ITS IOELEVEN PROGRAM
2)	.SBTTL	CONSOLE PACKAGE FOR KL10/11 INTERFACE, 9-SEPT-75
2)	CONSL:	RESET			;DISABLE ALL DEVICES FROM INTERRUPTING
2)		CLR ITSFLG		;IF E.G. TRAP THROUGH LOC 4, TURN OFF ITS PROG
2)		MOV #PR0,PS		;BUT ENABLE INTERRUPTS
2)		MOV #STACK,SP		;RESET STACK


******** CONS11.DEC **** PAGE 4  LINE 13
1)	1$:	PFORCE
*** CONS11.14 *** PAGE 4  LINE 14
2)		TSTB TENRUN		;IF TEN IS RUNNING,
2)		BNE 2$			;DON'T GIVE COMMAND PROMPT
2)	1$:	PFORCE


******** CONS11.DEC **** PAGE 7  LINE 44
1)		.ASCII	/LP/		;LINE PRINTER SELECTION
1)		.ASCII	/KL/		;KLINIK SELECTION
*** CONS11.14 *** PAGE 7  LINE 45
2)	;	.ASCII /LP/		;LINE PRINTER SELECTION
2)		.ASCII /KL/		;KLINIK SELECTION


******** CONS11.DEC **** PAGE 8  LINE 18
1)		.ASCII	/CD/		;PDP-11 CORE DUMP
1)		.ASCII	/TA/		;ACT10 TO RP04 TRANSFER
*** CONS11.14 *** PAGE 8  LINE 19
2)	;	.ASCII /CD/		;PDP-11 CORE DUMP
2)		.ASCII /TA/		;ACT10 TO RP04 TRANSFER


******** CONS11.DEC **** PAGE 8  LINE 42
1)	$KDCEN:	0			;ERROR TRAP FOR NONEXISTANT COMMANDS
*** CONS11.14 *** PAGE 8  LINE 42
2)		.ASCII /IT/		;TUEN ON I.T.S. PROG
2)	$KDCEN:	0 			;ERROR TRAP FOR NONEXISTANT COMMANDS


******** CONS11.DEC **** PAGE 10  LINE 26
1)		$LPT			;LINE PRINTER SELECTION
1)		.KLINIK			;KLINIK SELECTION
*** CONS11.14 *** PAGE 10  LINE 27
2)	;	$LPT 			;LINE PRINTER SELECTION
2)		.KLINIK 		;KLINIK SELECTION


******** CONS11.DEC **** PAGE 11  LINE 18
1)		$CD			;PDP-11 CORE DUMP
1)		$TA			;ACT10 TO RP04 TRANSFER
*** CONS11.14 *** PAGE 10  LINE 47
2)	;	$CD 			;PDP-11 CORE DUMP
2)		$TA 			;ACT10 TO RP04 TRANSFER


******** CONS11.DEC **** PAGE 11  LINE 38
1)		$CMDER			;NO SUCH COMMAND
*** CONS11.14 *** PAGE 10  LINE 66
2)		$ITS			;TURN ON I.T.S. PROG
2)		$CMDER 			;NO SUCH COMMAND


******** CONS11.DEC **** PAGE 13  LINE 1
1)	.SBTTL	CONSOLE COMMAND REPEAT CONTROL
*** CONS11.14 *** PAGE 11  LINE 39
2)	;CHECK FOR I.T.S. IOELEVEN PROGRAM IN CORE
2)	ITSCHK:	CMP PID,PIDI
2)		BNE 1$
2)		CMP PID+2,PIDI+2
2)		BNE 1$
2)		RTS PC			;OK
2)	1$:	PMSG <? I.T.S. IO-ELEVEN PROGRAM NOT IN CORE>
2)		CLR ITSFLG
2)		JMP $CNTLC
2)	PIDI:	.RAD50 /IOELEV/
2)	;THE "ITS" COMMAND COMES HERE
2)	$ITS:	TTICHR			;MAKE SURE 3RD CHAR IS "S"
2)		 BCS 1$
2)		CMPB R0,#'S
2)		BNE 1$
2)		TTITRM
2)		MOV #-1,ITSFLG
2)		BR ITSCHK
2)	1$:	JMP $CMDER
2)	.SBTTL	CONSOLE COMMAND REPEAT CONTROL


	1) CONS11.DEC vs. 2) CONS11.14	SRCCOM	04-17-76	13:46	PAGES 25,23

******** CONS11.DEC **** PAGE 21  LINE 1
1)	.PC:	TTITRM
1)	$ALLPC=.
*** CONS11.14 *** PAGE 19  LINE 2
2)	.PC:	TTICHR
2)		 BCS $DPER1
2)		CMPB #'F,R0
2)		BEQ .PCF
2)		TTBTRM
2)	$ALLPC=.


******** CONS11.DEC **** PAGE 23  LINE 1
1)	.FE:	TTITRM
1)	$ALLFE=.
1)		PMSGR	<FE/>
1)	1$:	MOV	#DPFE,R4
*** CONS11.14 *** PAGE 20  LINE 2
2)	;PCF COMMAND - PRINT THE PC FLAGS
2)	.PCF:	TTITRM
2)		TST TENRUN		;TEN MUST BE STOPPED WHILE FLAGS ARE GOBBLED
2)		BEQ 1$
2)		DFXCTT
2)		  CLRRUN
2)		TDELAY
2)		DFXCTT
2)		  STPCLK
2)		JSR PC,PCF
2)		DFXCTT
2)		  STRCLK
2)		DFXCTT
2)		  SETRUN
2)		DFXCTT
2)		  CONBUT
2)		BR 2$
2)	1$:	JSR PC,PCF
2)	2$:	JMP ALLEX1		;CRLF AND RETURN TO KONSL
2)	PCF:	PMSG <PCF/ >
2)		MOV #PCFTBL,R5
2)		CLR R4			;R4 ZERO IF THIS IS FIRST FROB TYPED
2)	1$:	MOVB (R5)+,R0		;GET DIAG FUNC FOR NEXT BIT
2)		BEQ 9$			;BR IF END OF TABLE
2)		DFRD			;GET BIT INTO DTE REG
2)		MOV @.DAT1,R2		;BITS 0-3
2)		MOV @.DAT2,R1		;BITS 4-19
2)		.REPT 4
2)		 ASL R1
2)		 ROL R2
2)		.ENDR			;BITS 0-7 (4.9-4.2) RIGHT ALIGNED IN R2
2)		MOVB (R5)+,R1		;GET MASK FOR BIT OF INTEREST
2)		BPL 2$
2)		COM R2			;BIT BACKWARDS IN HARDWARE
2)		NEG R1
2)	2$:	MOV (R5)+,R0		;GET POINTER TO BIT NAME STRING
2)		BIT R1,R2
2)		BEQ 3$
2)		TST R4			;IF NOT FIRST, PUT A COMMA, SPACE
2)		BEQ 4$
2)		PNTCI
2)		  ", 
2)	4$:	PNTAL			;BIT IS ON, GIVE NAME
2)		INC R4
2)	3$:	BR 1$			;LOOP BACK FOR NEXT BIT
2)	9$:	RTS PC
2)	;PC FLAGS TABLE
2)	;FIRST BYTE IS DIAG FCN, SECOND IS MASK FOR BIT (NEGATIVE => BIT COMPLEMENTED)
2)	;SECOND WORD -> ASCIZ BIT NAME
2)	.MACRO PCFTE NAME,DFN,MASK
2)		.LIT $$ZZQ,<.ASCIZ\NAME\>
2)		.BYTE DFN,MASK
2)		.WORD $$ZZQ
2)	.ENDM
2)	PCFTBL:	PCFTE OV,131,40
2)		PCFTE CRY0,131,20
2)		PCFTE CRY1,131,10
2)		PCFTE FOV,132,20
2)		PCFTE FPD,130,2
2)		PCFTE USER,134,-40
2)		PCFTE IOTLSR,136,4
2)		PCFTE PUBLIC,135,20
2)		PCFTE ADB INH,137,40
2)		PCFTE TRP 2,130,40
2)		PCFTE TRP 1,130,4
2)		PCFTE FXU,132,10
2)		PCFTE DIV,131,2
2)		0
2)	.FE:	TTITRM
2)	$ALLFE:	PMSGR <FE/>
2)	1$:	MOV #DPFE,R4


******** CONS11.DEC **** PAGE 25  LINE 10
1)	$ALLSC=.
1)		PMSGR	<SC/>
1)	1$:	MOV	#DPSC,R4
*** CONS11.14 *** PAGE 21  LINE 8
2)	$ALLSC:	PMSGR <SC/>
2)	1$:	MOV #DPSC,R4


******** CONS11.DEC **** PAGE 25  LINE 40
1)		JSR	PC,$ALPIG	;PRINT PI GENS
1)		JSR	PC,$ALPIH	;PRINT PI HOLDS
1)		JSR	PC,$ALPIO	;PRINT PI ON'S
1)		POP	RPTFLG
1)		PCRLF
1)		CLR	ALLFLG
*** CONS11.14 *** PAGE 23  LINE 41
2)	;THESE JUST TAKE UP TIME DURING MICROCODE TRACING, SO HAVE BEEN COMMENTED OUT
2)	;	JSR PC,$ALPIG		;PRINT PI GENS
2)	;	JSR PC,$ALPIH		;PRINT PI HOLDS
2)	;	JSR PC,$ALPIO		;PRINT PI ON'S
2)	;	PCRLF
2)		POP RPTFLG
2)		CLR ALLFLG


******** CONS11.DEC **** PAGE 27  LINE 11
1)		MOV	#TDDT,R0
1)		JMP	$$ST		;GO TO START ROUTINE
1)	;SINGLE INSTRUCT PDP-10. ASSUME CLOCK IS RUNNING AND RUN IS SET
1)	$SI:	TENSP			;STOP TEN
1)		BCC	1$
1)		JMP	.XCTER		;DID NOT STOP PROPERLY
1)	1$:	CLR	R5
1)		TTISDL
*** CONS11.14 *** PAGE 25  LINE 12
2)		MOV TDDT,$$STJRS	;SET UP JRST INSTRUCTION
2)		MOVB TDDT+2,$$STJRS+2
2)			;I WISH THE HARDWARE PROVIDED AND EASY WAY TO CLEAR "USER"
2)			;MAYBE WE SHOULD PUT A SPECIAL JRST IN THE MICRCODE?
2)			;INSTEAD, A WARNING:
2)		DFRDT
2)		  134
2)		BIT #2,@.DAT1
2)		BNE 3$
2)		PMSG <? 10 IN USER MODE, YOU'VE GOTTA "MR" FIRST.>
2)		JMP $CNTLC
2)	3$:	CLR TENTTY
2)		MOV #$$STJRS,R0
2)		EXCT			;DO JRST TO DDT START ADDRESS
2)		BCC $RNN		;AND GO SAY -10 IS RUNNING
2)	$DDTER:	JMP .XCTER		;OR BARF IF UCODE HUNG
2)	;SINGLE INSTRUCT PDP-10. ASSUME CLOCK IS RUNNING AND RUN IS SET
2)	$SI:	TENSP 			;STOP TEN
2)		BCS $DDTER		;DID NOT STOP PROPERLY, BARF
2)		CLR R5
2)		TTISDL


	1) CONS11.DEC vs. 2) CONS11.14	SRCCOM	04-17-76	13:46	PAGES 28,26

******** CONS11.DEC **** PAGE 28  LINE 42
1)	$$CI:	IO10	DATAI CCA,,0	;INVALIDATE WITHOUT CORE UPDATE
1)	$$CF:	IO10	BLKO CCA,,0	;SWEEP CACHE, VALIDATING CORE
1)	.EVEN
*** CONS11.14 *** PAGE 26  LINE 43
2)	$$CI:	IO10 DATAI,CCA,,0	;INVALIDATE WITHOUT CORE UPDATE
2)	$$CF:	IO10 BLKO,CCA,,0	;SWEEP CACHE, VALIDATING CORE
2)	.EVEN


******** CONS11.DEC **** PAGE 38  LINE 34
1)	DATPAG:	IO10	DATAO PAG,,20	;SELECT AC BLOCK
1)	.EVEN
*** CONS11.14 *** PAGE 32  LINE 76
2)	DATPAG:	IO10 DATAO,PAG,,20	;SELECT AC BLOCK
2)	.EVEN


******** CONS11.DEC **** PAGE 39  LINE 9
1)	5$:	MOV	#2,R2		;STUFF ADDRESS INTO JRST
1)		MOV	#$$STJRS,R1
1)	41$:	BICB	#377,(R1)	;CLEAR OLD
1)		BISB	(R0)+,(R1)+	;STUFF NEW
1)		DEC	R2
1)		BNE	41$		;DO TWO BYTES
1)		BISB	(R0),(R1)	;DO LAST TWO BITS
*** CONS11.14 *** PAGE 33  LINE 10
2)	5$:	MOV #$$STJRS,R1		;STUFF ADDRESS INTO JRST
2)		MOVB (R0)+,(R1)+
2)		MOVB (R0)+,(R1)+
2)		BICB #3,(R1)
2)		BISB (R0),(R1)		;DO LAST TWO BITS


******** CONS11.DEC **** PAGE 40  LINE 28
1)		BNE	3$
1)		MOV	#TMON,R0	;IF NONE, START AT LAST START ADR
*** CONS11.14 *** PAGE 33  LINE 69
2)		BNE 11$
2)		MOV #TMON,R0		;IF NONE, START AT LAST START ADR


******** CONS11.DEC **** PAGE 40  LINE 33
1)		HRRI=541
1)		HRLZI=515
1)		JRST=254
1)		DTE=200
1)	$STTB1:	IO10 CONO APR,,267760		;RESET APR
1)		IO10 CONO PI,,10000		;PI SYSTEM CLEAR
1)		IO10 CONO PAG,,0		;PAGING SYSTEM CLEAR
1)		IO10 DATAO PAG,,0		;USER BASE CLEAR & AC SELECT
1)	.EVEN
*** CONS11.14 *** PAGE 33  LINE 74
2)	$STTB1:	IO10 CONO,APR,,267760		;RESET APR
2)		IO10 CONO,PI,,10000		;PI SYSTEM CLEAR
2)		IO10 CONO,PAG,,0		;PAGING SYSTEM CLEAR
2)		IO10 DATAO,PAG,,0		;USER BASE CLEAR & AC SELECT
2)	.EVEN


******** CONS11.DEC **** PAGE 42  LINE 1
1)	.EXM:	MOV	#.DPXAD,R5
*** CONS11.14 *** PAGE 34  LINE 35
2)	;MEMORY ZERO
2)	;  "MZ ADR,COUNT"
2)	.MZ:	DFLEGAL 		;FUNCTION LEGAL ?
2)		TTIS36 			;INPUT PDP-10 START ADDRESS
2)		MOV $DRAM,MMDAT		;SAVE IT
2)		MOV $DRAM+2,MMDAT+2
2)		MOV #MMDAT,R1		;POINTER FOR D10ZRO
2)		TTIS36			;INPUT NUMBER OF PDP-10 WORDS
2)		 BCS 1$
2)		MOV $DRAM+2,R2		;PICK UP NUMBER OF 64K MOBIES
2)		BEQ 2$
2)		BPL 4$
2)		MOV #XMEMSZ/64.,R2	;MZ 0,-1.  DON'T TRY TO CLEAR
2)		CLR $DRAM		; 4096 MILLION WORDS.
2)	4$:	CLR R0			;CLEAR ONE SMALL MOBY
2)		D10ZRO
2)		 BCS 3$
2)		JSR PC,$TIRDY		;ALLOW ↑C IN THIS SLOW LOOP
2)		BCS 69$
2)		CMPB $TICHR,#CNTRLC
2)		BNE 69$
2)		JMP $TICC		;↑C, ABORT
2)	69$:	INC MMDAT+2		;BUMP ADDRESS
2)		DEC R2
2)		BGT 4$
2)	2$:	MOV $DRAM,R0		;CLEAR FINAL FRACTIONAL MOBY
2)		BEQ 5$			;EXACT MULTIPLE OF 64K
2)		D10ZRO 			;ZERO MEMORY
2)		 BCS 3$
2)	5$:	JMP $KONSL
2)	1$:	MOV #1,$DRAM		;NO COUNT SPECIFIED
2)		BR 2$			;SO CLEAR ONE WORD
2)	3$:	PMSG <?MZ>
2)		JSR R1,$DFTM1
2)	.EXM:	MOV #.DPXAD,R5


******** CONS11.DEC **** PAGE 44  LINE 1
1)	;MEMORY ZERO
1)	;  "MZ ADR,COUNT"
1)	.MZ:	DFLEGAL			;FUNCTION LEGAL ?
1)		TTIS36			;INPUT PDP-10 START ADDRESS
1)		MOV	R0,R1
1)		TTISDL
1)		 BCS	1$
1)		TTIOCT			;INPUT 16BIT MEMORY ZERO COUNT
1)		 BCS	1$
1)	2$:	D10ZRO			;ZERO MEMORY
1)		 BCS	3$
1)		JMP	$KONSL
1)	1$:	MOV	#1,R0		;NO COUNT SPECIFIED
1)		BR	2$		;CLEAR ONE WORD
1)	3$:	PMSG	<?MZ>
1)		JSR	R1,$DFTM1
1)	.SBTTL	CONSOLE IDLE RUN LOOP
*** CONS11.14 *** PAGE 36  LINE 2
2)	.SBTTL	CONSOLE IDLE RUN LOOP

	1) CONS11.DEC vs. 2) CONS11.14	SRCCOM	04-17-76	13:46	PAGES 46,37

******** CONS11.DEC **** PAGE 45  LINE 8
1)	22$:	JMP	$TTILIN		;NO, CONSOLE COMMAND INPUT
1)	1$:	CLR	DDTTM2		;SETUP DDT MODE TIMEOUT
1)	2$:	BIT	#KLRUN,@.DIAG1
*** CONS11.14 *** PAGE 36  LINE 22
2)		JMP $TTILIN		;NO, CONSOLE COMMAND INPUT
2)	1$:	TST ITSFLG		;USING I.T.S. IO-ELEVEN PROGRAM?
2)		BEQ 11$			;NO, USE D.E.C. STUFF
2)		JSR PC,ITSCHK		;YES, MAKE SURE IT'S STILL IN CORE
2)		JSR PC,@#3000		;IT IS, CALL IT
2)		BCS MTTYI0		;RETURNS WITH CARRY SET => TEMPORARY KLDCP CMD MODE.
2)					;OTHERWISE, PROBABLY 10 HALTED.  CHECK IT OUT.
2)	11$:	CLR DDTTM2		;SETUP DDT MODE TIMEOUT
2)	2$:	BIT #KLRUN,@.DIAG1


******** CONS11.DEC **** PAGE 46  LINE 4
1)		BIC	#177600,R0	;STRIP TO 7 BITS
1)		CMPB	R0,#MSWCHR	;MONITOR TO "KLDCP" SWITCH CHAR ?
1)		BNE	1$
1)		CLR	MONMODE		;YES, CLEAR MONITOR SUPPORT MODE
1)		PMSG	<\KLDCP\. ←>
1)		BR	$RUNLP		;STAY IN PDP-10 SUPPORT RUN LOOP
1)	1$:	MOV	R0,TENDAT
1)		DPOSVT			;SEND CHAR TO TEN
*** CONS11.14 *** PAGE 37  LINE 5
2)		CMPB R0,#MSWCHR		;MONITOR TO "KLDCP" SWITCH CHAR ?
2)		BNE MTTYI1
2)	MTTYI0:	PMSG <\KLDCP\. ←>	;PROMPT FOR TEMPORARY KLDCP MODE
2)		JMP $TTILIN		;AND READ ONE KLDCP COMMAND LINE
2)	MTTYI1:	MOV R0,TENDAT
2)		DPOSVT 			;SEND CHAR TO TEN


******** CONS11.DEC **** PAGE 46  LINE 50
1)		BR	$$TDX
1)	MTTYS:	MOV	MONMODE,R0	;SEND 10 MONITOR TTY STATE
*** CONS11.14 *** PAGE 37  LINE 49
2)		JMP $CONSL
2)	MTTYS:	MOV MONMODE,R0		;SEND 10 MONITOR TTY STATE


******** CONS11.DEC **** PAGE 47  LINE 44
1)		JSR	R1,$DFTM1
1)	TENCERR:CLR	TENRUN
*** CONS11.14 *** PAGE 38  LINE 45
2)		BR $$TDX
2)	TENCERR:CLR TENRUN


******** CONS11.DEC **** PAGE 48  LINE 42
1)		PCRLF
1)	$$TDX:	JMP	$CONSL
1)	C10TO:	SETFLG
*** CONS11.14 *** PAGE 39  LINE 43
2)	$$TDX:	PCRLF			;TEN BLEW UP (FELL FLAT?)
2)		MOV #7,R5		;((WAS MOWED DOWN BY A FELL FLAT DISK?))
2)	1$:	PBELL			;GO FEEP FEEP FEEP FEEP FEEP
2)		CLR R0
2)	3$:	DEC R0
2)		BNE 3$
2)		DEC R5
2)		BNE 1$
2)		JMP $CONSL
2)	C10TO:	SETFLG


******** CONS11.DEC **** PAGE 49  LINE 24
1)	C10TIE=.
1)	1$:	PMSG	<?10 TTI>
1)		BR	$$C1
1)	C10TIZ=.
1)	2$:	TTILIN			;INPUT LINE FOR TEN
1)		 BCS	5$		;NO RESPONSE
*** CONS11.14 *** PAGE 40  LINE 25
2)	C10TIE:	PMSG <?10 TTI>
2)		BR $$TDX
2)	C10TIZ:	TTILIN 			;INPUT LINE FOR TEN
2)		 BCS 5$			;NO RESPONSE


******** CONS11.DEC **** PAGE 49  LINE 45
1)	C10X:	BR	C10DON
1)	C10SW:	DPOSVT			;LOAD SWITCHES INTO FROM 11 WORD
*** CONS11.14 *** PAGE 40  LINE 45
2)	C10X:	JMP C10DON
2)	C10SW:	DPOSVT 			;LOAD SWITCHES INTO FROM 11 WORD


******** CONS11.DEC **** PAGE 50  LINE 5
1)	C10SWE=.
1)	1$:	PMSG	<?10 SW>
1)	$$C1:	JMP	$CNTLC
1)	$SW:	MOV	#SWS10,R5
*** CONS11.14 *** PAGE 41  LINE 6
2)	C10SWE:	PMSG <?10 SW>
2)		BR $$TDX
2)	$SW:	MOV #SWS10,R5


******** CONS11.DEC **** PAGE 50  LINE 35
1)	3$:	CMPB	R0,#CNTRLX	;CONTROL X, NEXT LINE IS CONSOLE CMD
1)		BNE	C10TIX
*** CONS11.14 *** PAGE 41  LINE 35
2)	3$:	CMPB R0,#MSWCHR
2)		BEQ 4$			;BREAK => RETURN TO KLDCP
2)		CMPB R0,#CNTRLX		;CONTROL X, NEXT LINE IS CONSOLE CMD
2)		BNE C10TIX


******** CONS11.DEC **** PAGE 51  LINE 1
1)	C10PRG:	MOV	R5,R1		;GET CONTROL FIELD
*** CONS11.14 *** PAGE 41  LINE 43
2)	4$:	JMP MTTYI0
2)	C10PRG:	MOV R5,R1		;GET CONTROL FIELD


******** CONS11.DEC **** PAGE 53  LINE 39
1)		JMP	$CNTLC
1)	;PDP-10 SWITCH REGISTER
*** CONS11.14 *** PAGE 43  LINE 71
2)		JMP $$TDX
2)	;PDP-10 SWITCH REGISTER


******** CONS11.DEC **** PAGE 56  LINE 31
1)		JMP	$CNTLC
1)	DIAEOF=.			;DIAMON READ END-OF-FILE
*** CONS11.14 *** PAGE 45  LINE 68
2)		JMP $$TDX
2)	DIAEOF=. 			;DIAMON READ END-OF-FILE


******** CONS11.DEC **** PAGE 66  LINE 3
1)	$LPT:	PMSG	<LP, Y OR N ? - ←>
*** CONS11.14 *** PAGE 53  LINE 4
2)	.IFNZ 0				;TURN OFF TO SAVE SPACE?
2)	$LPT:	PMSG <LP, Y OR N ? - ←>


******** CONS11.DEC **** PAGE 68  LINE 1
1)	.SBTTL	CONSOLE TELETYPE FUNCTIONS
*** CONS11.14 *** PAGE 53  LINE 79
2)	.ENDC ;TURN OFF TO SAVE SPACE?
2)	.SBTTL	CONSOLE TELETYPE FUNCTIONS
	1) BPNT11.DEC vs. 2) BPNT11.1	SRCCOM	04-17-76	13:59	PAGES 1,1

******** BPNT11.DEC **** PAGE 1  LINE 1
1)	.SBTTL	BREAKPOINT FUNCTIONS, 1-JULY-75
1)	;BP		;PRINTS ACTIVE BREAKPOINTS
*** BPNT11.1 *** PAGE 1  LINE 1
2)	COMMENT ⊗   VALID 00008 PAGES
2)	;;;MODIFICATION HISTORY


******** BPNT11.DEC **** PAGE 2  LINE 10
1)	;RB 0		;REMOVE ALL BP'S
*** BPNT11.1 *** PAGE 3  LINE 2
2)	.SBTTL	BREAKPOINT FUNCTIONS, 1-JULY-75
2)	;BP		;PRINTS ACTIVE BREAKPOINTS


******** BPNT11.DEC **** PAGE 2  LINE 15
1)	.BP:	TTISDL
*** BPNT11.1 *** PAGE 3  LINE 8
2)	;BC COUNT	;BP CONTINUE FOR COUNT
2)	;RB		;REMOVE CURRENT BP
2)	;RB 0		;REMOVE ALL BP'S
2)	;RB ADR		;REMOVE BP AT ADR
2)	;BREAK POINT INSERTION
2)	.BP:	TTISDL
	1) SUB11.DEC vs. 2) SUB11.10	SRCCOM	04-17-76	14:00	PAGES 1,1

******** SUB11.DEC **** PAGE 1  LINE 1
1)	.SBTTL	BASIC INITIALIZATION ROUTINE, 19-AUG-75
1)	;*THIS SUBROUTINE PERFORMS THE MOST ELEMENTARY SET UP FOR THE CPU
*** SUB11.10 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT


******** SUB11.DEC **** PAGE 2  LINE 7
1)	$$ILOAD:MOV	#STACK,SP
1)		MOV	#<<.DELAY-$ILDCLR>/2>,R1
*** SUB11.10 *** PAGE 3  LINE 2
2)	.SBTTL	BASIC INITIALIZATION ROUTINE, 19-AUG-75
2)	;*THIS SUBROUTINE PERFORMS THE MOST ELEMENTARY SET UP FOR THE CPU
2)	;*THIS ROUTINE MUST BE EXECUTED BY ALL OF THE POSSIBLE START
2)	;*OPTIONS PRIOR TO ANY OTHER SUBROUTINE
2)	$$ILOAD:RESET			;DISABLE ALL DEVICES FROM INTERRUPTING
2)		MOV #STACK,SP
2)		MOV #<<.DELAY-$ILDCLR>/2>,R1


******** SUB11.DEC **** PAGE 2  LINE 19
1)	$SBRINT:MOV	#PR7,PS		;SET CPU TO PR7
1)		CLR	R0		;SET ENTIRE VECTOR AREA TO:
*** SUB11.10 *** PAGE 3  LINE 21
2)	$SBRINT:MOV #STACK,SP	 	;SET THE STACK POINTER
2)	.IF DF %%DDT
2)		MOV @#14,-(SP)		;IF DDT IS IN CORE, DON'T WIPE OUT BPT VEC
2)		MOV @#16,-(SP)
2)	.ENDC
2)		MOV #PR7,PS		;SET CPU TO PR7
2)		CLR R0			;SET ENTIRE VECTOR AREA TO:


******** SUB11.DEC **** PAGE 2  LINE 31
1)		MOV	#STACK,SP	 ;SET THE STACK POINTER
1)		MOV	#.BCCT,@#BPTVEC	;SET BP VECTOR
1)	11$:	MOV	#BUFCLR,R0	;CLEAR BUFFER STORAGE BETWEEN:
*** SUB11.10 *** PAGE 3  LINE 38
2)		MOV #PR0,@#EMTVEC+2  ;DO EMTS AT PR0 SO ITS IOELEVEN PROGRAM CAN WIN
2)	.IF NDF %%DDT
2)		MOV #.BCCT,@#BPTVEC	;SET BP VECTOR
2)	.IFF
2)		MOV (SP)+,@#16		;SET UP FOR DDT
2)		MOV (SP)+,@#14		;WE WON'T BE USING THE KLDCP BREAKPOINTS, PROBABLY
2)	.ENDC
2)	11$:	MOV #BUFCLR,R0		;CLEAR BUFFER STORAGE BETWEEN:


******** SUB11.DEC **** PAGE 2  LINE 45
1)		MOV	#80.,$PGWID	;SET PAGE WIDTH PARAMETER TO 80.
1)		MOV	#2,$TTYFL	;SET FILL PARAMETER TO 300 BAUD
1)		PFORCE			;MUST TYPE STARTUP
*** SUB11.10 *** PAGE 3  LINE 56
2)		MOV #120.,$PGWID	;SET PAGE WIDTH FOR LA36
2)		MOV #0,$TTYFL		;SET FILL PARAMETER FOR LA36
2)		PFORCE 			;MUST TYPE STARTUP


******** SUB11.DEC **** PAGE 3  LINE 18
1)		PMSG	<\11 SWR = >
*** SUB11.10 *** PAGE 4  LINE 19
2)		PMSG <, MIT VERSION >
2)		MOV #MITVER,R0
2)		PNTDEC
2)		PMSG <\11 SWR = >


******** SUB11.DEC **** PAGE 12  LINE 3
1)	$PLPT:	PUSH	R0
*** SUB11.10 *** PAGE 12  LINE 4
2)	.IF DF LPASB
2)	$PLPT:	PUSH R0


******** SUB11.DEC **** PAGE 13  LINE 34
1)	$LPTOF:	.ASCIZ	/LPT OFF/<CR><LF>
1)	.EVEN
1)	;OPERATOR INTERRUPT TYPEIN CHECKS
*** SUB11.10 *** PAGE 13  LINE 35
2)	$LPTOF:	.ASCIZ /LPT OFF
2)	/
2)	.EVEN
2)	.ENDC ;LPASB
2)	.IELSE $PLPT: EXITERR
2)	;OPERATOR INTERRUPT TYPEIN CHECKS


******** SUB11.DEC **** PAGE 14  LINE 9
1)		BICB	#200,R3
1)		MOV	R3,$TNCHR
*** SUB11.10 *** PAGE 14  LINE 10
2)		MOV R3,$TNCHR


******** SUB11.DEC **** PAGE 14  LINE 44
1)	$PTCO:	.ASCIZ	/↑O/<CR><LF>
1)	.EVEN
*** SUB11.10 *** PAGE 14  LINE 44
2)	$PTCO:	.ASCIZ /↑O
2)	/
2)	.EVEN


******** SUB11.DEC **** PAGE 21  LINE 25
1)		BR	$TTIX1		;RETURN
1)	.SBTTL	TTY ALT-MODE CHECK ROUTINE
*** SUB11.10 *** PAGE 20  LINE 26
2)		BR $$PSX2		;RETURN
2)	.SBTTL	TTY ALT-MODE CHECK ROUTINE


******** SUB11.DEC **** PAGE 24  LINE 25
1)		BICB	#200,(R1)
1)		MOVB	(R1),$TNCHR	;SAVE CHAR FOR TEN
*** SUB11.10 *** PAGE 23  LINE 26
2)		MOVB (R1),$TNCHR	;SAVE CHAR FOR TEN


	1) SUB11.DEC vs. 2) SUB11.10	SRCCOM	04-17-76	14:00	PAGES 28,27

******** SUB11.DEC **** PAGE 28  LINE 5
1)		MOVB	@$TKB,$TICHR	;YES, GET CHAR
1)	1$:	CLC			;C-BIT CLEAR RETURN
1)		RTS	PC
1)	2$:	TST	DL11EFLG	;DOING DL11E ?
*** SUB11.10 *** PAGE 27  LINE 6
2)		BIT #20000,@$TKB	;BREAK?
2)		BNE 5$
2)		MOVB @$TKB,$TICHR	;GET CHAR
2)		BICB #200,$TICHR
2)	1$:	CLC 			;C-BIT CLEAR RETURN
2)		RTS PC
2)	5$:	MOVB #MSWCHR,$TICHR	;TURN BREAK INTO MAGIC CHARACTER WHICH, WHEN READ,
2)		BR 1$			;CAUSES CONSOLE TO SWITCH OUT OF MONITOR MODE.
2)	2$:	TST DL11EFLG		;DOING DL11E ?


******** SUB11.DEC **** PAGE 37  LINE 33
1)		CMP	R0,#2777
1)		BLE	$$PEX4
*** SUB11.10 *** PAGE 36  LINE 34
2)		CMP R0,#CRMSIZ
2)		BLE $$PEX4


******** SUB11.DEC **** PAGE 45  LINE 35
1)		BICB	#200,R4
1)		CMPB	#CNTRLC,R4	;IS IT CONTROL C ?
*** SUB11.10 *** PAGE 44  LINE 36
2)		CMPB #CNTRLC,R4		;IS IT CONTROL C ?


******** SUB11.DEC **** PAGE 46  LINE 11
1)	1$:	RTT				;RETURN TO USER
1)	;MEMORY PARITY
*** SUB11.10 *** PAGE 45  LINE 12
2)		RTI 			;RETURN TO USER
2)	;MEMORY PARITY


******** SUB11.DEC **** PAGE 51  LINE 27
1)	$SMTAB:	IO10 CONO APR,,200000	;IO SYS CLEAR
1)		IO10 CONO PI,,10000	;PI SYS CLEAR
1)		.EVEN
*** SUB11.10 *** PAGE 49  LINE 28
2)	$SMTAB:	IO10 CONO,APR,,200000	;IO SYS CLEAR
2)		IO10 CONO,PI,,10000	;PI SYS CLEAR
2)		.EVEN


******** SUB11.DEC **** PAGE 53  LINE 5
1)		CLR	TENCLK		;CLEAR TEN USING CLOCK FLAG
1)		MOV	#DCOMST!DFUNC!<CLRRUN*1000>,@.DIAG1
*** SUB11.10 *** PAGE 51  LINE 6
2)	;	CLR TENCLK		;CLEAR TEN USING CLOCK FLAG
2)			;DON'T CLEAR TENCLK BECAUSE MIGHT WANT TO CONTINUE THE SYSTEM
2)		MOV #DCOMST!DFUNC!<CLRRUN*1000>,@.DIAG1



	1) FD11.DEC vs. 2) FD11.1	SRCCOM	04-17-76	14:20	PAGES 1,1

******** FD11.DEC **** PAGE 1  LINE 1
1)	.SBTTL	CONTROL RAM CONSOLE FUNCTIONS, 9-SEPTEMBER-75
*** FD11.1 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;;
2)	.SBTTL	CONTROL RAM CONSOLE FUNCTIONS, 9-SEPTEMBER-75




	1) FLOPPY.DEC vs. 2) FLOPPY.1	SRCCOM	04-17-76	14:22	PAGES 1,1

******** FLOPPY.DEC **** PAGE 1  LINE 1
1)	.SBTTL	RX11/RX01 (FLOPPY) DEVICE DRIVER ROUTINES, 22-JULY-75
*** FLOPPY.1 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;;
2)	.SBTTL	RX11/RX01 (FLOPPY) DEVICE DRIVER ROUTINES, 22-JULY-75



	1) APT11.DEC vs. 2) APT11.2	SRCCOM	04-17-76	14:24	PAGES 1,1

******** APT11.DEC **** PAGE 1  LINE 1
1)	.SBTTL	APT10 PDP-11 PROCESS, 13-AUG-75
*** APT11.2 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;;
2)	.SBTTL	APT10 PDP-11 PROCESS, 13-AUG-75



	1) CDMP11.DEC vs. 2) CDMP11.1	SRCCOM	04-17-76	14:25	PAGES 1,1

******** CDMP11.DEC **** PAGE 1  LINE 1
1)	.SBTTL	PDP-11 CORE DUMP, 4-SEPT-75
*** CDMP11.1 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;;
2)	.SBTTL	PDP-11 CORE DUMP, 4-SEPT-75


	1) DTA11.DEC vs. 2) DTA11.2	SRCCOM	04-17-76	14:21	PAGES 1,1

******** DTA11.DEC **** PAGE 1  LINE 1
1)	.SBTTL	PROGRAM FILE LOADER, 4-SEPT-75
*** DTA11.2 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;;
2)	.SBTTL	PROGRAM FILE LOADER, 4-SEPT-75


******** DTA11.DEC **** PAGE 6  LINE 3
1)	DTRPLD:	CMP	#5,LDCNTL	;PDP-11 .BIN FILE LOAD ?
1)		BNE	LLD1
*** DTA11.2 *** PAGE 6  LINE 4
2)	DTRPLD:	MOV #-1,DEVLC
2)		CMP #5,LDCNTL		;PDP-11 .BIN FILE LOAD ?
2)		BNE LLD1


******** DTA11.DEC **** PAGE 7  LINE 1
1)	LLDONE:	MOV	R4,DVCNT	;RESAVE POINTERS
*** DTA11.2 *** PAGE 6  LINE 43
2)	LDERR:	JMP ACTLDF		;LOAD ERROR
2)	LLDONE:	MOV R4,DVCNT		;RESAVE POINTERS


******** DTA11.DEC **** PAGE 8  LINE 35
1)	LDERR:	JMP	ACTLDF		;LOAD ERROR
1)	LDEOL:	MOV	R2,(R1)		;STORE CHECKSUM
*** DTA11.2 *** PAGE 8  LINE 2
2)	LDEOL:	MOV R2,(R1)		;STORE CHECKSUM

	1) RP0411.DEC vs. 2) RP0411.3	SRCCOM	04-17-76	14:22	PAGES 1,1

******** RP0411.DEC **** PAGE 1  LINE 1
1)	.SBTTL	RP04 CONSOLE SELECTION, 5-AUG-75
*** RP0411.3 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;;
2)	.SBTTL	RP04 CONSOLE SELECTION, 5-AUG-75


******** RP0411.DEC **** PAGE 6  LINE 48
1)		.ENABL	LC
1)		.BYTE	-140,'a,'z	;LOWER CASE LETTERS
*** RP0411.3 *** PAGE 5  LINE 49
2)	;	.ENABL LC
2)		.BYTE -140,'a,'z	;LOWER CASE LETTERS


******** RP0411.DEC **** PAGE 7  LINE 18
1)		MOV	#DVBUF+<↑D105*2>,R1
1)		MOV	#RPIXCY,R2
1)	1$:	MOV	(R1)+,(R2)+
1)		CMP	R1,#DVBUF+<↑D111*2>
1)		BLO	1$
*** RP0411.3 *** PAGE 6  LINE 19
2)		MOV #DVBUF+<105.*2>,R1
2)		MOV #RPIXCY,R2
2)	1$:	MOV (R1)+,(R2)+
2)		CMP R1,#DVBUF+<111.*2>
2)		BLO 1$


******** RP0411.DEC **** PAGE 7  LINE 32
1)		MOV	#DVBUF+<↑D98*2>,R1
1)		MOV	#FSNAME,R2
*** RP0411.3 *** PAGE 6  LINE 33
2)		MOV #DVBUF+<98.*2>,R1
2)		MOV #FSNAME,R2


******** RP0411.DEC **** PAGE 7  LINE 36
1)		CMP	R1,#DVBUF+<↑D104*2>
1)		BLO	2$
*** RP0411.3 *** PAGE 6  LINE 37
2)		CMP R1,#DVBUF+<104.*2>
2)		BLO 2$


******** RP0411.DEC **** PAGE 11  LINE 7
1)		ADD	#↑D16*2,R4	;R4 POINTS TO CURRENT POSITION BLOCK
1)		MOV	BUFSIZ,R3	;BUFFER SIZE TO R3
1)		MOV	↑D8*2(R2),R0	;R0 = M.S. NUMBER OF WORDS WRITTEN
1)		MOV	↑D9*2(R2),R1	;R1 = L.S. NUMBER OF WORDS WRITTEN
1)		SUB	2(R4),R1	;R1 = L.S. NUMBER OF WORDS REMAINING
*** RP0411.3 *** PAGE 9  LINE 8
2)		ADD #16.*2,R4		;R4 POINTS TO CURRENT POSITION BLOCK
2)		MOV BUFSIZ,R3		;BUFFER SIZE TO R3
2)		MOV 8.*2(R2),R0		;R0 = M.S. NUMBER OF WORDS WRITTEN
2)		MOV 9.*2(R2),R1		;R1 = L.S. NUMBER OF WORDS WRITTEN
2)		SUB 2(R4),R1		;R1 = L.S. NUMBER OF WORDS REMAINING


******** RP0411.DEC **** PAGE 13  LINE 9
1)		MOV	↑D16*2(R2),R0	;R0 = M.S. CURRENT POSITION
1)		MOV	↑D17*2(R2),R1	;R1 = L.S. CURRENT POSITION
1)		MOV	BUFSIZ,R3
*** RP0411.3 *** PAGE 10  LINE 10
2)		MOV 16.*2(R2),R0	;R0 = M.S. CURRENT POSITION
2)		MOV 17.*2(R2),R1	;R1 = L.S. CURRENT POSITION
2)		MOV BUFSIZ,R3


******** RP0411.DEC **** PAGE 13  LINE 26
1)		CMP	↑D6*2(R2),R0	;COMPARE WITH WORDS ALLOCATED
1)		BGT	5$		;BRANCH IF MORE WORDS ALLOCATED
1)		BLT	RPWER3		;BRANCH IF NOT ENOUGH WORDS ALLOCATED
1)		CMP	↑D7*2(R2),R1	;ITS CLOSE, LOOK FURTHER
1)		BLO	RPWER3		;BRANCH IF NOT ENOUGH WORDS ALLOCATED
1)	5$:	SWAB	R4
1)		BISB	<↑D17*2>+1(R2),R4
1)		MOV	R4,OFFSET
1)		MOV	↑D4*2(R2),CYLNDR ;CYLINDER NUMBER
1)		MOV	↑D5*2(R2),TRKSCT ;TRACK/SECTOR NUMBERS
1)		RPADDR
*** RP0411.3 *** PAGE 10  LINE 27
2)		CMP 6.*2(R2),R0		;COMPARE WITH WORDS ALLOCATED
2)		BGT 5$			;BRANCH IF MORE WORDS ALLOCATED
2)		BLT RPWER3		;BRANCH IF NOT ENOUGH WORDS ALLOCATED
2)		CMP 7.*2(R2),R1		;ITS CLOSE, LOOK FURTHER
2)		BLO RPWER3		;BRANCH IF NOT ENOUGH WORDS ALLOCATED
2)	5$:	SWAB R4
2)		BISB <17.*2>+1(R2),R4
2)		MOV R4,OFFSET
2)		MOV 4.*2(R2),CYLNDR ;CYLINDER NUMBER
2)		MOV 5.*2(R2),TRKSCT ;TRACK/SECTOR NUMBERS
2)		RPADDR


******** RP0411.DEC **** PAGE 14  LINE 1
1)		ADD	R3,↑D17*2(R2)	;COMPUTE NEW CURRENT POSITION
1)		ADC	↑D16*2(R2)	;PROPAGATE CARRY
1)		MOV	↑D17*2(R2),↑D9*2(R2) ;SET EOF AT CURRENT POSITION
1)		MOV	↑D16*2(R2),↑D8*2(R2) ;(M.S. ALSO)
1)	70$:	TST	RPEOF		;ARE WE WRITING AN EOF
*** RP0411.3 *** PAGE 11  LINE 2
2)		ADD R3,17.*2(R2)	;COMPUTE NEW CURRENT POSITION
2)		ADC 16.*2(R2)		;PROPAGATE CARRY
2)		MOV 17.*2(R2),9.*2(R2) ;SET EOF AT CURRENT POSITION
2)		MOV 16.*2(R2),8.*2(R2) ;(M.S. ALSO)
2)	70$:	TST RPEOF		;ARE WE WRITING AN EOF


******** RP0411.DEC **** PAGE 14  LINE 22
1)		CMP	↑D6*2(R2),↑D6*2(R3)
1)		BNE	RPWER0		;BRANCH IF ALLOCATION IS DIFFERENT
1)		CMP	↑D7*2(R2),↑D7*2(R3)
1)		BNE	RPWER0		;BRANCH IF ALLOCATION IS DIFFERENT
*** RP0411.3 *** PAGE 11  LINE 23
2)		CMP 6.*2(R2),6.*2(R3)
2)		BNE RPWER0		;BRANCH IF ALLOCATION IS DIFFERENT
2)		CMP 7.*2(R2),7.*2(R3)
2)		BNE RPWER0		;BRANCH IF ALLOCATION IS DIFFERENT


******** RP0411.DEC **** PAGE 15  LINE 5
1)		BIT	#↑C7,R2
1)		BNE	2$		;-1 ERROR, BAD
*** RP0411.3 *** PAGE 12  LINE 6
2)		BIT #-7-1,R2
2)		BNE 2$			;-1 ERROR, BAD


******** RP0411.DEC **** PAGE 15  LINE 18
1)		BIC	#↑C<RPMOL!RPDPR!RPDRY>,R2
1)		BNE	2$		;-3 ERROR, DRIVE ERROR
*** RP0411.3 *** PAGE 12  LINE 19
2)		BIC #-<RPMOL!RPDPR!RPDRY>-1,R2
2)		BNE 2$			;-3 ERROR, DRIVE ERROR


******** RP0411.DEC **** PAGE 16  LINE 21
1)		BIC	#↑C<RPMOL!RPDPR!RPDRY!RPVV>,R2
1)		BNE	2$		;ERROR
*** RP0411.3 *** PAGE 13  LINE 22
2)		BIC #-<RPMOL!RPDPR!RPDRY!RPVV>-1,R2
2)		BNE 2$			;ERROR


******** RP0411.DEC **** PAGE 17  LINE 13
1)		ADD	#↑D19*↑D20,R2
1)		BR	1$
1)	2$:	SUB	#↑D19*↑D20,R2
1)		BLT	3$
*** RP0411.3 *** PAGE 14  LINE 14
2)		ADD #19.*20.,R2
2)		BR 1$
2)	2$:	SUB #19.*20.,R2
2)		BLT 3$


******** RP0411.DEC **** PAGE 17  LINE 19
1)	3$:	ADD	#↑D19*↑D20,R2
1)	4$:	SUB	#↑D20,R2
1)		BLT	5$
*** RP0411.3 *** PAGE 14  LINE 20
2)	3$:	ADD #19.*20.,R2
2)	4$:	SUB #20.,R2
2)		BLT 5$


******** RP0411.DEC **** PAGE 17  LINE 24
1)	5$:	ADD	#↑D20,R2
1)	6$:	SUB	#↑D19,R1
1)		BLT	7$
*** RP0411.3 *** PAGE 14  LINE 25
2)	5$:	ADD #20.,R2
2)	6$:	SUB #19.,R1
2)		BLT 7$


******** RP0411.DEC **** PAGE 17  LINE 29
1)	7$:	ADD	#↑D19,R1
1)		SWAB	R1
*** RP0411.3 *** PAGE 14  LINE 30
2)	7$:	ADD #19.,R1
2)		SWAB R1


	1) BR11.DEC vs. 2) BR11.4	SRCCOM	04-17-76	14:25	PAGES 1,1

******** BR11.DEC **** PAGE 1  LINE 1
1)	.SBTTL	DTE20 INITIALIZATION ROUTINE, 9-SEPTEMBER-75
*** BR11.4 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;; 30 MAR 76  MODIFIED TO COEXIST WITH ITS IOELEVEN PROGRAM
2)	.SBTTL	DTE20 INITIALIZATION ROUTINE, 9-SEPTEMBER-75


******** BR11.DEC **** PAGE 2  LINE 7
1)	11$:	MOV	#↑D16,R2
1)		MOV	#.DELAY,R1
*** BR11.4 *** PAGE 3  LINE 8
2)	11$:	MOV #16.,R2
2)		MOV #.DELAY,R1


******** BR11.DEC **** PAGE 2  LINE 36
1)	$STJRS:	I10	JRST	0,,0
1)	.EVEN
*** BR11.4 *** PAGE 3  LINE 37
2)	JRST==254
2)	$STJRS:	I10 JRST,0,,0
2)	.EVEN


******** BR11.DEC **** PAGE 7  LINE 25
1)	;MASTER RESET DIAGNOSTIC FUNCTION LIST
1)	LLIST:	.BYTE	STPCLK		;STOP CLOCK
1)		.BYTE	SETMR		;SET MASTER RESET
1)		.BYTE	STRCLK		;START CLOCK
1)		.BYTE	LDBRR		;LOAD BURST REGISTER RIGHT
1)		.BYTE	LDBRL		;LOAD BURST REGISTER LEFT
1)		.BYTE	LDDIS		;LOAD CLOCK DISTRIBUTION REGISTER
1)		.BYTE	LDCHK1		;LOAD PARITY CHECK REGISTER
1)		.BYTE	LDCHK2		;LOAD EBOX INTERNAL CHECK REGISTER
1)		.BYTE	LDCHAN		;INITIALIZE CHANNELS
1)		.BYTE	STPCLK		;STOP CLOCK
1)		.BYTE	ENIOJA		;SET IR DECODE TO KL10 MODE
1)		.BYTE	76		;D.F. TO CONTROL EBUS REG
1)		.BYTE	LDMBXA		;LOAD MEMORY TO CACHE SELECTOR
1)	.EVEN
1)	.SBTTL	MASTER RESET ROUTINE
*** BR11.4 *** PAGE 9  LINE 2
2)	.SBTTL	MASTER RESET ROUTINE


******** BR11.DEC **** PAGE 8  LINE 9
1)	90$:	MOV	#DRESET,@.DIAG2		;CLEAR DTE20 DIAG2
1)		MOV	#DON10C!ERR10C!INT11C!PERCLR!DON11C!ERR11C,@.STDTE ;CLEAR DTE20 STATUS
*** BR11.4 *** PAGE 9  LINE 19
2)		CLR TENCLK		;NOW TEN MUST NOT NEED CLOCK INTERRUPTS ANY MORE
2)	90$:	RESET			;RESET ANY RANDOM PERIPHERALS ON THE 11
2)		CLR ITSFLG		;THAT WAS THE END OF I.T.S.!
2)		MOV #DRESET,@.DIAG2	;CLEAR DTE20 DIAG2
2)		MOV #DON10C!ERR10C!INT11C!PERCLR!DON11C!ERR11C,@.STDTE ;CLEAR DTE20 STATUS


******** BR11.DEC **** PAGE 8  LINE 15
1)		MOV	#↑D10,R1	;MUST EXECUTE TEN DIAG FUNCTIONS IN MR
1)		MOV	#LLIST,R2	;ADDRESS OF FUNCTIONS INTO R2
*** BR11.4 *** PAGE 9  LINE 19
2)		MOV #LLISTL,R1		;MUST EXECUTE TEN DIAG FUNCTIONS IN MR
2)		MOV #LLIST,R2		;ADDRESS OF FUNCTIONS INTO R2


******** BR11.DEC **** PAGE 9  LINE 1
1)	.SBTTL	CONTROL RAM ADDRESS ROUTINE
*** BR11.4 *** PAGE 9  LINE 57
2)	;MASTER RESET DIAGNOSTIC FUNCTION LIST
2)	LLIST:	.BYTE STPCLK		;STOP CLOCK
2)		.BYTE SETMR		;SET MASTER RESET
2)		.BYTE STRCLK		;START CLOCK
2)		.BYTE LDBRR		;LOAD BURST REGISTER RIGHT
2)		.BYTE LDBRL		;LOAD BURST REGISTER LEFT
2)		.BYTE LDDIS		;LOAD CLOCK DISTRIBUTION REGISTER
2)		.BYTE LDCHK1		;LOAD PARITY CHECK REGISTER
2)		.BYTE LDCHK2		;LOAD EBOX INTERNAL CHECK REGISTER
2)		.BYTE LDCHAN		;INITIALIZE CHANNELS
2)		.BYTE STPCLK		;STOP CLOCK
2)	LLISTL==.-LLIST			;BUT THE LAST 3 ARE SPECIAL
2)		.BYTE ENIOJA		;SET IR DECODE TO KL10 MODE
2)		.BYTE 76		;D.F. TO CONTROL EBUS REG
2)		.BYTE LDMBXA		;LOAD MEMORY TO CACHE SELECTOR
2)	.EVEN
2)	.SBTTL	CONTROL RAM ADDRESS ROUTINE


******** BR11.DEC **** PAGE 9  LINE 37
1)	WRLIST:	.BYTE	LCRAM1		;CRAM BITS 00-19
1)		.BYTE	LCRAM2		;CRAM BITS 20-39
1)		.BYTE	LCRAM3		;CRAM BITS 40-59
1)		.BYTE	LCRAM4		;CRAM BITS 60-79-EVEN
1)	.EVEN
1)	.SBTTL	WCRAM ROUTINE
*** BR11.4 *** PAGE 11  LINE 2
2)	.SBTTL	WCRAM ROUTINE


******** BR11.DEC **** PAGE 11  LINE 1
1)	$STRCH:	MOV	WREADY,R0	;GET UNSPACED DATA
*** BR11.4 *** PAGE 11  LINE 51
2)	WRLIST:	.BYTE LCRAM1		;CRAM BITS 00-19
2)		.BYTE LCRAM2		;CRAM BITS 20-39
2)		.BYTE LCRAM3		;CRAM BITS 40-59
2)		.BYTE LCRAM4		;CRAM BITS 60-79-EVEN
2)	.EVEN
2)	$STRCH:	MOV WREADY,R0		;GET UNSPACED DATA


******** BR11.DEC **** PAGE 15  LINE 1
1)	.SBTTL	MICNUL & MICFIL C-RAM ROUTINES
1)	;MICNUL, FILL C-RAM LOCATIONS WITH ZEROS
1)	$MICNUL:MOV	R1,R2		;NUMBER OF WORDS TO R2
*** BR11.4 *** PAGE 14  LINE 29
2)	.SBTTL	MICNUL, FILL C-RAM LOCATIONS WITH ZEROS
2)	$MICNUL:MOV R1,R2		;NUMBER OF WORDS TO R2


******** BR11.DEC **** PAGE 16  LINE 1
1)	;MICFIL, C-RAM FILL WITH ONES ROUTINE
1)	$MICFIL:MOV	R1,R2		;NUMBER OF WORDS TO R2
*** BR11.4 *** PAGE 15  LINE 2
2)	.SBTTL	MICFIL, C-RAM FILL WITH ONES ROUTINE
2)	$MICFIL:MOV R1,R2		;NUMBER OF WORDS TO R2


******** BR11.DEC **** PAGE 19  LINE 1
1)	$DRAMAD: MOV	#DDRAM,R3	;GET ADDRESS OF EBUS DATA
*** BR11.4 *** PAGE 17  LINE 2
2)	.SBTTL	DRAM SUBROUTINES
2)	$DRAMAD: MOV #DDRAM,R3		;GET ADDRESS OF EBUS DATA

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 1,1

******** SBST11.DEC **** PAGE 1  LINE 1
1)	.SBTTL	*STORE* PROGRAM STORAGE FILE, 5-AUG-75
1)	.NLIST
1)	.IF	DF,KLDCP
1)	.LIST
*** SBST11.9 *** PAGE 1  LINE 1
2)	;;;MODIFICATION HISTORY
2)	;;;
2)	;;; 15 NOV 75  OBTAINED FROM DEC (KLDCP REV 7)
2)	;;; 15 NOV 75  CONVERTED TO PALX FORMAT
2)	;;;
2)	.SBTTL	*STORE* PROGRAM STORAGE FILE, 5-AUG-75
2)	.MACRO INFORM A,B
2)	.IF P2
2)	.PRINT\A=B
2)	\
2)	.ENDC
2)	.ENDM
2)	INFORM PROGRAM END,\.
2)	.NLIST
2)	.IF	DF KLDCP
2)	.LIST


******** SBST11.DEC **** PAGE 2  LINE 12
1)	$LF:	.ASCII	<12>
1)	$CR:	.ASCII	<15>
1)	$BELL:	.ASCII	<07>
1)		.ASCII	<00>
1)	.EVEN
*** SBST11.9 *** PAGE 3  LINE 18
2)	$LF:	.BYTE 12
2)	$CR:	.BYTE 15
2)	$BELL:	.BYTE 07
2)		.BYTE 00
2)	.EVEN


******** SBST11.DEC **** PAGE 3  LINE 1
1)	;BUFFER CREATION MACROS
*** SBST11.9 *** PAGE 3  LINE 61
2)	INFORM LITERAL END,\$$CLIT
2)	;BUFFER CREATION MACROS


******** SBST11.DEC **** PAGE 3  LINE 6
1)	.MACRO	.BUFW	$BTAG,$BARG
1)		.IIF	NE,$$BUF&1,$$BUF=$$BUF-1
1)		.IIF	B,$BARG,$$BARG=1
1)		.IIF	NB,$BARG,$$BARG=$BARG
1)		$$BUF=$$BUF-<$$BARG*2>
1)		.NLIST
1)		.LIST	ME	
1)		.LIST
1)	$BTAG=	$$BUF
1)		.NLIST	ME
1)	.ENDM
*** SBST11.9 *** PAGE 4  LINE 7
2)	;USAGE IS:  .BUFW TAG=,NUMBER-OF-WORDS [OPTIONAL]
2)	.MACRO	.BUFW $BTAG,$BARG
2)		.IIF NE $$BUF&1,$$BUF=$$BUF-1
2)		.IIF B $BARG,$$BARG=1

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 3,4

2)		.IIF NB $BARG,$$BARG=$BARG
2)		$$BUF=$$BUF-<$$BARG*2>
2)	;	.NLIST
2)	;	.LIST ME	
2)	;	.LIST
2)	$BTAG	$$BUF
2)	;	.NLIST ME
2)	.ENDM


******** SBST11.DEC **** PAGE 3  LINE 20
1)		.IIF	B,$BARG,$$BARG=1
1)		.IIF	NB,$BARG,$$BARG=$BARG
1)		$$BUF=$$BUF-$$BARG
1)		.NLIST
1)		.LIST	ME
1)		.LIST
1)	$BTAG=	$$BUF
1)		.NLIST	ME
1)	.ENDM
1)		.NLIST	LOC
1)	;PROGRAM BUFFERS & STORAGE AREA
*** SBST11.9 *** PAGE 4  LINE 23
2)		.IIF B $BARG,$$BARG=1
2)		.IIF NB $BARG,$$BARG=$BARG
2)		$$BUF=$$BUF-$$BARG
2)	;	.NLIST
2)	;	.LIST ME
2)	;	.LIST
2)	$BTAG	$$BUF
2)	;	.NLIST ME
2)	.ENDM
2)	;	.NLIST LOC
2)	;PROGRAM BUFFERS & STORAGE AREA


******** SBST11.DEC **** PAGE 4  LINE 6
1)		.BUFW	.DIAG3		;XXX36
1)		.BUFW	.STDTE		;XXX34
1)		.BUFW	.DIAG2		;XXX32
1)		.BUFW	.DIAG1		;XXX30
1)		.BUFW	.T11DT		;XXX26
1)		.BUFW	.T10DT		;XXX24
1)		.BUFW	.T11AD		;XXX22
1)		.BUFW	.T10AD		;XXX20
1)		.BUFW	.BC11		;XXX16
1)		.BUFW	.BC10		;XXX14
1)		.BUFW	.TENA2		;XXX12

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

1)		.BUFW	.TENA1		;XXX10
1)		.BUFW	.DAT1		;XXX06
1)		.BUFW	.DAT2		;XXX04
1)		.BUFW	.DAT3		;XXX02
1)		.BUFW	.DELAY		;XXX00
1)	;SPECIAL LOAD ONLY CLEAR & SETUP AREA
1)		.BUFW	$ONETM		;ONE TIME FLAG
1)		.BUFW	$ILDSUM		;"KLDCP" CHECKSUM
1)		.BUFW	$PWRCNT		;POWER RESTART COUNT
1)		.BUFW	DEVTYP		;DEVICE TYPE: -1=ACT, 0=DTA, 1=RP04
1)		.BUFW	FLOPPY		;-1, USE RX11/RX01 FLOPPY
1)		.BUFW	LPTFLG		;LINE PRINTER FLAG
1)		.BUFW	LPTYPE		;LINE PRINTER TYPE
1)		.BUFW	RXUNIT		;FLOPPY UNIT
1)		.BUFW	DTUNIT		;DECTAPE UNIT
1)		.BUFW	RPUNIT		;RP04 UNIT
1)		.BUFW	$BKFLG		;BREAKPOINT FLAG
1)		.BUFW	CLKPE,3		;CLOCK PE DFWRT STORAGE
1)		.BUFW	PEBITS		;CLOCK STOP PARITY ENABLE BITS
1)		.BUFW	PAGDFL,3	;KL10 "DATAO PAG,0" DEFAULT
1)		.BUFW	CLKDFL,3	;KL10 CLOCK DEFAULT
1)		.BUFW	SWS10,3		;PDP-10 SWITCHES
1)		.BUFW	$SWS10,3
1)		.BUFW	$$SWR
1)		.BUFW	$$STJRS,3	;PDP-10 START "JRST"
1)		.BUFW	$STODD		;"SETMPH" VARIABLES
1)		.BUFB	$MPHMK		;MASK, A OR B CHANGE
1)		.BUFB	$MPHDF		;DIAG FCN, A OR B CHANGE
1)		.BUFW	TGOADR,2	;PDP-10 GO START ADDRESS
1)		.BUFW	PGOADR,2	;PROGRAM GO ADDRESS
1)		.BUFW	PGOCTL		;PROGRAM GO CONTROL
1)		.BUFW	SEADR		;PDP-11 START ADDRESS
1)	;KLINIK FIELD SERVICE REMOTE FLAG
1)		.BUFW	DL11EFLG
1)	;BP TABLE; INST, ADR, CNT
1)		.BUFW	$BT,<$NB*3>	;BP TABLE
1)		.BUFW	$BCA		;BP CONTINUE ADDRESS
1)		.BUFW	$BTIS		;BP TEMP
1)	$ILDCLR=$$BUF
1)	;COMMON STORAGE
1)		.BUFW	$SWMON		;MONITOR LOW ORDER SWITCHES
1)		.BUFW	MONCTL		;0=STANDALONE, -1=MONITOR
1)		.BUFW	TENSWD		;PDP-10 SWITCH DEPOSIT FLAG
1)		.BUFW	TENCLK		;PDP-10 CLOCK FLAG
1)		.BUFW	PCMDFLG		;PROGRAM COMMAND FLAG
1)		.BUFW	PCMDNF		;PROGRAM CMD NO PRINT FLAG
1)		.BUFW	$ITERA		;ITERATION REGISTER
1)		.BUFW	$ENDCT		;END OF PASS REPORT COUNT

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

1)		.BUFW	$EOPCT		;END OF PASS COUNT
1)		.BUFW	$ERRPC		;ERROR PC
1)		.BUFW	$ERTTL		;TOTAL ERRORS DETECTED
1)		.BUFW	$ERFLG		;ERROR FLAG
1)		.BUFW	$PASS		;PASS COUNT
1)		.BUFW	$CMTAG		;COMMON TAG
1)	;DECTAPE/RP04 AND LOADING BUFFERS
1)		.BUFW	DVBUF,256.	;DEVICE BUFFER
1)	VFUDAT=DVBUF
1)		.BUFW	EXTBF,2		;ASCII EXTENSION BUFFER
1)		.BUFW	NAMBF,3		;ASCII NAME BUFFER
1)		.BUFW	DIRST4
1)		.BUFW	DIRST3
1)		.BUFW	DIRST2
1)		.BUFW	DIRST1
1)		.BUFW	DIRST0		;PSEUDO DIRECTORY CONVERSION STORAGE
1)		.BUFW	DTEXT		;RAD50 EXT
1)		.BUFW	DTEXTS,3	;UNPACKED EXT (ASCII)
1)		.BUFW	DTLNGTH		;DECTAPE FILE LENGTH
1)		.BUFW	DTSTRT		;DECTAPE FILE START BLOCK
1)		.BUFW	DVADR		;DEVICE DATA ADDRESS POINTER
1)		.BUFW	DVCNT		;DEVICE BYTE COUNT
1)		.BUFW	DVDIRF		;DEVICE DIRECTORY FLAG
1)		.BUFW	CDADR		;CORE DUMP BUFFER POINTER
1)		.BUFW	DIAFLG		;"DIAMON" OPERATION FLAG
1)		.BUFW	RPEOF		;END-OF-FILE FLAG
1)		.BUFW	WRTBAK,3	;RPLKUP & RPWRFL RETURN INFO
1)		.BUFW	$RPINFO,2	;DVDATA POINTERS
1)		.BUFW	NAMRAD,3	;RAD50 NAME.EXT
1)		.BUFW	RPFDNB		;FILE DIRECTORY LENGTH IN BLOCKS
1)		.BUFW	RPFDTS		;FILE DIRECTORY TRACK & SECTOR
1)		.BUFW	RPFDCY		;FILE DIRECTORY CYLINDER NUMBER
1)		.BUFW	RPIXNB		;INDEX FILE LENGTH IN BLOCKS
1)		.BUFW	RPIXTS		;INDEX FILE TRACK & SECTOR
1)		.BUFW	RPIXCY		;INDEX FILE CYLINDER NUMBER
1)		.BUFW	RPIXCB		;INDEX FILE CURRENT BLOCK
1)		.BUFW	RPLAST		;INDEX FILE LAST BLOCK
1)		.BUFW	CYLNDR		;CURRENT CYLINDER
1)		.BUFW	TRKSCT		;CURRENT TRACK & SECTOR
1)		.BUFW	OFFSET		;CURRENT OFFSET
1)		.BUFW	BUFADR		;BUFFER ADDRESS
1)		.BUFW	BUFSIZ		;BUFFER SIZE
1)		.BUFW	WRDCNT		;READ/WRITE WORD COUNT
1)		.BUFW	FILDSB,FDESIZ+2	;FILE DESCRIPTOR
1)	;DECTAPE PARAMETER STORAGE
1)		.BUFW	REVCNT		;REVERSE COUNT
1)		.BUFW	INTSW		;INIT SWITCH
1)		.BUFW	$CKS11		;PDP-11 BINARY CHECKSUM

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

1)		.BUFW	LTMP		;LOAD TEMP
1)		.BUFW	LBC		;LOAD BYTE COUNT
1)		.BUFW	TRYCTR		;DECTAPE TRY COUNT
1)		.BUFW	DTXCMD		;DECTAPE XFER COMAND
1)		.BUFW	WCSAV		;WORD COUNT SAVE
1)		.BUFW	CASAV		;CURRENT ADDRESS SAVE
1)		.BUFW	DTBLK		;DECTAPE BLOCK NUMBER
1)	;FLOPPY PARAMETER STORAGE
1)		.BUFW	$$ITS1		;FLOPPY "$RXITS" COUNTER
1)		.BUFW	RXSADR		;FLOPPY SECTOR ADDRESS
1)		.BUFW	RXTADR		;FLOPPY TRACK ADDRESS
1)		.BUFW	RXBLKT		;FLOPPY BLOCK # TEMP
1)		.BUFW	RXWCMD		;FLOPPY WORKING COMMAND
1)		.BUFW	RXCMD		;FLOPPY COMMAND
1)		.BUFW	RXBLK		;FLOPPY BLOCK NUMBER
1)	;LOAD PARAMETER STORAGE
1)		.BUFW	LDATAE
1)		.BUFW	LDATA,34.	;LOAD DATA
1)		.BUFW	LDADR		;LOAD ADDRESS
1)		.BUFW	LDCNT		;LOAD WORD COUNT
1)		.BUFW	LDOCTF		;LOAD OCTAL FORMAT FLAG
1)		.BUFW	LDCNTL		;LOAD CONTROL WORD
1)		.BUFW	LDOVRD		;LOAD CONTROL OVERRIDE
1)		.BUFW	LDZBLK		;LOAD 10 ZERO BLOCK FLAG
1)		.BUFW	SRTFLG		;SELF START FLAG
1)		.BUFW	DEVLC		;DEVICE LINE COUNT
1)		.BUFW	ARETRY		;ACT10 RETRY COUNT
1)		.BUFW	HLPPNT		;ACT10 HELP PRINT FLAG
1)	;TELETYPE BUFFERS
1)		.BUFW	$INPTR		;INPUT POINTERS
1)		.BUFW	$INPTC
1)		.BUFB	$INBUF,142.	;INPUT BUFFER
1)		.BUFW	$OUTPC		;OUTPUT POINTERS
1)		.BUFW	$OUTPT
1)		.BUFW	$OUTPP		;OUTPUT PRINT POSITION
1)		.BUFB	$OUTBF,142.	;OUTPUT BUFFER
1)		.BUFW	$TNPTR		;10 INPUT POINTERS
1)		.BUFW	$TNPTC
1)		.BUFB	$TNBUF,142.	;10 INPUT BUFFER
1)		.BUFW	$TNCHR,3	;LAST CHAR TYPED (FOR TEN)
1)		.BUFW	TENTTY		;10 "TENCHR" FLAG
1)		.BUFW	$TTYIN
1)		.BUFB	$TTSAV,12.
1)		.BUFW	ENQFLG		;COMMUNICATIONS IN PROGRESS
1)		.BUFW	MSGNBR		;COMMUNICATIONS MESSAGE NUMBER
1)		.BUFW	COMNBR		;COMMUNICATION NUMBER
1)		.BUFB	COUTBF,142.	;COMMUNICATIONS OUTPUT BUFFER
1)		.BUFW	COUTSP,2	;OUTPUT CONTROL CHARACTERS

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

1)		.BUFB	CINBF,142.	;COMMUNICATIONS INPUT BUFFER
1)		.BUFW	CINSP,2		;INPUT CONTROL CHARACTERS
1)		.BUFW	$PRNTH		;PRINT HEAD POSITION
1)		.BUFW	$PGWID		;PAGE WIDTH
1)		.BUFW	$TPLIN		;NUMBER OF LINES ON A PAGE
1)		.BUFW	$TPLIT		;LINES TALLY
1)		.BUFW	$XOFLG		;XOFF FLAG, -1 = NO PRINT
1)		.BUFW	CTRLOF		;CONTROL O FLAG
1)		.BUFW	$EOLFLG		;END OF LINE FLAG
1)		.BUFW	$TTLKF		;TTLOOK INPUT CHECKS INHIBIT
1)		.BUFW	TILNWF		;TTY INPUT WAIT FLAG
1)		.BUFW	$FORCE		;FORCE PRINTOUT FLAG
1)		.BUFW	$TTYFL		;TTY FILL PARAMETER
1)		.BUFW	$0FLG		;ZERO FILL FLAG
1)		.BUFW	$NEG		;NEGATE NUMBER INPUT FLAG
1)		.BUFW	$SVH
1)		.BUFW	$SVM
1)		.BUFW	$TICHR		;TTY DRIVER INPUT CHAR
1)		.BUFW	$TOCHR		;TTY DRIVER OUTPUT CHAR
1)		.BUFW	DDTFLG		;PDP-10 DDT INPUT MODE FLAG
1)	;CONSOLE PARAMETER STORAGE
1)		.BUFW	$KONSP		;SAVED STACK POINTER
1)		.BUFW	ALLFLG		;ALL PRINT FLAG
1)		.BUFW	RPTFLG		;COMMAND REPEAT FLAG
1)		.BUFW	VERIFY		;PROGRAM VERIFY FLAG
1)		.BUFW	.EADR		;EXAMINE 11 ADDRESS
1)		.BUFW	$ECADR		;EXAMINE C-RAM ADDRESS
1)		.BUFW	$EDADR		;EXAMINE D-RAM ADDRESS
1)		.BUFW	$ADR
1)		.BUFW	.DFRDA,3
1)		.BUFW	.DPXAD,2
1)		.BUFW	L10ADR,2	;LOAD 10 ADDRESS
1)		.BUFW	TENRUN		;TEN RUNNING FLAG
1)		.BUFW	MONMODE		;TEN MONITOR MODE FLAG
1)		.BUFW	MTTYOF		;MONITOR TTY OUTPUT IN PROGRESS
1)		.BUFW	$TTYTIM		;TTY TIMEOUT COUNT
1)	;BREAKPOINT STORAGE
1)		.BUFW	$R0TMP
1)		.BUFW	$PCSAV
1)		.BUFW	$PSSAV
1)		.BUFW	$TEMP0,3
1)		.BUFW	$ADR1
1)		.BUFW	$SPSAV
1)		.BUFW	$R5SAV
1)		.BUFW	$R4SAV
1)		.BUFW	$R3SAV
1)		.BUFW	$R2SAV
1)		.BUFW	$R1SAV

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

1)		.BUFW	$R0SAV
1)	;MISCELLANEOUS STORAGE
1)		.BUFW	$EMADR		;EMT ADDRESS (+2)
1)		.BUFW	$SWTCH		;SWITCHES
1)		.BUFW	$$SVSP
1)		.BUFW	TEMP
1)		.BUFW	IFILEF		;INDIRECT FILE FLAG
1)		.BUFW	IFINP		;INDIRECT STORAGE POINTER
1)		.BUFW	JFILEF		;DOUBLE INDIRECT FILE FLAG
1)		.BUFW	JFINP		;DOUBLE INDIRECT STORAGE POINTER
1)		.BUFW	PRGRUN		;PROGRAM RUNNING FLAG
1)		.BUFW	MEMPEF		;PARITY FLAG
1)		.BUFW	.HCFLG		;ALLOW HALT CONTINUE FLAG
1)		.BUFW	.HCADR		;HALT CONTINUE ADDRESS
1)		.BUFW	DDTTM1		;DDT MODE TIMEOUT COUNTS
1)		.BUFW	DDTTM2
1)		.BUFW	$ECMD,3		;DTE20 COMMAND STORAGE
1)		.BUFW	$SAV20,3	;PDP-10 SAVE 20 STORAGE
1)	;KL10 SUBROUTINE STORAGE
1)		.BUFW	ZEROS,3		;SOURCE OF 36 ZEROS
1)		.BUFW	VMADAT,3	;VMA & PC TEMP
1)		.BUFW	XXDAT		;DF WRITE TEMP
1)		.BUFW	MMDAT,3		;WWADR TEMP
1)		.BUFW	WREADY,3	;$WCRAM TEMP
1)		.BUFW	SIGNL
1)		.BUFW	$BUFRC,6	;$RCRAM TEMP
1)		.BUFW	SIGNL2
1)		.BUFW	SIGNL3
1)		.BUFW	DDRAM,3		;$DRAMAD TEMP
1)		.BUFW	RDRTMP,2	;$RDRAM TEMP
1)		.BUFW	$DRAM,6
1)		.BUFW	$DDRMS
1)		.BUFW	$STDAT		;$BURST TEMP
1)		.BUFW	KLCLKR		;KL10 CLOCK LOGICALLY RUNNING FLAG
1)		.BUFW	TENDAT,3	;PDP-10 INPUT DATA WORD
1)		.BUFW	TENAC0,2	;PDP-10 AC0 ADDRESS
1)		.BUFW	C10CW,3		;PDP-10 CLOCK WAIT COUNT
1)		.BUFW	CLKCNT,3	;PDP-10 CLOCK COUNT
1)	BUFCLR=	$$BUF
1)		.LIST	LOC
1)	.END	$ILOAD
*** SBST11.9 *** PAGE 5  LINE 7
2)		.BUFW .DIAG3=		;XXX36
2)		.BUFW .STDTE=		;XXX34
2)		.BUFW .DIAG2=		;XXX32
2)		.BUFW .DIAG1=		;XXX30
2)		.BUFW .T11DT=		;XXX26
2)		.BUFW .T10DT=		;XXX24

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

2)		.BUFW .T11AD=		;XXX22
2)		.BUFW .T10AD=		;XXX20
2)		.BUFW .BC11=		;XXX16
2)		.BUFW .BC10=		;XXX14
2)		.BUFW .TENA2=		;XXX12
2)		.BUFW .TENA1=		;XXX10
2)		.BUFW .DAT1=		;XXX06
2)		.BUFW .DAT2=		;XXX04
2)		.BUFW .DAT3=		;XXX02
2)		.BUFW .DELAY=		;XXX00
2)	;SPECIAL LOAD ONLY CLEAR & SETUP AREA
2)		.BUFW $ONETM=		;ONE TIME FLAG
2)		.BUFW $ILDSUM=		;"KLDCP" CHECKSUM
2)		.BUFW $PWRCNT=		;POWER RESTART COUNT
2)		.BUFW DEVTYP=		;DEVICE TYPE: -1=ACT, 0=DTA, 1=RP04
2)		.BUFW FLOPPY=		;-1, USE RX11/RX01 FLOPPY
2)		.BUFW LPTFLG=		;LINE PRINTER FLAG
2)		.BUFW LPTYPE=		;LINE PRINTER TYPE
2)		.BUFW RXUNIT=		;FLOPPY UNIT
2)		.BUFW DTUNIT=		;DECTAPE UNIT
2)		.BUFW RPUNIT=		;RP04 UNIT
2)		.BUFW $BKFLG=		;BREAKPOINT FLAG
2)		.BUFW CLKPE=,3		;CLOCK PE DFWRT STORAGE
2)		.BUFW PEBITS=		;CLOCK STOP PARITY ENABLE BITS
2)		.BUFW PAGDFL=,3		;KL10 "DATAO PAG,0" DEFAULT
2)		.BUFW CLKDFL=,3		;KL10 CLOCK DEFAULT
2)		.BUFW SWS10=,3		;PDP-10 SWITCHES
2)		.BUFW $SWS10=,3
2)		.BUFW $$SWR=
2)		.BUFW $$STJRS=,3		;PDP-10 START "JRST"
2)		.BUFW $STODD=		;"SETMPH" VARIABLES
2)		.BUFB $MPHMK=		;MASK, A OR B CHANGE
2)		.BUFB $MPHDF=		;DIAG FCN, A OR B CHANGE
2)		.BUFW TGOADR=,2		;PDP-10 GO START ADDRESS
2)		.BUFW PGOADR=,2		;PROGRAM GO ADDRESS
2)		.BUFW PGOCTL=		;PROGRAM GO CONTROL
2)		.BUFW SEADR=		;PDP-11 START ADDRESS
2)		.BUFW ITSFLG=		;NON-ZERO ITS IOELEVEN PROGRAM IS IN CORE
2)	;KLINIK FIELD SERVICE REMOTE FLAG
2)		.BUFW DL11EFLG=
2)	;BP TABLE; INST, ADR, CNT
2)		.BUFW $BT=,<$NB*3>	;BP TABLE
2)		.BUFW $BCA=		;BP CONTINUE ADDRESS
2)		.BUFW $BTIS=		;BP TEMP
2)	$ILDCLR=$$BUF
2)	;COMMON STORAGE
2)		.BUFW $SWMON=		;MONITOR LOW ORDER SWITCHES
2)		.BUFW MONCTL=		;0=STANDALONE, -1=MONITOR

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

2)		.BUFW TENSWD=		;PDP-10 SWITCH DEPOSIT FLAG
2)		.BUFW TENCLK=		;PDP-10 CLOCK ENABLE FLAG
2)		.BUFW PCMDFLG=		;PROGRAM COMMAND FLAG
2)		.BUFW PCMDNF=		;PROGRAM CMD NO PRINT FLAG
2)		.BUFW $ITERA=		;ITERATION REGISTER
2)		.BUFW $ENDCT=		;END OF PASS REPORT COUNT
2)		.BUFW $EOPCT=		;END OF PASS COUNT
2)		.BUFW $ERRPC=		;ERROR PC
2)		.BUFW $ERTTL=		;TOTAL ERRORS DETECTED
2)		.BUFW $ERFLG=		;ERROR FLAG
2)		.BUFW $PASS=		;PASS COUNT
2)		.BUFW $CMTAG=		;COMMON TAG
2)	;DECTAPE/RP04 AND LOADING BUFFERS
2)		.BUFW DVBUF=,256.	;DEVICE BUFFER
2)	VFUDAT=DVBUF
2)		.BUFW EXTBF=,2		;ASCII EXTENSION BUFFER
2)		.BUFW NAMBF=,3		;ASCII NAME BUFFER
2)		.BUFW DIRST4=
2)		.BUFW DIRST3=
2)		.BUFW DIRST2=
2)		.BUFW DIRST1=
2)		.BUFW DIRST0=		;PSEUDO DIRECTORY CONVERSION STORAGE
2)		.BUFW DTEXT=		;RAD50 EXT
2)		.BUFW DTEXTS=,3		;UNPACKED EXT (ASCII)
2)		.BUFW DTLNGTH=		;DECTAPE FILE LENGTH
2)		.BUFW DTSTRT=		;DECTAPE FILE START BLOCK
2)		.BUFW DVADR=		;DEVICE DATA ADDRESS POINTER
2)		.BUFW DVCNT=		;DEVICE BYTE COUNT
2)		.BUFW DVDIRF=		;DEVICE DIRECTORY FLAG
2)		.BUFW CDADR=		;CORE DUMP BUFFER POINTER
2)		.BUFW DIAFLG=		;"DIAMON" OPERATION FLAG
2)		.BUFW RPEOF=		;END-OF-FILE FLAG
2)		.BUFW WRTBAK=,3		;RPLKUP & RPWRFL RETURN INFO
2)		.BUFW $RPINFO=,2		;DVDATA POINTERS
2)		.BUFW NAMRAD=,3		;RAD50 NAME.EXT
2)		.BUFW RPFDNB=		;FILE DIRECTORY LENGTH IN BLOCKS
2)		.BUFW RPFDTS=		;FILE DIRECTORY TRACK & SECTOR
2)		.BUFW RPFDCY=		;FILE DIRECTORY CYLINDER NUMBER
2)		.BUFW RPIXNB=		;INDEX FILE LENGTH IN BLOCKS
2)		.BUFW RPIXTS=		;INDEX FILE TRACK & SECTOR
2)		.BUFW RPIXCY=		;INDEX FILE CYLINDER NUMBER
2)		.BUFW RPIXCB=		;INDEX FILE CURRENT BLOCK
2)		.BUFW RPLAST=		;INDEX FILE LAST BLOCK
2)		.BUFW CYLNDR=		;CURRENT CYLINDER
2)		.BUFW TRKSCT=		;CURRENT TRACK & SECTOR
2)		.BUFW OFFSET=		;CURRENT OFFSET
2)		.BUFW BUFADR=		;BUFFER ADDRESS
2)		.BUFW BUFSIZ=		;BUFFER SIZE

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

2)		.BUFW WRDCNT=		;READ/WRITE WORD COUNT
2)		.BUFW FILDSB=,FDESIZ+2	;FILE DESCRIPTOR
2)	;DECTAPE PARAMETER STORAGE
2)		.BUFW REVCNT=		;REVERSE COUNT
2)		.BUFW INTSW=		;INIT SWITCH
2)		.BUFW $CKS11=		;PDP-11 BINARY CHECKSUM
2)		.BUFW LTMP=		;LOAD TEMP
2)		.BUFW LBC=		;LOAD BYTE COUNT
2)		.BUFW TRYCTR=		;DECTAPE TRY COUNT
2)		.BUFW DTXCMD=		;DECTAPE XFER COMAND
2)		.BUFW WCSAV=		;WORD COUNT SAVE
2)		.BUFW CASAV=		;CURRENT ADDRESS SAVE
2)		.BUFW DTBLK=		;DECTAPE BLOCK NUMBER
2)	;FLOPPY PARAMETER STORAGE
2)		.BUFW $$ITS1=		;FLOPPY "$RXITS" COUNTER
2)		.BUFW RXSADR=		;FLOPPY SECTOR ADDRESS
2)		.BUFW RXTADR=		;FLOPPY TRACK ADDRESS
2)		.BUFW RXBLKT=		;FLOPPY BLOCK # TEMP
2)		.BUFW RXWCMD=		;FLOPPY WORKING COMMAND
2)		.BUFW RXCMD=		;FLOPPY COMMAND
2)		.BUFW RXBLK=		;FLOPPY BLOCK NUMBER
2)	;LOAD PARAMETER STORAGE
2)		.BUFW LDATAE=
2)		.BUFW LDATA=,34.	;LOAD DATA
2)		.BUFW LDADR=		;LOAD ADDRESS
2)		.BUFW LDCNT=		;LOAD WORD COUNT
2)		.BUFW LDOCTF=		;LOAD OCTAL FORMAT FLAG
2)		.BUFW LDCNTL=		;LOAD CONTROL WORD
2)		.BUFW LDOVRD=		;LOAD CONTROL OVERRIDE
2)		.BUFW LDZBLK=		;LOAD 10 ZERO BLOCK FLAG
2)		.BUFW SRTFLG=		;SELF START FLAG
2)		.BUFW DEVLC=		;DEVICE LINE COUNT
2)		.BUFW ARETRY=		;ACT10 RETRY COUNT
2)		.BUFW HLPPNT=		;ACT10 HELP PRINT FLAG
2)	;TELETYPE BUFFERS
2)		.BUFW $INPTR=		;INPUT POINTERS
2)		.BUFW $INPTC=
2)		.BUFB $INBUF=,142.	;INPUT BUFFER
2)		.BUFW $OUTPC=		;OUTPUT POINTERS
2)		.BUFW $OUTPT=
2)		.BUFW $OUTPP=		;OUTPUT PRINT POSITION
2)		.BUFB $OUTBF=,142.	;OUTPUT BUFFER
2)		.BUFW $TNPTR=		;10 INPUT POINTERS
2)		.BUFW $TNPTC=
2)		.BUFB $TNBUF=,142.	;10 INPUT BUFFER
2)		.BUFW $TNCHR=,3		;LAST CHAR TYPED (FOR TEN)
2)		.BUFW TENTTY=		;10 "TENCHR" FLAG
2)		.BUFW $TTYIN=

	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

2)		.BUFB $TTSAV=,12.
2)		.BUFW ENQFLG=		;COMMUNICATIONS IN PROGRESS
2)		.BUFW MSGNBR=		;COMMUNICATIONS MESSAGE NUMBER
2)		.BUFW COMNBR=		;COMMUNICATION NUMBER
2)		.BUFB COUTBF=,142.	;COMMUNICATIONS OUTPUT BUFFER
2)		.BUFW COUTSP=,2		;OUTPUT CONTROL CHARACTERS
2)		.BUFB CINBF=,142.	;COMMUNICATIONS INPUT BUFFER
2)		.BUFW CINSP=,2		;INPUT CONTROL CHARACTERS
2)		.BUFW $PRNTH=		;PRINT HEAD POSITION
2)		.BUFW $PGWID=		;PAGE WIDTH
2)		.BUFW $TPLIN=		;NUMBER OF LINES ON A PAGE
2)		.BUFW $TPLIT=		;LINES TALLY
2)		.BUFW $XOFLG=		;XOFF FLAG, -1 = NO PRINT
2)		.BUFW CTRLOF=		;CONTROL O FLAG
2)		.BUFW $EOLFLG=		;END OF LINE FLAG
2)		.BUFW $TTLKF=		;TTLOOK INPUT CHECKS INHIBIT
2)		.BUFW TILNWF=		;TTY INPUT WAIT FLAG
2)		.BUFW $FORCE=		;FORCE PRINTOUT FLAG
2)		.BUFW $TTYFL=		;TTY FILL PARAMETER
2)		.BUFW $0FLG=		;ZERO FILL FLAG
2)		.BUFW $NEG=		;NEGATE NUMBER INPUT FLAG
2)		.BUFW $SVH=
2)		.BUFW $SVM=
2)		.BUFW $TICHR=		;TTY DRIVER INPUT CHAR
2)		.BUFW $TOCHR=		;TTY DRIVER OUTPUT CHAR
2)		.BUFW DDTFLG=		;PDP-10 DDT INPUT MODE FLAG
2)	;CONSOLE PARAMETER STORAGE
2)		.BUFW $KONSP=		;SAVED STACK POINTER
2)		.BUFW ALLFLG=		;ALL PRINT FLAG
2)		.BUFW RPTFLG=		;COMMAND REPEAT FLAG
2)		.BUFW VERIFY=		;PROGRAM VERIFY FLAG
2)		.BUFW .EADR=		;EXAMINE 11 ADDRESS
2)		.BUFW $ECADR=		;EXAMINE C-RAM ADDRESS
2)		.BUFW $EDADR=		;EXAMINE D-RAM ADDRESS
2)		.BUFW $ADR=
2)		.BUFW .DFRDA=,3
2)		.BUFW .DPXAD=,2
2)		.BUFW L10ADR=,2		;LOAD 10 ADDRESS
2)		.BUFW TENRUN=		;TEN RUNNING FLAG
2)		.BUFW MONMODE=		;TEN MONITOR MODE FLAG
2)		.BUFW MTTYOF=		;MONITOR TTY OUTPUT IN PROGRESS
2)		.BUFW $TTYTIM=		;TTY TIMEOUT COUNT
2)	;BREAKPOINT STORAGE
2)		.BUFW $R0TMP=
2)		.BUFW $PCSAV=
2)		.BUFW $PSSAV=
2)		.BUFW $TEMP0=,3
2)		.BUFW $ADR1=
	1) SBST11.DEC vs. 2) SBST11.9	SRCCOM	04-17-76	14:26	PAGES 4,5

2)		.BUFW $SPSAV=
2)		.BUFW $R5SAV=
2)		.BUFW $R4SAV=
2)		.BUFW $R3SAV=
2)		.BUFW $R2SAV=
2)		.BUFW $R1SAV=
2)		.BUFW $R0SAV=
2)	;MISCELLANEOUS STORAGE
2)		.BUFW $EMADR=		;EMT ADDRESS (+2)
2)		.BUFW $SWTCH=		;SWITCHES
2)		.BUFW $$SVSP=
2)		.BUFW TEMP=
2)		.BUFW IFILEF=		;INDIRECT FILE FLAG
2)		.BUFW IFINP=		;INDIRECT STORAGE POINTER
2)		.BUFW JFILEF=		;DOUBLE INDIRECT FILE FLAG
2)		.BUFW JFINP=		;DOUBLE INDIRECT STORAGE POINTER
2)		.BUFW PRGRUN=		;PROGRAM RUNNING FLAG
2)		.BUFW MEMPEF=		;PARITY FLAG
2)		.BUFW .HCFLG=		;ALLOW HALT CONTINUE FLAG
2)		.BUFW .HCADR=		;HALT CONTINUE ADDRESS
2)		.BUFW DDTTM1=		;DDT MODE TIMEOUT COUNTS
2)		.BUFW DDTTM2=
2)		.BUFW $ECMD=,3		;DTE20 COMMAND STORAGE
2)		.BUFW $SAV20=,3		;PDP-10 SAVE 20 STORAGE
2)	;KL10 SUBROUTINE STORAGE
2)		.BUFW ZEROS=,3		;SOURCE OF 36 ZEROS
2)		.BUFW VMADAT=,3		;VMA & PC TEMP
2)		.BUFW XXDAT=		;DF WRITE TEMP
2)		.BUFW MMDAT=,3		;WWADR TEMP
2)		.BUFW WREADY=,3		;$WCRAM TEMP
2)		.BUFW SIGNL=
2)		.BUFW $BUFRC=,6		;$RCRAM TEMP
2)		.BUFW SIGNL2=
2)		.BUFW SIGNL3=
2)		.BUFW DDRAM=,3		;$DRAMAD TEMP
2)		.BUFW RDRTMP=,2		;$RDRAM TEMP
2)		.BUFW $DRAM=,6
2)		.BUFW $DDRMS=
2)		.BUFW $STDAT=		;$BURST TEMP
2)		.BUFW KLCLKR=		;KL10 CLOCK LOGICALLY RUNNING FLAG
2)		.BUFW TENDAT=,3		;PDP-10 INPUT DATA WORD
2)		.BUFW TENAC0=,2		;PDP-10 AC0 ADDRESS
2)		.BUFW C10CW=,3		;PDP-10 CLOCK WAIT COUNT
2)		.BUFW CLKCNT=,3		;PDP-10 CLOCK COUNT
2)	BUFCLR=	$$BUF
2)	;	.LIST LOC
2)	INFORM LOWEST VARIABLE,\$$BUF
